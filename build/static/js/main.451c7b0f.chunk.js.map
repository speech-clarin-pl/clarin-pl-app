{"version":3,"sources":["images/logo-clarin-pl.png","images/logo-clarin-pl-short.png","hoc/Auxiliary.js","containers/HomePage/Jumbotron/Jumbotron.js","components/UI/Input/Input.js","store/actions/repo.js","store/actions/actionsTypes.js","store/actions/home.js","store/actions/toolActions/recognition.js","containers/HomePage/LoginArea/LoginArea.js","containers/HomePage/DecoIntro/DecoIntro.js","containers/HomePage/HomeText/HomeText.js","components/AppFooter/AppFooter.js","components/TopBar/TopBar.js","containers/HomePage/HomePage.js","containers/ProjectPage/SettingBar/SettingBar.js","containers/ProjectPage/FooterTool/FooterTool.js","containers/ProjectPage/LeftSiteBar/LeftSiteBar.js","utils/utils.js","containers/ProjectPage/Dashboard/Dashboard.js","containers/ProjectPage/RecognitionTool/RecognitionItem/RecognitionItem.js","components/UI/DropFilesArea/DropFilesArea.js","components/UI/ButtonLeftBar/ButtonLeftBar.js","components/UI/DragAndDrop/DragAndDrop.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","containers/ProjectPage/RecognitionTool/RecognitionTool.js","store/actions/project.js","containers/ProjectPage/SegmentTool/SegmentItem/SegmentItem.js","store/actions/toolActions/segmentation.js","containers/ProjectPage/SegmentTool/SortableAudioList/SortableAudioList.js","containers/ProjectPage/SegmentTool/SortableTxtList/SortableTxtList.js","containers/ProjectPage/SegmentTool/SegmentTool.js","containers/ProjectPage/PreviewTool/TranscriptTool.js","store/actions/toolActions/preview.js","containers/ProjectPage/RepoBar/RepoBar.js","components/ErrorPage/ErrorPage.js","containers/ProjectPage/TabContainer/Tab/Tab.js","containers/ProjectPage/ProjectPage.js","containers/ProjectsListPage/ProjectListItem/ProjectListItem.js","containers/ProjectsListPage/ProjectsList/ProjectList.js","components/UI/Spinner/Spinner.js","components/UI/SingleInputForm/SingleInputForm.js","components/UI/ConfirmationForm/ConfirmationForm.js","containers/ProjectsListPage/ProjectsListPage.js","store/actions/projectsList.js","components/HelpPage/HelpPage.js","App.js","serviceWorker.js","store/utility.js","store/reducers/homeReducer.js","store/reducers/projectsListReducer.js","store/reducers/toolsReducers/recognitionReducer.js","store/reducers/toolsReducers/segmentationReducer.js","store/reducers/toolsReducers/previewReducer.js","store/reducers/repoReducer.js","store/reducers/projectReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","auxiliary","props","children","jumbotron","react_default","a","createElement","Auxiliary","className","join","input","inputElement","validationError","inputClasses","invalid","touched","push","inputtype","Object","assign","onChange","whenchanged","label","getProjectFilesForUser","userId","projectId","token","dispatch","console","log","axios","get","headers","Authorization","params","then","response","type","files","data","catch","error","getProjectFilesForUserActionFailed","handleRenameFolderActionFailed","toString","loginUserAction","isAuth","authLoading","userName","resStatus","resLoginStatus","logout","setLoggedIn","loginUser","userEmail","userPass","post","email","password","status","Error","localStorage","setItem","aftermilliseconds","expiryDate","Date","getTime","toISOString","autoLogoutAfter","message","loginUserActionFailed","updateFileState","fileID","percLoaded","initFileRecognition","file","entryId","FormData","append","content-type","sentEntryId","finishFileRecognitionAction","finishFileRecognitionActionFailed","LoginArea","state","loginform","loginemail","elementType","elementConfig","placeholder","value","validation","required","minLength","valid","loginpass","registerform","registerName","registeremail","registerpass","loginFormIsValid","registerFormIsValid","firstTimeAfterLogin","loginHandler","event","preventDefault","loginData","formLoginElement","_this","onLogIn","registerHandler","registerData","formRegisterElement","onRegister","inputRegisterChangedHandler","updatedRegisterForm","objectSpread","target","name","updatedRegisterName","checkValidity","updatedRegisterEmail","updatedregisterPass","formIsValid","inputField","setState","inputLoginChangedHandler","updatedLoginForm","updatedLoginEmail","updatedLoginPass","logOutHandler","onLogOut","history","rules","isValid","trim","length","prevProps","prevState","this","_this2","errorRegisterInfo","resRegistrationStatus","role","registrationMessage","errorLoginInfo","loginMessage","registerArea","onSubmit","Input_Input","disabled","loginArea","react_router_dom","to","onClick","Component","connect","homeR","loggedEmail","pass","authActions","put","finalMessage","i","msg","registerUserActionFailed","withRouter","decointro","btnclasses","href","hometext","id","appfooter","moment","format","topBar","czyInit","version","navClassNames","wide","clickLogo","src","logoShort","logoBig","alt","projectTitle","aria-haspopup","aria-expanded","homePage","TopBar_TopBar","language","changeLn","currLn","Jumbotron_Jumbotron","HomePage_LoginArea_LoginArea","DecoIntro_DecoIntro","HomeText_HomeText","AppFooter_AppFooter","settingBar","footerTool","leftSiteBar","czyTopPart","data-scrollbar","desc","getExt","path","match","split","slice","Dashboard","liczbaPlikowRepo","repoFiles","miejscePlikowRepo","map","size","LeftSiteBar_LeftSiteBar","SettingBar_SettingBar","filesToUploadRec","segmentEntry","bytes","sizes","parseInt","Math","floor","abs","concat","pow","toFixed","bytesToSize","location","pathname","replace","FooterTool_FooterTool","recR","filesToUpload","segR","repoR","RecognitionItem","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","reader","FileReader","foundEntry","allFiles","find","obj","fileUpload","componentWillUnmount","fileEntryId","onloadstart","evt","onprogress","lengthComputable","percentLoaded","round","loaded","total","onloadend","onerror","code","NOT_FOUND_ERR","alert","NOT_READABLE_ERR","ABORT_ERR","readAsBinaryString","startFileRecognition","fileId","onFileRecognition","previewItem","toURL","url","onOpenRecognitionAudioPreview","statusinfo","ikonki","nBytes","filesize","aMultiples","nMultiple","nApprox","removeIcon","onRemoveItem","loadedperc","Fragment","onGetProjectFilesForUser","projectR","currentProjectOwner","currentProjectID","recognitionActions","DropFilesArea","mainTitle","multiple","whenFilesChose","buttonLeftBar","iconClasses","iconType","ifdisabled","whenClicked","style","customeStyle","napis","dragAndDropStyles","position","dropIndicationStyles","top","left","right","bottom","width","height","color","backgroundColor","border","borderRadius","display","alignItems","justifyContent","DragAndDrop","drag","dropRef","React","createRef","handleDrag","e","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","handleDragOut","handleDrop","whenDropped","clearData","div","current","addEventListener","removeEventListener","ref","backdrop","show","clicked","modal","Backdrop_Backdrop","modalClosed","transform","opacity","RecognitionTool","extFiles","fileList","refusedFileList","fileExtention","onSetRefusionFiles","onOpenModalHandler","Array","from","forEach","newFile","uuid","v4","onDrop","inputControl","currentTarget","openModalHandler","closeModalHandler","onCloseModalHandler","startBatchRecognition","audioFilesArray","entry","audioFilesIds","onStartBatchRecognition","refusedFileNames","filelist","marginTop","RecognitionTool_RecognitionItem_RecognitionItem","key","Modal_Modal","modalDisplay","UI_DragAndDrop_DragAndDrop","UI_DropFilesArea_DropFilesArea","refusedFiles","SegmentItem","removeSegmentItem","onRemoveSegmentItem","startSegmentation","currentEntry","audioFile","audioEntry","txtFile","txtEntry","onInitSegmentProcess","onStartSegmentItem","refreshRepo","onRefreshRepo","statusIcon","starterIcon","processingStatus","segmentId","finishFileSegmentationSuccess","finishFileSegmentationFailed","segmentActions","sortableAudioList","_ref","listItems","val","data-id","lib_default","options","handle","animation","c","sortable","tag","order","sortableTxtList","SegmentTool","handleDropAudio","audiofiles","extAudioFiles","refusedAudioFileList","onSetRefusionAudioFiles","onAudioDrop","whenAudioFilesChose","handleDropTxt","txtfiles","extTxtFiles","refusedTxtFileList","onSetRefusionTxtFiles","onTxtDrop","whenTxtFilesChose","entrylist","SegmentTool_SegmentItem_SegmentItem","refusedAudioFileNames","refusedTxtFileNames","modalContent","ifRefusedAudio","SortableAudioList_SortableAudioList","audioList","onChangeAudioListOrder","SortableTxtList_SortableTxtList","txtList","onChangeTxtListOrder","audioFiles","txtFiles","idsOrder","audioIdsOrder","txtIdsOrder","TranscriptTool","handleTogglePlay","playing","wavesurfer","pause","play","onTooglePlaying","handlePosChange","pos","originalArgs","componentDidMount","WaveSurfer","create","container","waveColor","progressColor","responsive","plugins","on","bind","assertThisInitialized","updateAudioArea","onWeveSurferInitialized","stop","onAudioDisplayed","onUpdateAudioArea","fileKey","txtAreaChangedHandler","onUpdateTxtArea","onLoadAudioToWaveSurfer","audioFileUrl","load","_React$createElement","txtfileName","txtDisplayed","txtContent","audiofileName","waveSurferInitialized","audioDisplayed","headerTxtField","fontWeight","fontSize","headerAudioField","controlBtns","defineProperty","previewR","txtFileUrl","newValue","newContent","fileName","previewActions","ifyes","ifYes","repoBar","openPreview","handleCreateFolder","onHandleCreateFolder","handleCreateFiles","prefix","onHandleCreateFiles","handleRenameFolder","oldKey","newKey","onHandleRenameFolder","handleRenameFile","onHandleRenameFile","handleDeleteFolder","folderKey","onHandleDeleteFolder","handleDeleteFile","onHandleDeleteFile","handleSelect","handleSelectFile","handleSelectFolder","folder","handlePreviewOpen","czyjestem","includes","ext","onOpenTxtFileToPreview","onOpenAudioFileToPreview","handlePreviewClose","handleFolderOpen","handleFolderClose","startResizeRepo","window","Resize","stopResize","document","getElementById","projectPage","szerRepo","innerWidth","clientX","szerProject","offsetWidth","mount","querySelectorAll","onMouseDown","react_keyed_file_browser_default","icons","File","Image","PDF","Rename","Folder","FolderOpen","Delete","Loading","onCreateFolder","onCreateFiles","onMoveFolder","onMoveFile","onRenameFolder","onRenameFile","onDeleteFolder","onDeleteFile","onSelect","onSelectFile","onSelectFolder","onPreviewOpen","onPreviewClose","onFolderOpen","onFolderClose","currentProjectName","handleCreateFolderActionFailed","repoActions","handleCreateFilesAction","delete","handleDeleteFolderActionFailed","handleDeleteFileActionFailed","ifWaveSurferIsInitialized","fetch","text","content","fileUrl","fileContent","openTxtFileToPreviewAction","openAudioFileToPreviewAction","errorPage","whereToLink","search","activeClassName","title","ProjectPage","getItem","onSetLoggedIn","projectOwnerId","onInitProjectHandler","onClearRecoStore","onClearSegmentStore","onClearPreviewStore","Tab_Tab","react_router","component","render","ProjectPage_Dashboard_Dashboard","ErrorPage","RepoBar_RepoBar","prolistR","chosenProjectID","chosenProjectName","chosenProjectOwner","projectOwner","projectActions","projectListItem","wyborprojektu","modified","editName","deleteProject","projectsList","ifLoading","listHeader","siteBar","spinner","SingleInputForm","errorMessage","onSubmitHandler","textAlign","onChangeHandler","buttonLabel","confirmationForm","messageQuestion","projectName","onCancel","onOk","localActions","ProjectsListPage","newProjectName","modalTitle","currentValue","onGetProjectsList","duplicateProjectHandler","projectIndex","editNameProjectHandler","shareProjectHandler","removeProjectHandler","addNewProjectHandler","onNewProject","newProjectNameChangeHandler","editProjectNameSubmitHandler","onNameEdit","onNewProjectDone","actionType","onDelete","wyborProjektuOK","projektId","projektName","projektOwner","onProjectChoice","newProjectForm","UI_SingleInputForm_SingleInputForm","editProjectName","ConfirmationForm","localAction","ButtonLeftBar_ButtonLeftBar","toDisplay","projectList","ifError","ifProjectsLoading","Spinner_Spinner","projekt","ProjectListItem_ProjectListItem","_id","projektID","owner","projectCreated","ProjectsList_ProjectList","containers_ProjectPage_ProjectPage","newProjectCreated","projects","projectsLoading","localActionType","projectListActions","messageFromServer","responsedNewProject","addNewProjectAction","project","addNewProjectActionFailed","idprojektu","deleteProjectAction","newName","editNameProjectAction","projectEntry","editNameProjectActionFailed","getProjectsListAction","getProjectsListFailed","helpPage","addLocaleData","toConsumableArray","en","pl","messages","messages_pl","messages_en","App","navigator","currln","logoutHandler","onLogout","setAutoLogout","milliseconds","setTimeout","changeLnHandler","ln","remainingMilliseconds","index_es","locale","defaultLocale","containers_ProjectsListPage_ProjectsListPage","HelpPage_HelpPage","HomePage","homeActions","Boolean","hostname","updateObject","oldObject","updatedValues","initialState","homeReducer","arguments","undefined","action","logIn","_updateObject","removeItem","logOut","logInFailed","register","registerFailed","autoLogout","projectsListReducer","getProjectsList","choseProject","addProjectInit","addProjectDone","newProjectsList","addProject","addProjectFailed","shareProject","index","updatedProjects","removeProject","editNameFailed","openModal","closeModal","recoFileForPreview","recognitionReducer","dropFiles","initBatchRecognition","currentfileList","updatedEntry","itemId","newFilesToUpload","filter","item","removeRecognitionItem","openAudioRecPreview","clearRecoStore","setRefusedFiles","segmentationReducer","SegmentEntryList","AudioFileList","ilebrakuje","txtArray","audioentry","txtItem","audioArray","txtentry","dropAudioFiles","TxtFileList","dropTxtFiles","newAudioList","elem","changeAudioListOrder","newTxtList","changeTxtListOrder","newSegmentEntry","newEntry","initFileSegmentation","entryAudioId","entryTxtId","newsegmentEntry","czyzostawic","audioItem","removeSegmentEntry","clearSegmentStore","fileSegmentationSuccess","fileSegmentationFailed","setRefusedAudioFiles","setRefusedTxtFiles","audioContent","previewReducer","updateTxtPreview","updateAudioPreview","openTxtFilePreview","wsinit","openAudioFilePreview","togglePlayingPreview","clearPreviewStore","changeAudioDisplay","repoReducer","newfiles","repoCreateFolder","repoCreateFiles","newFiles","Moment","repoRenameFolder","repoRenameFile","substr","repoDeleteFolder","n","lastIndexOf","onlyFolders","substring","repoDeleteFile","repoGetUserProjectFiles","repoGetUserProjectFilesFailed","projectReducer","initProject","openModalProject","closeModalProject","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","defaults","baseURL","process","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.451c7b0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-clarin-pl.ab822e22.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-clarin-pl-short.0ea93d1c.png\";","\nconst auxiliary = (props) => props.children;\n\nexport default auxiliary;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './Jumbotron.css';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nconst jumbotron = (props) => {\n\n    let myclasses = [\"jumbotron\", \"CustomJumbo\"];\n\n    return(\n        <Aux>\n            <div className={myclasses.join(' ')}>\n                <div className=\"container\">\n                    <h1 className=\"display-4\">CLARIN-PL</h1>\n                    <p className=\"lead\">\n                        {\n/*\n\n <FormattedMessage\n                                id=\"Jumbotron.lead\"\n                                defaultMessage=\"Łatwa w użyciu platfroma do analizy sygnału mowy w nagraniach dźwiękowych\"\n                                />\n\n                                */\n                        }\n                        Łatwa w użyciu platfroma do analizy sygnału mowy w nagraniach dźwiękowych\n                       \n                    </p>\n                    <hr className=\"my-4\" />\n                    <p>\n                        Znajdziesz tutaj narzędzia do m.in. do rozpoznawania mowy, segmentacji oraz transkrypcji.\n                        <br></br>Korzystanie z serwisu wymaga zalozenia konta\n                    </p>\n                  \n              \n                          \n                   \n                {\n                    // <Link to=\"/projectsList\">\n                    //       <button className=\"btn btn-primary btn-lg btn-block gotoprojects\">\n                    //           Przejdz do listy projektow\n                    //        </button>\n                    // </Link>\n                }\n\n                    {\n                    /*\n                    <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">\n                        \n                        <FormattedMessage\n                                id=\"Jumbotron.register\"\n                                defaultMessage=\"Zarejestruj się\"\n                                />\n\n                    </a>\n                    */\n                    }\n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default jumbotron;","import React from 'react';\nimport './Input.css';\n\nconst input = (props) => {\n\n    let inputElement = null;\n    let validationError = null;\n\n    const inputClasses = ['Input', 'form-control'];\n\n    if(props.invalid && props.touched){\n        inputClasses.push('is-invalid');\n        validationError = <p>Wprowadź poprawdną wartość!</p>;\n    }\n\n    switch(props.inputtype) {\n        case('input'):\n            inputElement = <input \n                onChange={props.whenchanged}\n                className={inputClasses.join(' ')} {...props}/>;\n            break;\n        case('textarea'):\n            inputElement = <textarea \n                onChange={props.whenchanged}\n                className={inputClasses.join(' ')}\n                 {...props}/>\n            break;\n        default:\n            inputElement = <input \n                onChange={props.whenchanged}\n                className={inputClasses.join(' ')} {...props}/>\n    }\n\n    return (\n        <div className=\"Input\">\n            <label>{props.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    )\n};\n\nexport default input;","import * as actionTypes from './actionsTypes';\nimport axios from 'axios';\n\n//#################################################################\n//############## get user project files ######################\n//####################################################\n\nexport const getProjectFilesForUserAction = (userId, files) => {\n    return {\n        type: actionTypes.REPO_GET_USER_PROJECT_FILES,\n        files: files,\n    }\n}\n\nexport const getProjectFilesForUserActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_GET_USER_PROJECT_FILES_FAILED,\n        error: error,\n    }\n}\n\n// pobieram liste plikow w katalogu uzytkownika dla danego projektu\nexport const getProjectFilesForUser = (userId, projectId, token) => {\n    //console.log(userId)\n    //console.log(projectId)\n    return dispatch => {\n        console.log('getProjectFilesForUser');\n        // {\n        //     userId: userId,\n        //     projectId: projectId,\n        // },\n        axios.get(('/repoFiles/' + userId), {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n            params: {\n                projectId: projectId\n            }\n        })\n            .then(response => {\n\n                console.log(response)\n                dispatch(getProjectFilesForUserAction(userId, response.data.files));\n            })\n            .catch(error => {\n                dispatch(getProjectFilesForUserActionFailed(error));\n            });\n    }\n}\n\n//###########################################\n//#######   tworzenie nowego folderu\n//#########################################\n\nexport const handleCreateFolderAction = (key, message) => {\n    return {\n        type: actionTypes.REPO_CREATE_FOLDER,\n        key: key,\n        message: message,\n    }\n}\n\nexport const handleCreateFolderActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_CREATE_FOLDER_FAILED,\n        error: error.toString(),\n    }\n}\n\nexport const handleCreateFolder = (key, projectId, userId, token) => {\n    console.log('CREATE NEW FOLDER:' + key);\n    return dispatch => {\n        axios.post(('/repoFiles/createFolder/'), {\n            key: key, //np key: \"nowyfolder/\" lub \"nowyfolder/innypodfolder/\"\n            projectId: projectId,\n            userId: userId,\n        }, {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n            .then(response => {\n                console.log(response)\n                dispatch(handleCreateFolderAction(response.data.key, response.data.message));\n            })\n            .catch(error => {\n                dispatch(handleCreateFolderActionFailed(error));\n            });\n    }\n}\n\n//############################################\n//#########tworzenie nowych plikow\n//  TO DO: poki co nie ma mozliwosci wgrania plikow osobno do repo\n// tylko przez usluge\n//##############################################\n\nexport const handleCreateFilesAction = (files, prefix) => {\n    return {\n        type: actionTypes.REPO_CREATE_FILES,\n        files: files,\n        prefix: prefix,\n    }\n}\n\nexport const handleCreateFiles = (files, prefix) => {\n    console.log('CREATE NEW FILES:' + files);\n    return dispatch => {\n        dispatch(handleCreateFilesAction(files, prefix));\n    }\n}\n\n//#############################################\n//######### zmiana nazwy folderu\n//#############################################\nexport const handleRenameFolderAction = (oldKey, newKey, message) => {\n    return {\n        type: actionTypes.REPO_RENAME_FOLDER,\n        oldKey: oldKey,\n        newKey: newKey,\n        message: message,\n    }\n}\n\nexport const handleRenameFolderActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_RENAME_FOLDER_FAILED,\n        error: error.toString()\n    }\n}\n\nexport const handleRenameFolder = (oldKey, newKey, projectId, userId, token) => {\n    //console.log('RENAME FOLDER:' + oldKey + ' into ' + newKey);\n    //RENAME FOLDER:alaMaKota/ into alaMaKota222/\n    return dispatch => {\n        axios.put(('/repoFiles/renameFolder/'), {\n            oldKey: oldKey, \n            newKey: newKey,\n            userId: userId,\n            projectId: projectId,\n        }, {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n            .then(response => {\n                console.log(response)\n                //this.getProjectFilesForUser(userId, projectId, token);\n                dispatch(handleRenameFolderAction(response.data.oldKey, response.data.newKey, response.data.message));\n                //dispatch(handleRenameFolderAction(response.data.oldKey, response.data.newKey, response.data.message));\n            })\n            .catch(error => {\n                dispatch(handleRenameFolderActionFailed(error));\n            });\n    }\n}\n\n//#####################################################\n//################zmiana nazwy pliku/folderu\n//################ takze przenoszenie pliku/folderu\n//#####################################################\nexport const handleRenameFileAction = (oldKey, newKey, message) => {\n    return {\n        type: actionTypes.REPO_RENAME_FILE,\n        oldKey: oldKey,\n        newKey: newKey,\n        message: message\n    }\n}\n\nexport const handleRenameFileActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_RENAME_FILE,\n        error: error.toString()\n    }\n}\n\nexport const handleRenameFile = (oldKey, newKey, projectId, userId, token) => {\n    console.log('RENAME FILE:' + oldKey + ' into ' + newKey);\n    console.log('projectId:' + projectId );\n    console.log('token:' + token );\n    return dispatch => {\n        axios.put(('/repoFiles/renameFile/'), {\n            oldKey: oldKey, \n            newKey: newKey,\n            projectId: projectId,\n            userId: userId,\n        }, {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n            .then(response => {\n                console.log(response)\n                dispatch(handleRenameFileAction(response.data.oldKey, response.data.newKey, response.data.message));\n            })\n            .catch(error => {\n                dispatch(handleRenameFolderActionFailed(error));\n            });\n        \n    }\n}\n\n//############################################\n//########### usuwanie folderu ##############\n//##########################################\nexport const handleDeleteFolderAction = (folderKey) => {\n    return {\n        type: actionTypes.REPO_DELETE_FOLDER,\n        folderKey: folderKey,\n    }\n}\n\nexport const handleDeleteFolderActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_DELETE_FOLDER_FAILED,\n        error: error.toString(),\n    }\n}\nexport const handleDeleteFolder = (folderKey, projectId, userId,token) => {\n    console.log('DELETE FOLDER:' + folderKey);\n    return dispatch => {\n        axios.delete('/repoFiles/deleteFolder/', \n        {\n            data: { \n                folderKey: folderKey,  \n                projectId: projectId,\n                userId: userId,\n            },\n            headers: {\n               Authorization: 'Bearer ' + token\n           } \n       })\n\n           .then(response => {\n               dispatch(handleDeleteFolderAction(response.data.folderKey));\n           })\n           .catch(error => {\n               console.log(error)\n               dispatch(handleDeleteFolderActionFailed(error));\n           });\n\n      \n    }\n}\n\n//##############################################\n//############# usuwanie pliku\n//#############################################\nexport const handleDeleteFileAction = (fileKey, message) => {\n    return {\n        type: actionTypes.REPO_DELETE_FILE,\n        fileKey: fileKey,\n        message: message,\n    }\n}\n\nexport const handleDeleteFileActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_DELETE_FILE_FAILED,\n        error: error.toString(),\n    }\n}\n\nexport const handleDeleteFile = (fileKey, projectId, userId, token) => {\n    console.log('DELETE FILE:' + fileKey);\n    return dispatch => {\n            axios.delete('/repoFiles/deleteFile/' + projectId, \n            {\n                data: { \n                    fileKey: fileKey,\n                    projectId: projectId,\n                    userId: userId,\n                 },\n                headers: {\n                   Authorization: 'Bearer ' + token\n               } \n           })\n               .then(response => {\n                    dispatch(handleDeleteFileAction(response.data.fileKey, response.data.message));\n               })\n               .catch(error => {\n                   console.log(error)\n                   dispatch(handleDeleteFileActionFailed(error));\n               });\n    }\n}\n\n","\n\n\n// home page actions\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\nexport const SET_AUTO_LOGOUT = 'SET_AUTO_LOGOUT';\nexport const REGISTER = 'REGISTER';\nexport const REGISTER_FAILED = 'REGISTER_FAILED';\nexport const SET_CURRENT_PROJECT_ID = 'SET_CURRENT_PROJECT_ID';\n\n// project list actions\nexport const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const GET_PROJECTS_LIST = 'GET_PROJECTS_LIST';\nexport const GET_PROJECTS_LIST_FAILED = 'GET_PROJECTS_LIST_FAILED';\nexport const CHOSE_PROJECT = 'CHOSE_PROJECT';\n\nexport const ADD_PROJECT = 'ADD_PROJECT';\nexport const ADD_PROJECT_FAILED = 'ADD_PROJECT_FAILED';\nexport const ADD_PROJECT_INIT = 'ADD_PROJECT_INIT';\nexport const ADD_PROJECT_DONE = 'ADD_PROJECT_DONE';\n\nexport const DUPLICATE_PROJECT = 'DUPLICATE_PROJECT';\nexport const SHARE_PROJECT = 'SHARE_PROJECT';\nexport const REMOVE_PROJECT = 'REMOVE_PROJECT';\nexport const EDIT_NAME = 'EDIT_NAME';\nexport const EDIT_NAME_FAILED = 'EDIT_NAME_FAILED';\n\n//project page\nexport const INIT_PROJECT = 'INIT_PROJECT';\nexport const OPEN_MODAL_PROJECT = 'OPEN_MODAL_PROJECT';\nexport const CLOSE_MODAL_PROJECT = 'CLOSE_MODAL_PROJECT';\nexport const CLEAR_RECO_STORE = 'CLEAR_RECO_STORE';\nexport const CLEAR_SEGMENT_STORE = 'CLEAR_SEGMENT_STORE';\nexport const CLEAR_PREVIEW_STORE = 'CLEAR_PREVIEW_STORE';\n\n// recognition tab\nexport const INIT_BATCH_RECOGNITION = 'INIT_BATCH_RECOGNITION';\nexport const INIT_FILE_RECOGNITION = 'INIT_BATCH_RECOGNITION';\nexport const DROP_FILES = 'DROP_FILES';\nexport const UPDATE_FILE_STATE = 'UPDATE_FILE_STATE';\nexport const OPEN_AUDIO_RECOGNITION_PREVIEW = 'OPEN_AUDIO_RECOGNITION_PREVIEW';\nexport const REMOVE_RECOGNITION_ITEM = 'REMOVE_RECOGNITION_ITEM';\nexport const REFUSE_RECO_FILES = 'REFUSE_RECO_FILES';\n\n// segmentation tab\n//export const INIT_BATCH_SEGMENTATION = 'INIT_BATCH_SEGMENTATION';\nexport const INIT_FILE_SEGMENTATION = 'INIT_FILE_SEGMENTATION';\nexport const DROP_AUDIO_FILES = 'DROP_AUDIO_FILES';\nexport const DROP_TXT_FILES = 'DROP_TXT_FILES';\nexport const CHANGE_AUDIO_LIST_ORDER = 'CHANGE_AUDIO_LIST_ORDER';\nexport const CHANGE_TXT_LIST_ORDER = 'CHANGE_TXT_LIST_ORDER';\nexport const REMOVE_SEGMENT_ENTRY = 'REMOVE_SEGMENT_ENTRY';\nexport const FILE_SEGMENTATION_SUCCESS = 'FILE_SEGMENTATION_SUCCESS';\nexport const FILE_SEGMENTATION_FAILED = 'FILE_SEGMENTATION_FAILED';\nexport const REFUSE_SEGMENT_AUDIO_FILES = 'REFUSE_SEGMENT_AUDIO_FILES';\nexport const REFUSE_SEGMENT_TXT_FILES = 'REFUSE_SEGMENT_TXT_FILES';\n\n\n// repo\nexport const REPO_UPLOAD_FILE = 'REPO_UPLOAD_FILE';\nexport const REPO_UPLOAD_FILE_FAILED = 'REPO_UPLOAD_FILE_FAILED';\nexport const REPO_CREATE_FOLDER = 'REPO_CREATE_FOLDER';\nexport const REPO_CREATE_FOLDER_FAILED = 'REPO_CREATE_FOLDER_FAILED';\nexport const REPO_CREATE_FILES = 'REPO_CREATE_FILES';\nexport const REPO_CREATE_FILES_FAILED = 'REPO_CREATE_FILES_FAILED';\nexport const REPO_RENAME_FOLDER = 'REPO_RENAME_FOLDER';\nexport const REPO_RENAME_FOLDER_FAILED = 'REPO_RENAME_FOLDER_FAILED';\nexport const REPO_RENAME_FILE = 'REPO_RENAME_FILE';\nexport const REPO_RENAME_FILE_FAILED = 'REPO_RENAME_FILE_FAILED';\nexport const REPO_DELETE_FOLDER = 'REPO_DELETE_FOLDER';\nexport const REPO_DELETE_FOLDER_FAILED = 'REPO_DELETE_FOLDER_FAILED';\nexport const REPO_DELETE_FILE = 'REPO_DELETE_FILE';\nexport const REPO_DELETE_FILE_FAILED = 'REPO_DELETE_FILE_FAILED';\nexport const REPO_GET_USER_PROJECT_FILES = 'REPO_GET_USER_PROJECT_FILES';\nexport const REPO_GET_USER_PROJECT_FILES_FAILED = 'REPO_GET_USER_PROJECT_FILES_FAILED';\n\n//preview\nexport const UPDATE_TXT_PREVIEW = 'UPDATE_TXT_PREVIEW';\nexport const UPDATE_AUDIO_PREVIEW = 'UPDATE_AUDIO_PREVIEW';\nexport const OPEN_TXT_FILE_PREVIEW = 'OPEN_TXT_FILE_PREVIEW';\nexport const OPEN_AUDIO_FILE_PREVIEW = 'OPEN_AUDIO_FILE_PREVIEW';\nexport const WAVESURFER_INITIALIZED = 'WAVESURFER_INITIALIZED';\nexport const TOGGLE_PLAYING_PREVIEW = 'TOGGLE_PLAYING_PREVIEW';\nexport const CHANGE_AUDIO_DISPLAYED = 'CHANGE_AUDIO_DISPLAYED';\n","import * as actionTypes from './actionsTypes';\nimport axios from 'axios';\n\n//######################################################\n//##################### rejestracja #######################\n//#######################################################\n\nexport const registerUserActionFailed = (error) => {\n\n    let finalMessage = error.response.data.message;\n    let status = error.response.status;\n\n    if(error.response.data.data.length >= 1) {\n        for(let i =0; i< error.response.data.data.length; i++){\n            finalMessage = finalMessage + '\\n';\n            finalMessage = finalMessage + error.response.data.data[i].msg;\n        }\n    }\n\n    return {\n        type: actionTypes.REGISTER_FAILED,\n        message: finalMessage,\n        resRegistrationStatus: status,\n    }\n}\n\nexport const registerUserAction = (message, userId, resStatus) => {\n    return {\n        type: actionTypes.REGISTER,\n        message: message,\n        userId: userId,\n        resRegistrationStatus: resStatus,\n    }\n}\nexport const registerUser = (userName, userEmail, userPass) => {\n    return dispatch => {\n        \n        axios.put('/auth/registration',{\n            name: userName,\n            email: userEmail,\n            password: userPass,\n        })\n            .then(response => {\n                console.log(response)\n                dispatch(registerUserAction(response.data.message, response.data.userId, response.status));\n            })\n            .catch(error => {\n                //console.log(error)\n                dispatch(registerUserActionFailed(error));\n            });\n    }\n\n    \n}\n\n//######################### logowanie ################\n//########################################\n\n\nexport const loginUserAction = (isAuth, token, authLoading, userId,userName,resStatus) => {\n    return {\n        type: actionTypes.LOG_IN,\n        isAuth: isAuth,\n        token: token,\n        authLoading: authLoading,\n        userId: userId,\n        userName: userName,\n        resLoginStatus: resStatus,\n\n    }\n}\n\nexport const loginUserActionFailed = (error) => {\n    \n    let finalMessage = error.response.data.message;\n    let status = error.response.status;\n\n    return {\n        type: actionTypes.LOG_IN_FAILED,\n        isAuth: false,\n        authLoading: false,\n        message: finalMessage,\n        resLoginStatus: status,\n    }\n}\n\nexport const setAutoLogout = (aftermilliseconds) => {\n    console.log('setAutoLogout! after:' + aftermilliseconds);\n    return {\n        type: actionTypes.SET_AUTO_LOGOUT,\n        autoLogoutAfter: aftermilliseconds,\n    }\n}\n\nexport const logout = () => {\n    console.log('LOG OUT');\n    return {\n        type: actionTypes.LOG_OUT\n    }\n}\n\n// wywolywane pod odwiezeniu strony gdy token jest jeszcze w przegladarce\nexport const setLoggedIn = (userId, userName, token) => {\n    return loginUserAction(true,token,false,userId,userName)\n}\n\nexport const loginUser = (userEmail, userPass) => {\n    return dispatch => {\n        \n        axios.post('/auth/login',{\n            email: userEmail,\n            password: userPass\n        })\n            .then(response => {\n                if(response.status === 422){\n                    throw new Error('Validation failed.');\n                }\n\n                if(response.status !== 200 & response.status !== 201){\n                    console.log('Error');\n                    throw new Error('Could not authenticate')\n                }\n\n                console.log(response);\n                //ustawic state na auth false i authloading na false\n                //przekierowanie\n                \n                localStorage.setItem('token',response.data.token);\n                localStorage.setItem('userId', response.data.userId);\n                localStorage.setItem('userName', response.data.userName);\n\n                dispatch(loginUserAction(true, response.data.token,false,response.data.userId,response.data.userName, response.status));\n                //gasnie za 10h\n                const remainingMilliseconds = 60 * 60 * 10000;\n                const expiryDate = new Date(\n                    new Date().getTime() + remainingMilliseconds\n                );\n                localStorage.setItem('expiryDate', expiryDate.toISOString());\n                dispatch(setAutoLogout(remainingMilliseconds));\n                //this.props.history.replace('/projectsList');\n\n            })\n            .catch(error => {\n                console.log(error)\n                dispatch(loginUserActionFailed(error));\n            });\n    }\n   \n}","import * as actionTypes from '../actionsTypes';\nimport axios from 'axios';\n\nexport const dropFiles = (files) => {\n    return {\n        type: actionTypes.DROP_FILES,\n        files: files\n    }\n}\n\n//################# removing item #################\nexport const removeRecognitionItem = (fileId) => {\n    //console.log('REMOVING: ' + fileId)\n    return {\n        type: actionTypes.REMOVE_RECOGNITION_ITEM,\n        fileId: fileId,\n    }\n}\n\n//################# updating file state ###########\nexport const updateFileState = (fileID, status, percLoaded) => {\n    return {\n        type: actionTypes.UPDATE_FILE_STATE,\n        fileID: fileID,\n        status: status,\n        percLoaded: percLoaded,\n    }\n}\n\n\n//########################################\n//####### SINGLE FILE RECOGNITION ########\n//#########################################\n\nexport const finishFileRecognitionAction = (message, entryId) => {\n    return updateFileState(entryId, 'done', 100);\n\n}\n\nexport const finishFileRecognitionActionFailed = (message, entryId) => {\n    return updateFileState(entryId, 'error', 0);\n}\n\nexport const initFileRecognition = (file, entryId, userId, projectId) => {\n    return dispatch => {\n\n        const data = new FormData();\n\n        data.append('audioFiles', file);\n        data.append('audioFilesIds', entryId);\n        data.append('projectId', projectId);\n        data.append('userId', userId);\n\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n\n\n        axios.post('/recognition/singleFile', data, config)\n            .then(response => {\n                const message = response.data.message;\n                const entryId = response.data.sentEntryId.sentEntryId;\n                //console.log(message)\n                // console.log(entryId)\n                dispatch(finishFileRecognitionAction(message, entryId));\n                //console.log(response);\n            })\n            .catch(error => {\n                dispatch(finishFileRecognitionActionFailed('Recognition error', entryId));\n                // console.log(error);\n            })\n    }\n}\n\n//######### opening file recognition to preview #####\nexport const openRecognitionAudioPreview = (entryId) => {\n    return {\n        type: actionTypes.OPEN_AUDIO_RECOGNITION_PREVIEW,\n        fileID: entryId,\n    }\n}\n\n\n//####### BATCH RECOGNITION ########\nexport const initBatchRecognition = (audioFilesArray, audioFilesIds) => {\n    return dispatch => {\n\n        let data = new FormData();\n\n        for (var i = 0; i < audioFilesArray.length; i++) {\n            data.append('audioFiles', audioFilesArray[i]);\n        }\n\n        data.append('audioFilesIds', audioFilesIds);\n\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n\n\n        axios.post('/recognition/multipleFiles', data, config)\n            .then(response => {\n\n                // console.log(response);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n}\n\nexport const setRefusedFiles = (refusedFiled) => {\n    return {\n        type: actionTypes.REFUSE_RECO_FILES,\n        refusedFileList: refusedFiled,\n    }\n}\n\n\n\n//export const INIT_BATCH_RECOGNITION = 'INIT_BATCH_RECOGNITION';\n//export const INIT_FILE_RECOGNITION = 'INIT_BATCH_RECOGNITION';\n//export const DROP_FILES = 'DROP_FILES';\n//export const UPDATE_FILE_STATE = 'UPDATE_FILE_STATE';","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './LoginArea.css';\nimport {withRouter, Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\nimport {connect} from 'react-redux';\nimport * as actionTypes from '../../../store/actions/actionsTypes';\nimport Input from '../../../components/UI/Input/Input';\nimport * as authActions from '../../../store/actions/index';\n\n\nclass LoginArea extends Component {\n\n    state = {\n        loginform: {\n            \n            loginemail: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Podaj swój email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            loginpass: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Wpisz hasło'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            },\n        },\n        registerform: {\n            registerName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Podaj swoje imie'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 2\n                },\n                valid: false,\n                touched: false\n            },\n            registeremail: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Podaj swój email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            registerpass: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Wpisz hasło'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            },\n        },\n        loginFormIsValid:false,\n        registerFormIsValid: false,\n        firstTimeAfterLogin: false,\n    }\n\n    \n\n    //simple validator....\n    checkValidity(value, rules){\n        let isValid = true;\n\n       \n        if(rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength  && isValid;\n        }\n\n        return isValid;\n\n    }\n\n    loginHandler = (event) => {\n        event.preventDefault();\n\n        //I am transforming the state to more compact form\n        let loginData = {};\n        for (let formLoginElement in this.state.loginform) {\n            loginData[formLoginElement] = this.state.loginform[formLoginElement].value;\n        }\n\n        //console.log(loginData);\n\n        this.props.onLogIn(loginData.loginemail, loginData.loginpass);\n\n\n        //console.log(this.props)\n        \n    }\n\n    registerHandler = (event) => {\n\n        event.preventDefault();\n\n        //I am transforming the state to more compact form\n        let registerData = {};\n        for (let formRegisterElement in this.state.registerform) {\n            registerData[formRegisterElement] = this.state.registerform[formRegisterElement].value;\n        }\n\n        //console.log(registerData);\n        \n        this.props.onRegister(registerData.registerName, registerData.registeremail, registerData.registerpass);\n        \n    }\n\n\n    //updated at every input in register form\n    inputRegisterChangedHandler = (event) => {\n\n        const updatedRegisterForm = {\n            ...this.state.registerform\n        }\n\n        switch(event.target.name){\n            case 'registerName':\n                //immutable update\n                const updatedRegisterName = {\n                    ...updatedRegisterForm.registerName\n                }\n                updatedRegisterName.value = event.target.value;\n                updatedRegisterName.valid = this.checkValidity(updatedRegisterName.value, updatedRegisterName.validation);\n                updatedRegisterName.touched = true;\n                //assembling back after update\n                updatedRegisterForm.registerName = updatedRegisterName;\n\n                break;\n            case 'registerEmail':\n                //immutable update\n                const updatedRegisterEmail = {\n                    ...updatedRegisterForm.registeremail\n                }\n                updatedRegisterEmail.value = event.target.value;\n                updatedRegisterEmail.valid = this.checkValidity(updatedRegisterEmail.value, updatedRegisterEmail.validation);\n                updatedRegisterEmail.touched = true;\n                //assembling back after update\n                updatedRegisterForm.registeremail = updatedRegisterEmail;\n\n                break;\n            case 'registerPass':\n\n                const updatedregisterPass = {\n                    ...updatedRegisterForm.registerpass\n                }\n                updatedregisterPass.value = event.target.value;\n                updatedregisterPass.valid = this.checkValidity(updatedregisterPass.value, updatedregisterPass.validation);\n                updatedregisterPass.touched = true;\n                updatedRegisterForm.registerpass = updatedregisterPass;\n                break;\n        }\n\n        //sprawdzam czy cały formularz jest poprawny\n        let formIsValid = true;\n        for (let inputField in updatedRegisterForm){\n            formIsValid = updatedRegisterForm[inputField].valid && formIsValid;\n        }\n    \n        this.setState({registerform: updatedRegisterForm, registerFormIsValid: formIsValid});\n    }\n\n\n    //updated at every input in login form\n    inputLoginChangedHandler = (event) => {\n\n        const updatedLoginForm = {\n            ...this.state.loginform\n        }\n\n        switch(event.target.name){\n            case 'loginEmail':\n\n               //immutable update\n                const updatedLoginEmail = {\n                    ...updatedLoginForm.loginemail\n                }\n                updatedLoginEmail.value = event.target.value;\n                updatedLoginEmail.valid = this.checkValidity(updatedLoginEmail.value, updatedLoginEmail.validation);\n                updatedLoginEmail.touched = true;\n                //assembling back after update\n                updatedLoginForm.loginemail = updatedLoginEmail;\n                break;\n            case 'loginPass':\n\n                const updatedLoginPass = {\n                    ...updatedLoginForm.loginpass\n                }\n                updatedLoginPass.value = event.target.value;\n                updatedLoginPass.valid = this.checkValidity(updatedLoginPass.value, updatedLoginPass.validation);\n                updatedLoginPass.touched = true;\n                //assembling back after update\n                updatedLoginForm.loginpass = updatedLoginPass;\n                break;\n        }\n\n        //sprawdzam czy cały formularz jest poprawny\n        let formIsValid = true;\n        for (let inputField in updatedLoginForm){\n            formIsValid = updatedLoginForm[inputField].valid && formIsValid;\n        }\n\n\n        console.log(formIsValid)\n\n        this.setState({loginform: updatedLoginForm, loginFormIsValid: formIsValid});\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n\n        //sprawdzam czy jestesmy zalogowaniu poraz pierwszy\n        //jezeli tak to przechodzimy do listy projektow\n        if (this.props.isAuth !== prevProps.isAuth) {\n            //this.props.history.push(\"/projectsList\");\n        }\n      }\n\n      logOutHandler = () => {\n        this.props.onLogOut();\n        this.props.history.push(\"/\");\n      }\n\n    \n    render() {\n        \n        //console.log(this.state.registerform)\n       \n        let myclasses = [\"container-fluid\", \"LoginArea\"];\n\n        let messageForLogin = '';\n        if(this.props.isAuth==false){\n            messageForLogin = 'Zaloguj się';\n        } else {\n            messageForLogin = 'Jesteś zalogowany jako:';\n\n        }\n\n        let errorRegisterInfo = null;\n        if(this.props.resRegistrationStatus === 201 || this.props.resRegistrationStatus === 200){\n            errorRegisterInfo = (\n                <div className=\"alert alert-success\" role=\"alert\">\n                     {this.props.registrationMessage}\n                </div>\n            )\n        } else if(this.props.resRegistrationStatus !== 0){\n                 errorRegisterInfo = (\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                         {this.props.registrationMessage}\n                    </div>\n                )\n    \n        }\n\n        let errorLoginInfo = null;\n        if(this.props.resLoginStatus === 201 || this.props.resLoginStatus === 200){\n            errorLoginInfo = (\n                <div className=\"alert alert-success\" role=\"alert\">\n                     {this.props.loginMessage}\n                </div>\n            )\n        } else if(this.props.resLoginStatus !== 0){\n            errorLoginInfo = (\n                <div className=\"alert alert-warning\" role=\"alert\">\n                     {this.props.loginMessage}\n                </div>\n            )\n        }\n\n        \n\n        const registerArea = (\n            <div className=\"col\">\n                            \n                            <h3>Zarejestruj się</h3>\n                           \n                            {\n                                this.props.registrationMessage !== ''?\n                                errorRegisterInfo : null\n                            }\n                             \n                            <form onSubmit={this.registerHandler}>  \n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"text\"\n                                        label=\"Imie\"\n                                        placeholder=\"Podaj swoje imie\"\n                                        name=\"registerName\"\n                                        touched = {this.state.registerform.registerName.touched}\n                                        invalid={!this.state.registerform.registerName.valid}\n                                        whenchanged={(event) => this.inputRegisterChangedHandler(event)}/>\n                                </div> \n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"text\"\n                                        label=\"Adres Email\"\n                                        placeholder=\"Podaj adres email\"\n                                        name=\"registerEmail\"\n                                        touched = {this.state.registerform.registeremail.touched}\n                                        invalid={!this.state.registerform.registeremail.valid}\n                                        whenchanged={(event) => this.inputRegisterChangedHandler(event)}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"password\"\n                                        label=\"Hasło\"\n                                        placeholder=\"Podaj hasło\"\n                                        name=\"registerPass\"\n                                        touched = {this.state.registerform.registerpass.touched}\n                                        invalid={!this.state.registerform.registerpass.valid}\n                                        whenchanged={(event) => this.inputRegisterChangedHandler(event)}/>\n                                </div>\n                                \n                                <button disabled={!this.state.registerFormIsValid} className=\"btn btn-primary\">\n                                    Zarejestruj się\n                                </button>\n                            </form>\n                               \n                        </div>\n        );\n\n        const loginArea = (\n            <div className=\"col\">\n                            \n\n                            {\n                                !this.props.isAuth? \n\n                            \n                            <form onSubmit={this.loginHandler}> \n                                <h3>Zaloguj się</h3>\n                                \n                                {\n                                    this.props.loginMessage !== ''?\n                                    errorLoginInfo: null \n                                }\n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"text\"\n                                        label=\"Adres Email\"\n                                        placeholder=\"Wpisz adres email\"\n                                        name=\"loginEmail\"\n                                        touched = {this.state.loginform.loginemail.touched}\n                                        invalid={!this.state.loginform.loginemail.valid}\n                                        whenchanged={(event) => this.inputLoginChangedHandler(event)}/>\n                                    \n                                </div>\n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"password\"\n                                        label=\"Hasło\"\n                                        placeholder=\"Podaj hasło\"\n                                        name=\"loginPass\"\n                                        touched = {this.state.loginform.loginpass.touched}\n                                        invalid={!this.state.loginform.loginpass.valid}\n                                        whenchanged={(event) => this.inputLoginChangedHandler(event)}/>\n                                </div>\n                            \n                              \n                                    <button disabled={!this.state.loginFormIsValid} className=\"btn btn-primary\" >\n\n                                        Zaloguj się\n                                       \n                                    </button>\n                            </form>   \n                            \n                            : \n                            \n                            <div>\n\n                                <h4>Witaj: <span className=\"loggedAs\">{this.props.userName}</span></h4>\n\n                                <Link to=\"/projectsList\">\n                                    <button className=\"btn btn-primary btn-lg btn-block gotoprojects\">\n                                        Przejdź do listy projektów\n                                    </button>\n                                </Link>\n\n                                <div> lub </div>\n\n                                <button \n                                    className=\"btn btn-secondary\"\n                                    onClick={this.logOutHandler}>\n\n                                    Wyloguj się\n                                \n                                </button>\n\n                            </div>\n\n                            }\n                                \n                        </div>\n        );\n     \n        return(\n            <Aux>\n                <div className={myclasses.join(' ')}>\n                    <div className=\"container\">\n                        \n                        <div className=\"row\">\n                            \n                            {this.props.isAuth? loginArea : [registerArea, loginArea]}\n                                                \n                        </div>\n                    </div>\n                </div>\n            </Aux>\n        );\n    }\n   \n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.homeR.isAuth,\n        loggedEmail: state.homeR.email,\n        userName: state.homeR.userName,\n        registrationMessage: state.homeR.registrationMessage,\n        loginMessage: state.homeR.loginMessage,\n        resRegistrationStatus: state.homeR.resRegistrationStatus,\n        resLoginStatus: state.homeR.resLoginStatus,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        //onLogIn: (login, pass) => dispatch({type:actionTypes.LOG_IN, login: login, pass: pass}),\n        onLogIn: (email, pass) => dispatch(authActions.loginUser(email, pass)),\n        onRegister: (userName, userEmail, userPass) => dispatch(authActions.registerUser(userName, userEmail, userPass)),\n        onLogOut: () => dispatch(authActions.logout())\n   \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LoginArea));","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './DecoIntro.css';\n\nconst decointro = (props) => {\n\n    let myclasses = [\"container-fluid\", \"DecoIntro\"];\n\n    let btnclasses = [\"btn\", \"btn-secondary\",  \"btn-lg btn-block\", \"introButton\"];\n\n    return(\n        <Aux>\n            <div className=\"container-fluid\">\n                \n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <a href=\"#mowa\" className={btnclasses.join(' ')}>\n                                    Narzędzia do rozpoznawania mowy\n                            </a>\n                            <a href=\"#pliki\" className={btnclasses.join(' ')}>\n                                    Przetwarzanie dużej ilości plików\n                            </a>\n                        </div>\n                        <div className=\"col\">\n                            <a href=\"#bezpieczenstwo\" className={btnclasses.join(' ')}>\n                                    Bezpieczeństwo danych\n                            </a>\n                            <a href=\"#latwosc\" className={btnclasses.join(' ')}>\n                                    Łatwość obsługi\n                            </a>\n                        </div>\n                    </div>\n                </div> \n            </div>\n            <div className={myclasses.join(' ')}>\n                <div className=\"container\">\n                    \n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default decointro;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './HomeText.css';\n\nconst hometext = (props) => {\n\n    let myclasses = [\"container\", \"HomeText\"];\n    return(\n        <Aux>\n            <div className={myclasses.join(' ')}>\n                <div className=\"row\">\n                    <dir className=\"col\" >\n                        <h3 id=\"mowa\">Narzędzia do rozpoznawania mowy</h3>\n                        <p>Serwis udostępnia narzędzia do rozpoznawania mowy z nagrań dźwiękowych. Robi to w sposób automatyczny, wyręczając użytkownika w dokonywaniu transkrypcji w sposób manualny. </p>\n\n                        <h3 id=\"pliki\">Przetwarzanie dużej ilości plików</h3>\n                        <p>W przypadku posiadania w swoich zasobach wielu plików które wymagają analizy, istnieje możliwość  uruchomienia zadania rozpoznawania na wszystkich wgranych plikach jednocześnie.</p>\n                    </dir>\n                    <dir className=\"col\" id=\"bezpieczenstwo\">\n                        <h3 id=\"bezpieczenstwo\">Bezpieczeństwo danych</h3>\n                        <p>Twoje pliki są chronione a dostęp do nich jest możliwy tylko dla zarejestrowanych użytkowników. Dzięki podglądowi plików w repozytorium, istnieje możliwość ich zarządzania oraz usuwania po wykonaniu zadania. </p>\n                        \n                        <h3 id=\"latwosc\">Łatwość obsługi</h3>\n                        <p>Serwis został tak zaprojektowany aby w maksymalny sposób ułatwić jego obsługę. Nawigacja w serwisie nie sprawi żadnego problemu. Interfejs użytkownika przewiduje dostępność wszystkich funkcjonalności w jednym miejscu, bez konieczności nawigowania w strukturze serwisu.</p>\n                    </dir>\n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default hometext;","import React from 'react';\nimport Aux from '../../hoc/Auxiliary';\nimport './AppFooter.css';\nimport { FormattedMessage } from 'react-intl';\nimport moment from 'moment';\n\nconst appfooter = (props) => {\n\n    let myclasses = [\"text-muted\", \"container-fluid\", \"AppFooter\"];\n    return (\n        <Aux>\n            <footer className={myclasses.join(' ')}>\n                <div className=\"container\">\n\n                    <div>\n                        CLARIN-PL {moment().format('YYYY')}\n                    </div>\n                    <div className=\"contactInfo\">\n                        <div>Main developers: Danijel Korzinek (back-end): danijel@pjwstk.edu.pl, Mariusz Kleć (front-end): mklec@pjwstk.edu.pl </div>\n                    </div>\n                </div>\n            </footer>\n        </Aux>\n    );\n}\n\nexport default appfooter;","import React from 'react';\nimport './TopBar.css';\nimport logoBig from '../../images/logo-clarin-pl.png';\nimport logoShort from '../../images/logo-clarin-pl-short.png';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\n\nconst topBar = (props) => {\n\n    //czy poczatkowa wersja topbara czy rozbudowana....\n    let czyInit = props.version === \"init\" ? true : false;\n\n    //definicja klas na topbar\n    let navClassNames = [\"TopBar\", \"navbar\", \"navbar-expand\"];\n    if (czyInit) navClassNames.push(\"init\");\n\n\n\n    return (\n\n\n        <nav className={navClassNames.join(' ')}>\n\n            {\n                //czy szeroki topBar czy nie\n            }\n            <div className={props.wide === \"no\" ? \"container\" : \"container-fluid\"}>\n\n                {\n                    //kliknięcie w logo\n                }\n                <Link to=\"/\" className=\"navbar-brand\" onClick={props.clickLogo}>\n                    <div className=\"logoPlace\">\n                        <img src={czyInit ? logoShort : logoBig} alt=\"clarin-logo\" className=\"logo\" />\n                    </div>\n                </Link>\n\n\n                {\n                    //czy wyświetlać info o projekcie\n                }\n                <div className=\"projectTitleEdit\">\n                    {czyInit ? null : (\n                        <div>\n                            <Link to=\"/projectsList\">\n                                <i className={[\"fas\", \"fa-arrow-left\"].join(' ')}></i>\n                            </Link>\n                            <span className=\"editField\">{props.projectTitle}</span>\n                            {\n                                /*\n                                    <a href=\"#\"><i className={[\"fas\", \"fa-edit\"].join(' ')}></i></a>\n                                */\n                            }\n\n                        </div>\n                    )}\n                </div>\n\n\n\n\n                <ul className=\"navbar-nav\">\n\n\n                    {\n                        /*\n                      \n                      <li className={[\"nav-item\", \"dropdown\"].join(' ')}>\n                      <a  className={[\"nav-link\", \"dropdown-toggle\", \"navLink\"].join(' ')} \n                          href=\"#\" \n                          id=\"navbarDropdownMenuLinkjezyk\" \n                          role=\"button\" \n                          data-toggle=\"dropdown\" \n                          aria-haspopup=\"true\" \n                          aria-expanded=\"false\">\n                          <i className={[\"fas\", \"fa-globe-europe\"].join(' ')}></i> {props.currLn}\n                      </a>\n                      <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLinkjezyk\">\n                          <a className=\"dropdown-item\" onClick={()=> props.changeLn(\"pl\")}>PL</a>\n                          <a className=\"dropdown-item\" onClick={() => props.changeLn(\"en\")}>EN</a>\n                      </div>\n                      </li>\n                          */\n                    }\n\n                    {\n                        // pomoc \n                    }\n\n                    <li className=\"nav-item\">\n                        <Link to=\"/help\" className={[\"nav-link\", \"navLink\"].join(' ')}\n\n                            id=\"navbarDropdownMenuLinkpomoc\"\n                            role=\"button\"\n                            aria-haspopup=\"true\"\n                            aria-expanded=\"false\">\n\n                            <i className=\"fas fa-question-circle\"></i>\n\n                            Pomoc\n\n                        </Link>\n                    </li>\n\n\n                    {\n                        // konto \n\n\n                        /*\n        \n                        { czyInit ? null : (\n                        <li className=\"nav-item\">\n                            <a className={[\"nav-link\", \"navLink\"].join(' ')}\n                               href=\"#\" \n                               id=\"navbarDropdownMenuLinkkonto\" \n                               role=\"button\" \n                               aria-haspopup=\"true\" \n                               aria-expanded=\"false\">\n                               <i className=\"fas fa-user-circle\"></i> \n                                \n                               <FormattedMessage\n                                    id=\"TopBar.konto\"\n                                    defaultMessage=\" Konto\"\n                                    />\n                                    \n                                    </a>\n                        </li>\n                        )}\n                                */\n\n                    }\n                </ul>\n\n            </div>\n\n        </nav>\n    );\n}\n\nexport default topBar;","import React from 'react';\nimport Jumbotron from './Jumbotron/Jumbotron';\nimport LoginArea from './LoginArea/LoginArea';\nimport DecoIntro from './DecoIntro/DecoIntro';\nimport HomeText from './HomeText/HomeText';\nimport AppFooter from '../../components/AppFooter/AppFooter';\nimport TopBar from '../../components/TopBar/TopBar';\nimport Aux from '../../hoc/Auxiliary';\n\n\nconst homePage = (props) => {\n    \n    return(\n        <Aux>\n            <TopBar  \n                version=\"init\" \n                wide=\"no\" \n                language=\"pl\" \n                projectTitle=\"\"\n                changeLn = {props.changeLn}\n                currLn = {props.currLn}\n                 />\n            <Jumbotron />\n           \n           {\n                <LoginArea />\n           }\n            \n           \n            <DecoIntro />\n            <HomeText />\n            <AppFooter />\n        </Aux>\n    );\n}\n\n\n\nexport default homePage;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './SettingBar.css';\n\nconst settingBar = (props) => {\n    return(\n        <Aux>\n            <div className={\"SettingBar\"}>\n                <nav className=\"navbar navbar-expand-lg\">\n                    <div className=\" navbar-collapse\">\n                    \n                        {\n                            //TO DO\n                        }\n\n                    </div>\n                </nav>\n            </div>\n        </Aux>\n    );\n}\n\nexport default settingBar;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './FooterTool.css';\nimport moment from 'moment';\n\nconst footerTool = (props) => {\n    return(\n        <Aux>\n            <div className=\"FooterTool\">\n                \n                <div>\n                CLARIN-PL {moment().format('YYYY')}\n                </div>\n                <div className=\"contactInfo\">\n                    Main developers: <br></br>\n                    Danijel Korzinek: danijel@pjwstk.edu.pl<br></br>\n                    Mariusz Kleć: mklec@pjwstk.edu.pl<br></br>\n                </div>\n                \n                \n            </div>\n        </Aux>\n    );\n}\n\nexport default footerTool;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './LeftSiteBar.css';\n\n\nconst leftSiteBar = (props) => {\n\n    return(\n        <Aux>\n\n            <div className=\"LeftSiteBar\" id=\"LeftSiteBar\">\n\t\t\t\t<div className={props.czyTopPart===\"true\" ? \"topPart\" : \"resetTopPart\"}>\n\t\t\t\t\t\n\t\t\t\t</div>\n\n                <div className={props.czyTopPart===\"true\" ? \"hintPanel\" : \"resetHintPanel\"}>\n                            <div className=\"btn-group-vertical btn-block\" id=\"hint-buttons\">\n\n                                {props.children}\n\n                            </div>\n\n                            <div id=\"hint-content\"  data-scrollbar>\n                                <div className=\"container-fluid texts\">\n                                    {props.desc} \n                                </div> \n                            </div>\n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default leftSiteBar;","export function bytesToSize(bytes){\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return 'no files';\n    const i = parseInt(Math.floor(Math.log(Math.abs(bytes)) / Math.log(1024)), 10);\n    if (i === 0) return `${bytes} ${sizes[i]})`;\n    return `${(bytes / (1024 ** i)).toFixed(1)} ${sizes[i]}`;\n}\n\nexport function getExt(path){\n    return (path.match(/(?:.+..+[^\\/]+$)/ig) != null) ? path.split('.').slice(-1): 'null';\n}","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport SettingBar from '../SettingBar/SettingBar';\nimport './Dashboard.css';\nimport FooterTool from '../FooterTool/FooterTool';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\nimport { connect } from 'react-redux';\nimport {withRouter, Link } from 'react-router-dom';\nimport {bytesToSize} from '../../../utils/utils';\n\nclass Dashboard extends Component {\n\n      \n\n    render(){\n\n        let liczbaPlikowRepo = this.props.repoFiles.length;\n        let miejscePlikowRepo = 0;\n        this.props.repoFiles.map(file => {\n            return miejscePlikowRepo = miejscePlikowRepo + file.size;\n        });\n\n        return(\n            <Aux>\n    \n                <LeftSiteBar \n                    czyTopPart=\"true\"\n                    desc=\"W tym miejscu znajdują się statystyki aktualnie wykonywanych usług oraz przestrzeni zajmowanej przez wgrane pliki do projektu\" />\n    \n                <SettingBar />\n    \n    \n                <section className={\"Content\"} data-scrollbar>\n    \n                    <div className={[\"container-fluid\", \"Dashboard\"].join(' ')}>\n                    <div className=\"tool-desc\">\n                        <p>\n                            Obecnie dwie usługi posiadają interfejs graficzny: rozpoznawanie mowy oraz segmentacja. Pozostałe usługi dostępne są w poprzedniej wersji strony dostępnej <a href=\"http://mowa.clarin-pl.eu/tools/\" target=\"blank\">pod tym linkiem</a>.\n                        </p>\n                    </div>\n    \n                    <div className=\"tool-body\">\n    \n                    \n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"card mb-3\">\n                                    <div className={[\"card-header\", \"cardHeader\"].join(' ')}>Aktualności</div>\n                                    <div className=\"card-body text-dark\">\n                                    <h5 className=\"news-title\">Wersja beta nowego serwisu </h5>\n                                    <div className=\"news-date\">02.07.2019</div>\n                                    <p className=\"news-body\">Miło nam przywitać Cię w panelu nowego serwisu który właśnie wystartował. Wszelkie uwagi na temat jego funkcjonowania beda mile widziane. Kontakt do developerow: Danijel Korzinek: danijel@pjwstk.edu.pl, Mariusz KLec: mklec@pjwstk.edu.pl</p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"card mb-3\">\n                                    <div className={[\"card-header\", \"cardHeader\"].join(' ')}>Aktualnie działające procesy</div>\n                                    <div className=\"card-body text-dark\">\n    \n                                    <div className=\"row mb-3\">\n                                        <div className=\"col\">\n                                            <h5 className=\"news-title\">Rozpoznawanie:</h5>\n                                            <p>Całkowita licza plików w kolejce: ({this.props.filesToUploadRec.length})</p>\n                                            \n                                            {\n                                                /*\n                                            <p>Procent przetworzonych plików:</p>\n                                            <div className=\"progress\">\n                                                <div className=\"progress-bar\" role=\"progressbar\"  aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">25%</div>\n                                            </div>\n                                                */\n                                            }\n                                            \n                                        </div>\n                                    </div>\n    \n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <h5 className=\"news-title\">Segmentacja:</h5>\n                                            <p>Całkowita licza plików w kolejce: (\n                                                {this.props.segmentEntry.length}))</p>\n                                            {\n                                                /*\n                                                <p>Procent przetworzonych plików:</p>\n                                                <div className=\"progress\">\n                                                    <div className=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"15\" aria-valuemin=\"0\" aria-valuemax=\"100\">25%</div>\n                                                </div>\n                                                */\n                                            }\n                                            \n                                        </div>\n                                    </div>\n                                    \n                                        \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n    \n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"card mb-3\">\n                                    <div className={[\"card-header\", \"cardHeader\"].join(' ')}>Użycie repozytorium</div>\n                                    <div className=\"card-body text-dark\">\n                                        <p> Liczba plikow w repozytorium: ({liczbaPlikowRepo})</p>\n                                        <p> Zajmowana pamiec: ({bytesToSize(miejscePlikowRepo)})</p>\n                                     \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <div className=\"card mb-3\">\n                                    <div className={[\"card-header\", \"cardHeader\"].join(' ')}>Szybkie linki</div>\n                                    <div className=\"card-body text-dark\">\n                                      \n                                      <p> \n                                        <Link to={this.props.location.pathname.replace('dashboard','recognition')}>\n                                            <button type=\"button\" className=\"btn btn-primary btn-block op-btn\">\n                                                <i className=\"fas fa-comments\"></i> Rozpoznawanie mowy\n                                            </button>\n                                        </Link>\n                                      </p>\n                                      <p>\n                                        <Link to={this.props.location.pathname.replace('dashboard','segment')}>\n                                            <button type=\"button\" className=\"btn btn-primary btn-block op-btn\">\n                                                <i className=\"fas fa-cogs\"></i> Segmentacja</button>\n                                        </Link>\n                                      </p>\n                                      <p>\n                                        <Link to=\"/help\"> \n                                             <button type=\"button\" className=\"btn btn-primary btn-block op-btn\"><i className=\"fas fa-question-circle\"></i> Pomoc</button>\n                                        </Link>\n                                     </p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n    \n    \n                    </div>\n    \n                \n    \n                    <p> </p>\n                                \n                    </div>\n    \n                    <FooterTool />\n    \n                </section>\n    \n                \n            </Aux>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        filesToUploadRec: state.recR.filesToUpload, //pliki do rozpoznawania\n        segmentEntry: state.segR.segmentEntry, //pliko do segmentacji \n        repoFiles: state.repoR.files,\n    }\n  }\n  \n  const mapDispatchToProps = dispatch => {\n    return {\n      //onOpenModalHandler: (actionType,projectId, projectName) => dispatch(projectListActions.openModal(actionType,projectId, projectName)),\n \n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dashboard));\n\n","import React, {Component} from 'react';\nimport Aux from '../../../../hoc/Auxiliary';\nimport './RecognitionItem.css';\nimport * as actionTypes from '../../../../store/actions/actionsTypes';\nimport * as recognitionActions from '../../../../store/actions/index';\nimport {connect} from 'react-redux';\nimport {withRouter } from 'react-router-dom'\n \n\nclass RecognitionItem extends Component {\n\n    constructor(props){\n        super(props);\n\n       // this.state = {\n        //    file: foundfile,\n       // }\n\n        //console.log(foundfile)\n    }\n    \n    \n\n    componentWillMount = () => {\n       // console.log(\"COMPOJNENT DID MOUNT\")\n       this.reader = new FileReader(); \n\n        //wszytskie do tej pory wgrane pliki z reducera\n        let allFiles =  this.props.allFiles;\n        //znajduje plik przekazany jako parametr we wszystkich plikach przekazanych z reducera\n        const foundEntry = allFiles.find(obj => obj.id == this.props.fileID);\n    // [{\n        // file: File {name: \"__mowa16000.wav\", lastModified: 1560968256333, lastModifiedDate: Wed Jun 19 2019 20:17:36 GMT+0200 (Central European Summer Time), webkitRelativePath: \"\", size: 1235820, …}\n        // id: \"01f0a209-a29f-407a-9b8a-12cdebd1e1fd\"\n        // loadedperc: 0\n        // status: \"toload\"\n    // }]\n\n       //upload file only if the status is not loaded\n       console.log(foundEntry.status)\n       if(foundEntry.status !== 'loaded' && \n          foundEntry.status !== 'done' &&\n          foundEntry.status !== 'error' &&\n          foundEntry.status !== 'progress' &&\n          foundEntry.status !== 'ready') {\n            console.log(\"Wlaczam upload pliku\")\n            this.fileUpload(foundEntry.file, foundEntry.id);\n       }\n\n    }\n\n    componentWillUnmount = () => {\n       //this.reader.abort();\n    }\n\n    fileUpload = (file, fileEntryId) => {\n        \n        this.reader.onloadstart = (evt) => {\n            console.log(\"ONLOADSTART\");\n\n            // let updatedFile = {\n            //     ...this.state.file,\n            //     status: 'toload',\n            //     loadedperc: 0\n            // };\n            // this.setState({\n            //     file: updatedFile\n            // })\n\n            //console.log(\"onloadstart\");\n\n              this.props.updateFileState(fileEntryId, 'toload', 0);\n        }\n    \n\n        this.reader.onprogress = (evt) => {\n            console.log(\"ONPROGRESS\");\n            if (evt.lengthComputable) {\n                var percentLoaded = Math.round((evt.loaded / evt.total) * 100);\n                // Increase the progress bar length.\n               // console.log(\"loading....\" + percentLoaded + \"%\");\n                if (percentLoaded < 100) {\n                 // console.log(percentLoaded + \"%\");\n\n                    // let updatedFile = {\n                    //     ...this.state.file,\n                    //     status: 'toload',\n                    //     loadedperc: percentLoaded\n                    // };\n                    // this.setState({\n                    //     file: updatedFile\n                    // })\n\n                    this.props.updateFileState(fileEntryId, 'toload', percentLoaded);\n\n                    //this.props.updateFileState(this.state.file.id, 'toload', percentLoaded);\n                    //this.props.updateFileState(this.state.file.id, 'toload', percentLoaded);\n\n                  \n                }\n            }\n        }\n\n        // this.reader.onload = (evt) => {\n        //     console.log(\"ONLOAD\");\n        //      //this.props.updateFileState(this.state.file.id, 'loaded', 0);\n        //  };\n\n        this.reader.onloadend = (evt) => {\n            console.log(\"ONLOADEND\");\n            // let updatedFile = {\n            //     ...this.state.file,\n            //     status: 'loaded',\n            //     loadedperc: 100\n            // };\n            // this.setState({\n            //     file: updatedFile\n            // })\n\n            this.props.updateFileState(fileEntryId, 'loaded', 100);\n            //this.props.updateFileState(this.state.file.id, 'loaded', 100);\n        }\n\n        this.reader.onerror = (evt) => {\n            switch(evt.target.error.code) {\n                case evt.target.error.NOT_FOUND_ERR:\n                  alert('File Not Found!');\n                  break;\n                case evt.target.error.NOT_READABLE_ERR:\n                  alert('File is not readable');\n                  break;\n                case evt.target.error.ABORT_ERR:\n                  break; // noop\n                default:\n                  alert('An error occurred reading this file.');\n              };\n\n            //   let updatedFile = {\n            //     ...this.state.file,\n            //     status: 'error',\n            //     loadedperc: 0\n            // };\n            // this.setState({\n            //     file: updatedFile\n            // })\n\n            this.props.updateFileState(fileEntryId, 'error', 0);\n            //this.props.updateFileState(this.state.file.id, 'error', 0);\n              //this.props.updateFileState(this.state.file.id, 'error', 0);\n        }\n\n        console.log(\"reader zaczyna czytanie pliku: \")\n        console.log(file)\n        this.reader.readAsBinaryString(file);\n\n      }\n\n\n      startFileRecognition = (fileId) => {\n        let allFiles =  this.props.allFiles;\n        //znajduje plik przekazany jako parametr we wszystkich plikach przekazanych z reducera\n        const foundEntry = allFiles.find(obj => obj.id == this.props.fileID);\n\n        this.props.updateFileState(fileId, 'progress', 100);\n        this.props.onFileRecognition(foundEntry.file, foundEntry.id, this.props.userId, this.props.projectId );\n      }\n\n      previewItem = (fileID) => {\n       \n        let toURL = this.props.match.url;\n        toURL = toURL.replace('recognition','preview')\n        console.log(toURL)\n        this.props.history.push({\n            pathname: toURL,\n            \n            });\n\n\t\tthis.props.onOpenRecognitionAudioPreview(fileID);\n      }\n    \n\n    render(){\n\n        let statusinfo = null;\n\n        let ikonki = null;\n\n        let allFiles =  this.props.allFiles;\n        const foundEntry = allFiles.find(obj => obj.id == this.props.fileID);\n\n        // formatowanie wielkosci pliku\n        let nBytes = foundEntry.file.size;\n        let filesize = nBytes + \" bytes\";\n\n        for (let aMultiples = [\"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"], nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {\n            filesize = nApprox.toFixed(1) + \" \" + aMultiples[nMultiple];\n        }\n\n        const removeIcon = (\n            <Aux>\n                <a className=\"actionIcon remove\" onClick={() => this.props.onRemoveItem(this.props.fileID)}>\n                    <i className=\"fas fa-times \" ></i>\n                </a>\n            </Aux>\n        );\n\n        const previewIcon = null;\n        // const previewIcon = (\n        //     <Aux>\n        //         <a className=\"actionIcon preview\" onClick={() => this.previewItem(this.props.fileID)}>\n        //             <i className=\"fas fa-eye\"></i>\n        //         </a>\n        //     </Aux>\n        // );\n\n\n        switch(foundEntry.status){\n            case ('toload'):\n                    statusinfo = (<span className=\"loading\">\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"sr-only\">loading... </span>\n                    </div>\n    \n                         Ładowanie pliku {foundEntry.loadedperc + '%'}\n                    </span>);\n\n                    ikonki = (\n                        <Aux>\n                            {removeIcon}\n                        </Aux>\n                    )\n\n\n                break;\t\n            case ('ready'):\n                    statusinfo = <span className=\"ready\"><i className=\"fas fa-check\"></i> Gotowe</span>;\n                    ikonki = (\n                        <Aux>\n                        {previewIcon}\n                        <a href=\"#\" className=\"actionIcon download\"><i className=\"fas fa-download\"></i></a>\n                        <a href=\"#\" className=\"actionIcon downloadRepo\"><i className=\"fas fa-cloud-download-alt\"></i></a>\n                        {removeIcon}\n                        </Aux>\n                    )\n                break;\n            case ('loaded'):\n                    statusinfo = <span className=\"uploaded\"><i className=\"fas fa-check\"></i> Załadowany</span>;\n                    ikonki = (\n                        <>\n                        <a onClick={(fileId)=>this.startFileRecognition(this.props.fileID)} className=\"actionIcon recognitionIcon\"><i className=\"fas fa-comments\"></i></a>\n                        {previewIcon}\n                        {removeIcon}\n                        </>\n                    )\n                break;\n            case ('error'):\n                    statusinfo = <span className=\"error\"><i className=\"fas fa-exclamation-triangle\"></i> Błąd</span>;\n                    ikonki = (\n                        <Aux>\n                            {removeIcon}\n                        </Aux>\n                    )\n                break;  \n            case ('progress'):\n                    statusinfo = (<span className=\"inprogress\">\n                                <div className=\"spinner-border text-primary\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n    \n                                 Rozpoznawanie...\n                            </span>);\t\n                    ikonki = (\n                        <Aux>\n                            \n                            \n                            {removeIcon}\n                        </Aux>\n                    )\t\t\n                break;\n            case ('done'):\n                    statusinfo = <span className=\"done\"><i className=\"fas fa-check\"></i> Rozpoznawanie zakonczone</span>;\t\n                    this.props.onGetProjectFilesForUser(this.props.userId, this.props.projectId, this.props.token)\n                    ikonki = (\n                        <Aux>\n                            \n                            {previewIcon}\n                            {removeIcon}\n                        </Aux>\n                    )\t\t\n                break;  \n            default:\n                    statusinfo = null;\n                    ikonki = null;\n        }\n\n       // console.log(\"status: \" + this.state.file.status)\n        \n        return(\n            <Aux>\n                  <div className={[\"row\", \"fileItem\", \"RecognitionItem\"].join(' ')}>\n                        <div className=\"col-sm file-info\">\n                            <i className=\"fas fa-desktop\"></i>\n                            <span className={\"fileName\"}>{foundEntry.file.name}</span>\n                            <span className={\"fileSize\"}>({filesize})</span>\n                        </div>\n    \n    \n                        <div className=\"col-sm-auto file-status\">\n                            {statusinfo}\n                        </div>\n                        <div className={[\"col-sm\", \"fileIcons\"].join(' ')}>\n                            {ikonki}\n                        </div>\n    \n    \n                    </div>\n            </Aux>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        allFiles: state.recR.filesToUpload,\n        userId: state.projectR.currentProjectOwner,\n        projectId: state.projectR.currentProjectID,\n        token: state.homeR.token,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n       updateFileState: (fileID, status,percLoaded) => dispatch(recognitionActions.updateFileState(fileID, status,percLoaded)),\n       onGetProjectFilesForUser: (userId, projectId, token) => dispatch(recognitionActions.getProjectFilesForUser(userId,projectId, token)),\n       onFileRecognition: (file, entryId,userId, projectId) => dispatch(recognitionActions.initFileRecognition(file, entryId, userId, projectId)),\n       onRemoveItem:(fileId) => dispatch(recognitionActions.removeRecognitionItem(fileId)),\n       onOpenRecognitionAudioPreview:(entryId) => dispatch(recognitionActions.openRecognitionAudioPreview(entryId))\n       // onRepoUpdate: (userId, projectId, token) => dispatch(recognitionActions.getProjectFilesForUser(userId,projectId, token))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(RecognitionItem));","import React, {Component} from 'react';\nimport './DropFilesArea.css';\n\nclass DropFilesArea extends Component {\n\n      \n      render() {\n\n        return (\n        <div className=\"DropFilesArea\">\n          <div id=\"react-file-drop\">\n                    <div className=\"uploadFromDiskArea\">\n                        <h2>{this.props.mainTitle}</h2>\n                        <p>{this.props.desc}</p>\n                \n                        <input \n                          id=\"file-input\" \n                          type=\"file\"\n                          multiple\n                          onChange={this.props.whenFilesChose}\n                           />\n                        <i className=\"fas fa-upload\"></i>\n                    </div>\n            </div>\n         </div>\n        );\n      }\n}\n\nexport default DropFilesArea;","import React from 'react';\nimport './ButtonLeftBar.css';\n\nconst buttonLeftBar = (props) => {\n\n    let iconClasses = [\"fas\", props.iconType];\n    const ifdisabled = props.disabled? true:false;\n    return (\n        <button disabled={ifdisabled} \n            className=\"btn btn-primary btn-lg btn-block ButtonLeftBar\" \n            onClick={props.whenClicked}\n            style={props.customeStyle}>\n            <i className={iconClasses.join(' ')}></i>\n            {props.napis}\n        </button>\n    );\n}\n\nexport default buttonLeftBar;","import React, { Component } from 'react';\nimport './DragAndDrop.css';\n\nconst dragAndDropStyles = {\n  position: 'relative',\n};\n\nconst dropIndicationStyles = {\n  position: 'absolute',\n  top: '0px',\n  left: '0px',\n  right: '0px',\n  bottom: '0px',\n  width: '100%',\n  height: '100%',\n  color: '#3498db',\n  backgroundColor: 'rgba(255,255,255,0.9)',\n  border: '4px dotted #3498db',\n  borderRadius: '10px',\n  display:'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\n\n\nclass DragAndDrop extends Component {\n  state = {\n    drag: false\n  }\n\n  dropRef = React.createRef();\n \n  handleDrag = (e) => {\n    console.log(\"handleDrag\")\n    e.preventDefault()\n    e.stopPropagation()\n  }\n  handleDragIn = (e) => {\n    console.log(\"handleDragIn \" + this.dragCounter)\n    e.preventDefault()\n    e.stopPropagation()\n    this.dragCounter++\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      this.setState({drag: true})\n    }\n  }\n  handleDragOut = (e) => {\n    console.log(\"handleDragOut \" + this.dragCounter)\n    e.preventDefault()\n    e.stopPropagation()\n    this.dragCounter--\n    if (this.dragCounter === 0) {\n      this.setState({drag: false})\n    }\n  }\n  handleDrop = (e) => {\n    console.log(\"handleDrop\")\n    console.log(e)\n    e.preventDefault()\n    e.stopPropagation()\n    this.setState({drag: false})\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      this.props.whenDropped(e.dataTransfer.files)\n      e.dataTransfer.clearData()\n      this.dragCounter = 0    \n    }\n  }\n  componentDidMount() {\n    let div = this.dropRef.current;\n    this.dragCounter = 0  \n    div.addEventListener('dragenter', this.handleDragIn)\n    div.addEventListener('dragleave', this.handleDragOut)\n    div.addEventListener('dragover', this.handleDrag)\n    div.addEventListener('drop', this.handleDrop)\n  }\n  componentWillUnmount() {\n    let div = this.dropRef.current\n    div.removeEventListener('dragenter', this.handleDragIn)\n    div.removeEventListener('dragleave', this.handleDragOut)\n    div.removeEventListener('dragover', this.handleDrag)\n    div.removeEventListener('drop', this.handleDrop)\n  }\n  render() {\n    return (\n\n      <div className=\"DragAndDrop\" style={dragAndDropStyles} ref={this.dropRef} >\n\n        {\n            this.state.drag?\n              <div className=\"dropIndication\" style={dropIndicationStyles}>\n                  <h2>Upuść pliki tutaj</h2>\n              </div> \n              : \n              null\n        }\n\n        {this.props.children}\n      </div>\n\n    )\n  }\n}\nexport default DragAndDrop","import React from 'react';\nimport './Backdrop.css';\n\nconst backdrop = (props) => {\n    return props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null;\n}\n\nexport default backdrop;","import React from 'react';\nimport './Modal.css';\nimport Aux from '../../../hoc/Auxiliary';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst modal = (props) => (\n\n    <Aux>\n        <Backdrop show={props.show} clicked={props.modalClosed} />\n        <div className=\"Modal\"\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0',\n            }}>\n            \n            {props.children}\n        </div>\n    </Aux>\n);\n\nexport default modal;","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './RecognitionTool.css';\nimport SettingBar from '../SettingBar/SettingBar';\nimport FooterTool from '../FooterTool/FooterTool';\nimport RecognitionItem from './RecognitionItem/RecognitionItem';\nimport DropFilesArea from '../../../components/UI/DropFilesArea/DropFilesArea';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\nimport ButtonLeftBar from '../../../components/UI/ButtonLeftBar/ButtonLeftBar';\nimport DragAndDrop from '../../../components/UI/DragAndDrop/DragAndDrop';\nimport {connect} from 'react-redux';\nimport * as recognitionActions from '../../../store/actions/index';\nimport Modal from '../../../components/UI/Modal/Modal';\nimport {getExt} from '../../../utils/utils';\nimport uuid  from 'uuid';\n\nclass RecognitionTool extends Component {\n\n    handleDrop = (files) => {\n        //extending the files by additionnal info about the status and load percentage\n        //console.log(\"RECI HANDLE DROP\")\n        //console.log(files)\n        let extFiles = [];\n\n        let fileList = [];\n        let refusedFileList = [];\n\n        for(var i=0;i<files.length;i++){\n            let file = files[i];\n            let fileExtention = getExt(file.name)[0];\n            //rozpoznaje tylko pliki audio\n            if(fileExtention === \"wav\" ||\n               fileExtention === \"WAV\" ||\n               fileExtention === \"mp3\" ||\n               fileExtention === \"au\"){\n                fileList.push(file);\n            } else {\n               refusedFileList.push(file);\n            }  \n        } \n\n        if(refusedFileList.length > 0){\n            this.props.onSetRefusionFiles(refusedFileList);\n            this.props.onOpenModalHandler();\n        }\n\n        Array.from(fileList).forEach(file => {\n            let newFile = Object.assign({},file);\n            newFile.file = file;\n            newFile.status = 'toload';\n            newFile.loadedperc = 0;\n            newFile.id = uuid.v4();\n            extFiles.push(newFile);\n        });\n\n        this.props.onDrop(extFiles);\n    }\n\n   \n\n    //kiedy uzytkownik recznie wybral pliki\n    whenFilesChose = (e) => {\n        const inputControl = e.currentTarget;\n        let fileList = [];\n        let refusedFileList = [];\n        for(var i=0;i<inputControl.files.length;i++){\n            let file = inputControl.files[i];\n            let fileExtention = getExt(file.name)[0];\n            //rozpoznaje tylko pliki audio\n            if(fileExtention === \"wav\" ||\n               fileExtention === \"WAV\" ||\n               fileExtention === \"mp3\" ||\n               fileExtention === \"au\"){\n               fileList.push(inputControl.files[i]);\n            } else {\n               refusedFileList.push(inputControl.files[i]);\n            }  \n        } \n\n        if(refusedFileList.length > 0){\n            this.props.onSetRefusionFiles(refusedFileList);\n            this.props.onOpenModalHandler();\n        }\n       \n        \n        this.handleDrop(fileList);\n    }\n\n\n    //otwiera okno modalne\n    openModalHandler = () => {\n        this.props.onOpenModalHandler();\n    }\n\n    //zamyka okno modalne\n    closeModalHandler = () => {\n        this.props.onCloseModalHandler();\n    }\n\n    //rozpoczynam rozpoznawanie \n    startBatchRecognition = () => {\n\n        //wydobywam sama tablica plikow z entry \n        //bo entry to moja struktura danych\n        const audioFilesArray = this.props.filesToUpload.map(entry => {\n            return entry.file;\n        })\n\n        const audioFilesIds = this.props.filesToUpload.map(entry => {\n            return entry.id;\n        })\n \n        //console.log(audioFilesArray)\n\n        this.props.onStartBatchRecognition(audioFilesArray, audioFilesIds);\n        this.closeModalHandler();\n    }\n\n    render(){\n\n        let refusedFileNames = null;\n        if(this.props.refusedFileList.length > 0){\n            refusedFileNames = this.props.refusedFileList.map(file=>{\n                return <div>{file.name}</div>;\n            })\n        }\n\n        \n        let filelist = (\n            <h4 style={{marginTop: '10px'}}>Wgraj pliki do rozpoznawania</h4>\n        )\n\n       \n\n        if(this.props.filesToUpload.length > 0 ){\n        \n            filelist = this.props.filesToUpload.map((file,i) =>\n                <RecognitionItem key={\"key\"+i} \n                fileID={file.id}/>\n             )\n        }\n        \n\n       // console.log(this.state.filesToUpload)\n        \n\n        return(\n            <Aux>\n\n                <Modal\n                    show={this.props.modalDisplay}\n                    modalClosed={this.closeModalHandler}\n                    >\n\n                        <div className=\"alert alert-warning\" role=\"alert\">\n                            <p>Ponizsze pliki nie sa plikami audio. \n                                <br></br>Nie zostana one dodane do kolejki rozpoznawania\n                            </p>\n                            {refusedFileNames }\n                        </div>\n                    \n         \n                    \n                    <button type=\"button\" \n                        className=\"btn btn-outline-secondary\"\n                        onClick={this.closeModalHandler}>OK</button>\n                </Modal>\n\n{\n    /*\n                <LeftSiteBar czyTopPart=\"true\" desc=\"Tutaj opis do rozpoznawania\" >\n\n                    <ButtonLeftBar \n                        napis=\"Rozpocznij rozpoznawanie\" \n                        iconType=\"fa-comments\" \n                        whenClicked={this.openModalHandler} />\n                    <ButtonLeftBar napis=\"Zapisz wynik na Twoim dysku\" disabled={true} iconType=\"fa-download\" whenClicked={null}/>\n                    <ButtonLeftBar napis=\"Zapisz wynik w repozytorium\" disabled={true} iconType=\"fa-cloud-download-alt\" whenClicked={null}/>\n\n                </LeftSiteBar>\n    */\n}\n                \n\n                <LeftSiteBar \n                czyTopPart=\"true\"\n                desc=\"W tym miejscu istnieje możliwość wykonywania automatycznego rozpoznawania mowy z nagrań dźwiękowych\" />\n\n                 <SettingBar />\n    \n                <section className=\"Content\" data-scrollbar>\n    \n                    <div className={[\"container-fluid\", \"RecognitionTool\"].join(' ')}>\n                    <div className=\"tool-desc\">\n                        <p>Zamiana nagrania mowy na zapis ortograficzny. Pliki audio przekazywane do tej usługi muszą być w odpowiednim formacie (WAV, 16kHz, mono, 16-bit). Jeśli plik nie jest w odpowiednim formacie, można skorzystać z usługi normalizacji audio do odpowiedniego przekonwertowania pliku znajdujące się na  <a href=\"http://mowa.clarin-pl.eu/tools/ui/audio/normalize\" target=\"blank\">TEJ stronie</a>. \n                        </p>\n                        <p>Narzędzie umożliwia wgranie wielu plików jednocześnie i uruchomienie usługi na wszystkich jednocześnie. W trakcie wykonywania usługi nie należy odświeżać strony.</p>\n                      \n                    </div>\n    \n                    <div className=\"tool-body\">\n    \n                        <div className=\"row\">\n                            <div className=\"col-md\">\n\n                                <DragAndDrop whenDropped={this.handleDrop}>\n                                       <DropFilesArea \n                                            whenFilesChose={this.whenFilesChose}\n                                            mainTitle=\"Wgraj pliki z dysku\"\n                                            desc=\"Pliki zostaną zapisane jedynie tymczasowo na potrzeby przetwarzania. Po tym czasie są one usuwane bezpowrotnie usuwane z serwera\"/>\n                                </DragAndDrop>\n                                \n                            </div>\n                            {\n                                /*\n                                <div className=\"col-md\">\n                                <div className=\"uploadFromRepo\">\n                                    <h2>Wgraj pliki z repozytorium</h2>\n                                    <p>Przeciągnij pliki z repozytorium. Podczas przetwarzania nie bedziesz mógł wykonywać żadnych dodatkowych operacji na tych plikach</p>\n                                    <i className=\"fas fa-cloud-upload-alt\"></i>\n                                </div>\n                                </div>\n                                */\n                            }\n                           \n                        </div>\n    \n                        <div className=\"file-list\">\n                            {filelist}\n                        </div>\n    \n    \n                    </div>\n    \n                     \n                    </div>\n    \n                    <FooterTool />\n    \n                </section>\n            </Aux>\n        );\n    }\n\n\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        filesToUpload: state.recR.filesToUpload,\n        modalDisplay: state.projectR.modal,\n        refusedFileList: state.recR.refusedFileList\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDrop: (files) => dispatch(recognitionActions.dropFiles(files)),\n        onOpenModalHandler: () => dispatch(recognitionActions.openModalProject()),\n        onCloseModalHandler: () => dispatch(recognitionActions.closeModalProject()),\n        onStartBatchRecognition: (audioFilesArray, audioFilesIds) => dispatch(recognitionActions.initBatchRecognition(audioFilesArray, audioFilesIds)),\n        onSetRefusionFiles: (refusedFiles) => dispatch(recognitionActions.setRefusedFiles(refusedFiles))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecognitionTool);","import * as actionTypes from './actionsTypes';\nimport axios from 'axios';\n\n//initialization the init properties of the project\nexport const initProject = (projectId, projectTitle, projectOwner) => {\n    return {\n        type: actionTypes.INIT_PROJECT,\n        projectId: projectId,\n        projectTitle: projectTitle,\n        projectOwner: projectOwner,\n    }\n}\n\nexport const openModalProject = () => {\n    return {\n        type: actionTypes.OPEN_MODAL_PROJECT,\n    }\n}\n\nexport const closeModalProject = () => {\n    return {\n        type: actionTypes.CLOSE_MODAL_PROJECT,\n    }\n}\n\nexport const clearRecoStore = () => {\n    return {\n        type: actionTypes.CLEAR_RECO_STORE,\n    }\n}\n\nexport const clearSegmentStore = () => {\n    return {\n        type: actionTypes.CLEAR_SEGMENT_STORE,\n    }\n}\n\nexport const clearPreviewStore = () => {\n    return {\n        type: actionTypes.CLEAR_PREVIEW_STORE,\n    }\n}\n\n\n\n\n","import React, {Component} from 'react';\nimport Aux from '../../../../hoc/Auxiliary';\nimport './SegmentItem.css';\nimport SegmentAudioItem from '../SegmentAudioItem/SegmentAudioItem';\n\nimport * as segmentActions from '../../../../store/actions/index';\nimport {connect} from 'react-redux';\nimport {withRouter } from 'react-router-dom'\n\nclass SegmentItem extends Component {\n\n    removeSegmentItem = (entryId) => {\n        console.log(entryId);\n        this.props.onRemoveSegmentItem(entryId);\n    }\n\n    startSegmentation = (entryId) => {\n        console.log(entryId);\n        const currentEntry = this.props.segmentEntry.find(entry => entry.id == entryId);\n        const audioFile = currentEntry.audioEntry.file;\n        const txtFile = currentEntry.txtEntry.file;\n\n        this.props.onInitSegmentProcess(entryId);\n        \n        this.props.onStartSegmentItem(\n            entryId, \n            this.props.userId, \n            this.props.projectId, \n            audioFile, \n            txtFile, \n            this.props.token\n            );\n    }\n\n    refreshRepo = () => {\n        this.props.onRefreshRepo(\n            this.props.userId, \n            this.props.projectId, \n            this.props.token)\n    }\n\n    render() {\n\n        let statusIcon = null;  //status entry\n        let starterIcon = null; //do odpalania segmentacji\n\n        \n        \n        if(this.props.status === 'valid'){\n            statusIcon = (\n                <span className=\"segmenticon ready\"><i className=\"fas fa-check\"></i></span>\n            );\n            starterIcon = (\n                <a onClick={()=>this.startSegmentation(this.props.entryId)}>\n                    <i className=\"startSegment fas fa-cogs\" ></i>\n                </a> \n            );\n        } else {\n            statusIcon = (\n                <span className=\"segmenticon warning\"><i className=\"fas fa-exclamation\"></i></span>\n            );\n            starterIcon = null;\n        }\n\n        //znajduje siebie na liscie\n        let foundEntry = this.props.segmentEntry.find(entry => entry.id === this.props.entryId)\n\n        if(foundEntry.processingStatus === 'inProgress'){\n            statusIcon = (\n                <span className=\"inprogress\">\n                        <div className=\"spinner-border text-primary\" role=\"status\">\n                            <span className=\"sr-only\">Segmentacja...</span>\n                        </div>\n                </span>\n            );\n\n            starterIcon = null;\n        }\n\n        if(foundEntry.processingStatus === 'done'){\n            statusIcon = (\n                <span className=\"segmenticon complete\"><i className=\"fas fa-check\"></i></span>\n            );\n            starterIcon = null;\n\n            this.refreshRepo();\n        }\n\n        if(foundEntry.processingStatus === 'error'){\n            statusIcon = (\n                <span className=\"error\"><i className=\"fas fa-exclamation-triangle\"></i> Błąd</span>\n            );\n            starterIcon = null;\n        }\n\n        \n\n        \n\n   \n        \n        return(\n            <Aux>\n         \n                \n                <div className={[\"row\", \"pairedItem\", \"SegmentItem\"].join(' ')}>\n    \n                    <div className=\"col-sm audio-info\">\n    \n                       \n                        \n                    </div>\n                    <div className=\"col-sm-auto pair-status\">\n                   \n                            {statusIcon}\n                     \n                    </div>\n                    <div className=\"col-sm txt-info\">\n                         \n                    </div>\n    \n                    <div className=\"col-sm-auto pair-icons\">\n\n                        { starterIcon}\n                         \n\n                            {\n                               \n                                    <a onClick={()=>this.removeSegmentItem(this.props.entryId)}>\n                                            <i className=\"removeItem fas fa-times\" ></i>\n                                    </a>\n\n                               \n                            }\n                        \n\n                    </div>\n                </div>\n    \n    \n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        segmentEntry: state.segR.segmentEntry,\n        userId: state.projectR.currentProjectOwner,\n        projectId: state.projectR.currentProjectID,\n        token: state.homeR.token,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n       onRemoveSegmentItem: (segmentId) => dispatch(segmentActions.removeSegmentItem(segmentId)),\n       onStartSegmentItem: (segmentId, userId, projectId, audioFile, txtFile, token) => dispatch(segmentActions.startSegmentItem(segmentId, userId, projectId, audioFile, txtFile, token)),\n       onInitSegmentProcess: (entryId) => dispatch(segmentActions.initSegmentProcessing(entryId)),\n       onRefreshRepo: (userId, projectId, token) => dispatch(segmentActions.getProjectFilesForUser(userId, projectId, token))\n       \n    }\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(withRouter(SegmentItem));","import * as actionTypes from '../actionsTypes';\nimport axios from 'axios';\n\n//action creator for dropping audio files\nexport const dropAudioFiles = (audioFiles) => {\n    return {\n        type: actionTypes.DROP_AUDIO_FILES,\n        audioFiles: audioFiles\n    }\n}\n\n//for refusing audio files in segmentation\nexport const setRefusedSegmentAudioFiles = (refusedFiled) => {\n    //console.log(refusedFiled)\n    return {\n        type: actionTypes.REFUSE_SEGMENT_AUDIO_FILES, \n        refusedFileList: refusedFiled, \n    }\n}\n\n//for refusing audio files in segmentation\nexport const setRefusedSegmentTxtFiles = (refusedFiled) => {\n    //console.log(refusedFiled)\n    return {\n        type: actionTypes.REFUSE_SEGMENT_TXT_FILES, \n        refusedFileList: refusedFiled, \n    }\n}\n\n\n//action creator to dropping txt files\nexport const dropTxtFiles = (txtFiles) => {\n    return {\n        type: actionTypes.DROP_TXT_FILES,\n        txtFiles: txtFiles\n    }\n}\n\n\n//action creatore for changing the order of audio files\nexport const changeAudioListOrder = (audioIdsOrder) => {\n    return {\n        type: actionTypes.CHANGE_AUDIO_LIST_ORDER,\n        audioIdsOrder: audioIdsOrder\n    }\n}\n\n\n//action creators for changing the order of txt files\nexport const changeTxtListOrder = (txtIdsOrder) => {\n    return {\n        type: actionTypes.CHANGE_TXT_LIST_ORDER,\n        txtIdsOrder: txtIdsOrder\n    }\n}\n\nexport const removeSegmentItem = (entryId) => {\n    return {\n        type: actionTypes.REMOVE_SEGMENT_ENTRY,\n        entryId: entryId\n    }\n}\n\n//############### start segmentation entry ############\n//#################################################\n\nexport const initSegmentProcessing = (entryId) => {\n    return {\n        type: actionTypes.INIT_FILE_SEGMENTATION,\n        entryId: entryId\n    }\n}\n\nexport const finishFileSegmentationSuccess = (entryId) =>{\n    return {\n        type: actionTypes.FILE_SEGMENTATION_SUCCESS,\n        entryId: entryId\n    }\n}\n\nexport const finishFileSegmentationFailed = (error, entryId) =>{\n    return {\n        type: actionTypes.FILE_SEGMENTATION_FAILED,\n        error: error.toString(),\n        entryId: entryId,\n    }\n}\n\nexport const startSegmentItem = (entryId, userId, projectId, audioFile, txtFile, token) => {\n    //(segmentId, userId, projectId, audioFile, txtFile, token)\n    return dispatch => {\n\n        const data = new FormData();\n        data.append('entryId',entryId);\n        data.append('userId',userId);\n        data.append('projectId',projectId);\n        data.append('audioFiles',audioFile);\n        data.append('audioFiles',txtFile);\n        //data.append('txtFile',txtFile);\n        //data.append('token', entryId);\n\n        console.log(\"WYSYLAM\")\n        console.log(entryId)\n        console.log(userId)\n        console.log(projectId)\n        console.log(audioFile)\n        console.log(txtFile)\n       \n        \n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n\n        //dispatch(startSegmentItemAction(entryId));\n        \n        axios.post('/segmentation/singleFile',data, config)\n            .then(response => {\n                console.log(response);\n                //const message = response.data.message;\n                //const entryId = response.data.sentEntryId.sentEntryId;\n                //console.log(message)\n                //console.log(entryId)\n                dispatch(finishFileSegmentationSuccess(entryId));\n               \n                //console.log(response);\n            })\n            .catch(error => {\n                dispatch(finishFileSegmentationFailed(error, entryId));\n                console.log(error);\n            })\n    }\n}\n\n\n\n","import uuid  from 'uuid';\nimport React from 'react';\nimport Sortable from 'react-sortablejs';\nimport PropTypes from 'prop-types';\nimport './SortableAudioList.css';\n \n// Functional Component\nconst sortableAudioList = ({ items, onChange }) => {\n    \n    let sortable = null; // sortable instance\n\n    /*\n    const reverseOrder = (evt) => {\n        const order = sortable.toArray();\n        onChange(order.reverse());\n    };\n    */\n\n   // console.log(items);\n\n    const listItems = items.map((val,i) => (\n    \n        <div className=\"SortableAudioList\" key={val.id}  data-id={val.id}>\n            \n            <div className=\"row\">\n                    <div className=\"col-sm-auto withReference\">\n                            <span className=\"orderNo\">{i+1 }</span>\n                            <i className=\"fas fa-arrows-alt-v\"></i>\n                    </div>\n                    <div className=\"col-sm\">\n                            <span className=\"file-name\">{val.file.name}</span>\n                    </div>\n                    {\n\n                            /*\n                            <div className=\"col-sm-auto\">\n                                    <i className=\"fas fa-play preview\"></i>\n                            </div>\n                            */\n\n                    }\n                    \n            </div>\n        </div>\n    ));\n \n    return (\n        <div>\n          \n            <Sortable\n                // Sortable options (https://github.com/RubaXa/Sortable#options)\n                options={{\n                    handle: '.fa-arrows-alt-v', // handle's class\n                    animation: 150\n                }}\n \n                // [Optional] Use ref to get the sortable instance\n                // https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute\n                ref={(c) => {\n                    if (c) {\n                        sortable = c.sortable;\n                    }\n                }}\n \n                // [Optional] A tag or react component to specify the wrapping element. Defaults to \"div\".\n                // In a case of a react component it is required to has children in the component\n                // and pass it down.\n                tag=\"div\"\n \n                // [Optional] The onChange method allows you to implement a controlled component and keep\n                // DOM nodes untouched. You have to change state to re-render the component.\n                // @param {Array} order An ordered array of items defined by the `data-id` attribute.\n                // @param {Object} sortable The sortable instance.\n                // @param {Event} evt The event object.\n                onChange={(order, sortable, evt) => {\n                    onChange(order);\n                }}\n            >\n                {listItems}\n            </Sortable>\n        </div>\n    );\n};\n \nsortableAudioList.propTypes = {\n    items: PropTypes.array,\n    onChange: PropTypes.func\n};\n \nexport default sortableAudioList;\n","import uuid  from 'uuid';\nimport React from 'react';\nimport Sortable from 'react-sortablejs';\nimport PropTypes from 'prop-types';\nimport './SortableTxtList.css';\n \n// Functional Component\nconst sortableTxtList = ({ items, onChange }) => {\n    \n    let sortable = null; // sortable instance\n\n    /*\n    const reverseOrder = (evt) => {\n        const order = sortable.toArray();\n        onChange(order.reverse());\n    };\n    */\n\n   // console.log(items);\n\n    const listItems = items.map((val,i) => (\n    \n        <div className=\"SortableTxtList\" key={val.id}  data-id={val.id}>\n            <div className=\"row\">\n                    <div className=\"col-sm-auto\">\n                            <i className=\"fas fa-arrows-alt-v\"></i>\n                    </div>\n                    <div className=\"col-sm\">\n                            <span className=\"file-name\">{val.file.name}</span>\n                    </div>\n                    {\n                        /*\n\n                    <div className=\"col-sm-auto\">\n                            <i className=\"fas fa-eye preview\"></i>\n                    </div>\n                    \n                        */\n                    }\n                    \n            </div>\n        </div>\n    ));\n \n    return (\n        <div>\n          \n            <Sortable\n                // Sortable options (https://github.com/RubaXa/Sortable#options)\n                options={{\n                    handle: '.fa-arrows-alt-v', // handle's class\n                    animation: 150\n                }}\n \n                // [Optional] Use ref to get the sortable instance\n                // https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute\n                ref={(c) => {\n                    if (c) {\n                        sortable = c.sortable;\n                    }\n                }}\n \n                // [Optional] A tag or react component to specify the wrapping element. Defaults to \"div\".\n                // In a case of a react component it is required to has children in the component\n                // and pass it down.\n                tag=\"div\"\n \n                // [Optional] The onChange method allows you to implement a controlled component and keep\n                // DOM nodes untouched. You have to change state to re-render the component.\n                // @param {Array} order An ordered array of items defined by the `data-id` attribute.\n                // @param {Object} sortable The sortable instance.\n                // @param {Event} evt The event object.\n                onChange={(order, sortable, evt) => {\n                    onChange(order);\n                }}\n            >\n                {listItems}\n            </Sortable>\n        </div>\n    );\n};\n \nsortableTxtList.propTypes = {\n    items: PropTypes.array,\n    onChange: PropTypes.func\n};\n \nexport default sortableTxtList;\n","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport SettingBar from '../SettingBar/SettingBar';\nimport FooterTool from '../FooterTool/FooterTool';\nimport './SegmentTool.css';\nimport SegmentItem from './SegmentItem/SegmentItem';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\nimport ButtonLeftBar from '../../../components/UI/ButtonLeftBar/ButtonLeftBar';\nimport DragAndDrop from '../../../components/UI/DragAndDrop/DragAndDrop';\nimport DropFilesArea from '../../../components/UI/DropFilesArea/DropFilesArea';\nimport { connect } from 'react-redux';\nimport uuid from 'uuid';\nimport * as segmentActions from '../../../store/actions/index';\nimport SortableAudioList from './SortableAudioList/SortableAudioList';\nimport SortableTxtList from './SortableTxtList/SortableTxtList';\nimport {getExt} from '../../../utils/utils';\nimport Modal from '../../../components/UI/Modal/Modal';\n\nclass SegmentTool extends Component {\n\n\thandleDropAudio = (audiofiles) => {\n\n\t\tlet extAudioFiles = [];\n\n\t\tlet fileList = [];\n        let refusedAudioFileList = [];\n\n        for(var i=0;i<audiofiles.length;i++){\n            let file = audiofiles[i];\n            let fileExtention = getExt(file.name)[0];\n            //rozpoznaje tylko pliki audio\n            if(fileExtention === \"wav\" ||\n               fileExtention === \"WAV\" ||\n               fileExtention === \"mp3\" ||\n               fileExtention === \"au\"){\n                fileList.push(file);\n            } else {\n\t\t\t\trefusedAudioFileList.push(file);\n            }  \n        } \n\n        if(refusedAudioFileList.length > 0){\n            this.props.onSetRefusionAudioFiles(refusedAudioFileList);\n\t\t\tthis.props.onOpenModalHandler();\n\t\t\t//console.log(refusedAudioFileList)\n        }\n\n\t\tArray.from(fileList).forEach(file => {\n\t\t\tlet newFile = Object.assign({}, file);\n\t\t\tnewFile.file = file;\n\t\t\tnewFile.status = 'toload';\n\t\t\tnewFile.loadedperc = 0;\n\t\t\tnewFile.id = uuid.v4();\n\t\t\textAudioFiles.push(newFile);\n\t\t});\n\n\t\t//console.log(\"extAudioFiles\")\n\t\t//console.log(extAudioFiles)\n\n\t\tthis.props.onAudioDrop(extAudioFiles);\n\t}\n\n\n\twhenAudioFilesChose = (e) => {\n\t\tconst inputControl = e.currentTarget;\n\t\tlet extAudioFiles = [];\n\n\t\tlet fileList = [];\n        let refusedAudioFileList = [];\n\n        for(var i=0;i<inputControl.files.length;i++){\n            let file = inputControl.files[i];\n            let fileExtention = getExt(file.name)[0];\n            //rozpoznaje tylko pliki audio\n            if(fileExtention === \"wav\" ||\n               fileExtention === \"WAV\" ||\n               fileExtention === \"mp3\" ||\n               fileExtention === \"au\"){\n                fileList.push(file);\n            } else {\n\t\t\t\trefusedAudioFileList.push(file);\n            }  \n        } \n\n        if(refusedAudioFileList.length > 0){\n            this.props.onSetRefusionAudioFiles(refusedAudioFileList);\n\t\t\tthis.props.onOpenModalHandler();\n\t\t\t//console.log(refusedAudioFileList)\n        }\n\n\n\t\tArray.from(fileList).forEach(file => {\n\t\t\tlet newFile = Object.assign({}, file);\n\t\t\tnewFile.file = file;\n\t\t\tnewFile.status = 'toload';\n\t\t\tnewFile.loadedperc = 0;\n\t\t\tnewFile.id = uuid.v4();\n\t\t\textAudioFiles.push(newFile);\n\t\t});\n\n\t\tthis.props.onAudioDrop(extAudioFiles);\n\t}\n\n\thandleDropTxt = (txtfiles) => {\n\t\tlet extTxtFiles = [];\n\n\t\tlet fileList = [];\n        let refusedTxtFileList = [];\n\n        for(var i=0;i<txtfiles.length;i++){\n            let file = txtfiles[i];\n            let fileExtention = getExt(file.name)[0];\n            //rozpoznaje tylko pliki audio\n            if(fileExtention === \"txt\"){\n                fileList.push(file);\n            } else {\n\t\t\t\trefusedTxtFileList.push(file);\n            }  \n        } \n\n        if(refusedTxtFileList.length > 0){\n            this.props.onSetRefusionTxtFiles(refusedTxtFileList);\n\t\t\tthis.props.onOpenModalHandler();\n\t\t\t//console.log(refusedAudioFileList)\n        }\n\n\n\t\tArray.from(fileList).forEach(file => {\n\t\t\tlet newFile = Object.assign({}, file);\n\t\t\tnewFile.file = file;\n\t\t\tnewFile.status = 'toload';\n\t\t\tnewFile.loadedperc = 0;\n\t\t\tnewFile.id = uuid.v4();\n\t\t\textTxtFiles.push(newFile);\n\t\t});\n\n\t\t//console.log(\"extTxtFiles\")\n\t\t//console.log(extTxtFiles)\n\n\t\tthis.props.onTxtDrop(extTxtFiles);\n\t}\n\n\twhenTxtFilesChose = (e) => {\n\t\tconst inputControl = e.currentTarget;\n\n\t\tlet extTxtFiles = [];\n\n\t\tlet fileList = [];\n        let refusedTxtFileList = [];\n\n        for(var i=0;i<inputControl.files.length;i++){\n            let file = inputControl.files[i];\n            let fileExtention = getExt(file.name)[0];\n            //rozpoznaje tylko pliki audio\n            if(fileExtention === \"txt\"){\n                fileList.push(file);\n            } else {\n\t\t\t\trefusedTxtFileList.push(file);\n            }  \n        } \n\n        if(refusedTxtFileList.length > 0){\n            this.props.onSetRefusionTxtFiles(refusedTxtFileList);\n\t\t\tthis.props.onOpenModalHandler();\n\t\t\t//console.log(refusedAudioFileList)\n        }\n\n\t\tArray.from(fileList).forEach(file => {\n\t\t\tlet newFile = Object.assign({}, file);\n\t\t\tnewFile.file = file;\n\t\t\tnewFile.status = 'toload';\n\t\t\tnewFile.loadedperc = 0;\n\t\t\tnewFile.id = uuid.v4();\n\t\t\textTxtFiles.push(newFile);\n\t\t});\n\n\t\t//console.log(\"extTxtFiles\")\n\t\t//console.log(extTxtFiles)\n\n\t\tthis.props.onTxtDrop(extTxtFiles);\n\t}\n\n\n\t//otwiera okno modalne\n    openModalHandler = () => {\n        this.props.onOpenModalHandler();\n    }\n\n    //zamyka okno modalne\n    closeModalHandler = () => {\n        this.props.onCloseModalHandler();\n    }\n\n\n\n\n\n\n\trender() {\n\n\t\tlet entrylist = (\n\t\t\t<h4 style={{ marginTop: '10px' }}>Wgraj pliki audio oraz txt do segmentacji</h4>\n\t\t)\n\n\n\t\tif (this.props.segmentEntry.length > 0) {\n\n\t\t\tentrylist = this.props.segmentEntry.map((entry, i) =>\n\t\t\t\t<SegmentItem key={entry.id} entryId={entry.id} status={entry.status} />\n\t\t\t)\n\t\t}\n\n\t\tlet refusedAudioFileNames = null;\n\t\trefusedAudioFileNames = this.props.refusedAudioFileList.map((file,i)=>{\n\t\t\treturn <div key={i}>{file.name}</div>\n\t\t})\n\n\t\tlet refusedTxtFileNames = null;\n\t\trefusedTxtFileNames = this.props.refusedTxtFileList.map((file,i)=>{\n\t\t\treturn <div key={i}>{file.name}</div>\n\t\t})\n\n\t\tlet modalContent = null;\n\n\t\tif(this.props.ifRefusedAudio)\n\t\t{\n\t\t\tmodalContent = (\n\t\t\t\t<div className=\"alert alert-warning\" role=\"alert\">\n\t\t\t\t\t<p>Ponizsze pliki nie sa plikami audio. \n\t\t\t\t\t\t<br></br>Nie zostana one dodane do kolejki segmentacji\n\t\t\t\t\t</p>\n\t\t\t\t\t{refusedAudioFileNames }\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else {\n\t\t\tmodalContent = (\n\t\t\t\t<div className=\"alert alert-warning\" role=\"alert\">\n\t\t\t\t\t<p>Ponizsze pliki nie sa plikami txt. \n\t\t\t\t\t\t<br></br>Nie zostana one dodane do kolejki segmentacji\n\t\t\t\t\t</p>\n\t\t\t\t\t{refusedTxtFileNames }\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\n\t\treturn (\n\t\t\t<Aux>\n\n\t\t\t\t{\n\n\t\t\t\t\t/*\n\t\t\t\t\t<LeftSiteBar czyTopPart=\"true\" desc=\"Tutaj opis do segmentacji\" >\n\t\t\t\t\n\t\t\t\t\t\t\t\t<ButtonLeftBar napis=\"Rozpocznij segmentacje\" iconType=\"fa-cogs\" whenClicked={null} />\n\t\t\t\t\t\t\t\t<ButtonLeftBar napis=\"Zapisz wynik na Twoim dysku\" disabled={true} iconType=\"fa-download\" whenClicked={null}/>\n\t\t\t\t\t\t\t\t<ButtonLeftBar napis=\"Zapisz wynik w repozytorium\" disabled={true} iconType=\"fa-cloud-download-alt\" whenClicked={null}/>\n\t\t\t\t\n\t\t\t\t\t\t\t</LeftSiteBar>\n\t\t\t\t\t*/\n\t\t\t\t}\n\n\t\t\t\t<Modal\n                    show={this.props.modalDisplay}\n                    modalClosed={this.closeModalHandler}\n                    >\n\n\n                        {modalContent}\n                    \n         \n                    \n                    <button type=\"button\" \n                        className=\"btn btn-outline-secondary\"\n                        onClick={this.closeModalHandler}>OK</button>\n                </Modal>\n\n\n\t\t\t\t<LeftSiteBar\n\t\t\t\t\tczyTopPart=\"true\"\n\t\t\t\t\tdesc=\"Dopasowanie czasowe tekstu do nagrania. Podział nagrania na segmenty (wyrazy i fonemy).\n\t\t\t\t\t\" />\n\n\t\t\t\t<SettingBar />\n\n\t\t\t\t<section className=\"Content\" data-scrollbar>\n\n\t\t\t\t\t<div className={[\"container-fluid\", \"SegmentTool\"].join(' ')}>\n\t\t\t\t\t\t<div className=\"tool-desc\">\n\n\t\t\t\t\t\t\t<p>Narzędzie to jest dostosowane do przetwarzania stosunkowo krótkich nagrań (poniżej minuty). Dłuższe nagrania mogą spowodować powstanie błędu.</p>\n\t\t\t\t\t\t\t<p>Pliki audio przekazywane do tej usługi muszą być w odpowiednim formacie (WAV, 16kHz, mono, 16-bit). Jeśli plik nie jest w odpowiednim formacie, można skorzystać z usługi normalizacji audio do odpowiedniego przekonwertowania pliku znajdujące się na  <a href=\"http://mowa.clarin-pl.eu/tools/ui/audio/normalize\" target=\"blank\">TEJ stronie</a>. \n                        </p>\n                        <p>Narzędzie umożliwia wgranie wielu plików jednocześnie i uruchomienie usługi na wszystkich jednocześnie. W trakcie wykonywania usługi nie należy odświeżać strony.</p>\n\t\t\t\t\t\t<p><b>W przypadku wgrania większej ilości plików, pliki audio należy dopasować z plikami tekstowymi</b></p>\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"tool-body\">\n\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col-md\">\n\n\t\t\t\t\t\t\t\t\t<DragAndDrop whenDropped={this.handleDropAudio}>\n\t\t\t\t\t\t\t\t\t\t<DropFilesArea\n\t\t\t\t\t\t\t\t\t\t\twhenFilesChose={this.whenAudioFilesChose}\n\t\t\t\t\t\t\t\t\t\t\tmainTitle=\"Wgraj pliki z audio dysku\"\n\t\t\t\t\t\t\t\t\t\t\tdesc=\"Pliki zostaną zapisane jedynie tymczasowo na potrzeby przetwarzania. Po tym czasie są one usuwane bezpowrotnie usuwane z serwera\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</DragAndDrop>\n\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-md\">\n\t\t\t\t\t\t\t\t\t<DragAndDrop whenDropped={this.handleDropTxt}>\n\t\t\t\t\t\t\t\t\t\t<DropFilesArea\n\t\t\t\t\t\t\t\t\t\t\twhenFilesChose={this.whenTxtFilesChose}\n\t\t\t\t\t\t\t\t\t\t\tmainTitle=\"Wgraj pliki txt dysku\"\n\t\t\t\t\t\t\t\t\t\t\tdesc=\"Pliki zostaną zapisane jedynie tymczasowo na potrzeby przetwarzania. Po tym czasie są one usuwane bezpowrotnie usuwane z serwera\" />\n\t\t\t\t\t\t\t\t\t</DragAndDrop>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div className=\"file-list\">\n\n\t\t\t\t\t\t\t\t<div className={[\"row\", \"pairedItem\", \"header-pair\"].join(' ')}>\n\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-auto pair-order\">\n\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm audio-info\">\n\n\t\t\t\t\t\t\t\t\t\t<h4></h4>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-auto pair-status\">\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm txt-info\">\n\t\t\t\t\t\t\t\t\t\t<h4></h4>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-auto pair-icons\">\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\"row commonParent\">\n\t\t\t\t\t\t\t\t\t<div className=\"segmentEntriesBG\">\n\n\t\t\t\t\t\t\t\t\t\t{entrylist}\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t<SortableAudioList\n\t\t\t\t\t\t\t\t\t\t\titems={this.props.audioList}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(items) => {\n\t\t\t\t\t\t\t\t\t\t\t\t//this.setState({ items });\n\t\t\t\t\t\t\t\t\t\t\t\t//this.props.onAudioDrop(items);\n\t\t\t\t\t\t\t\t\t\t\t\t//{console.log(items)}\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.onChangeAudioListOrder(items);\n\t\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t<SortableTxtList\n\t\t\t\t\t\t\t\t\t\t\titems={this.props.txtList}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(items) => {\n\t\t\t\t\t\t\t\t\t\t\t\t//this.setState({ items });\n\t\t\t\t\t\t\t\t\t\t\t\t//this.props.onAudioDrop(items);\n\t\t\t\t\t\t\t\t\t\t\t\t//{console.log(items)}\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.onChangeTxtListOrder(items);\n\t\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<FooterTool />\n\n\t\t\t\t</section>\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsegmentEntry: state.segR.segmentEntry,\n\t\taudioList: state.segR.audioList,\n\t\ttxtList: state.segR.txtList,\n\t\trefusedAudioFileList: state.segR.refusedAudioFileList,\n\t\trefusedTxtFileList: state.segR.refusedTxtFileList,\n\t\tmodalDisplay: state.projectR.modal,\n\t\tifRefusedAudio: state.segR.ifRefusedAudio,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonAudioDrop: (audioFiles) => dispatch(segmentActions.dropAudioFiles(audioFiles)),\n\t\tonTxtDrop: (txtFiles) => dispatch(segmentActions.dropTxtFiles(txtFiles)),\n\t\tonChangeAudioListOrder: (idsOrder) => dispatch(segmentActions.changeAudioListOrder(idsOrder)),\n\t\tonChangeTxtListOrder: (idsOrder) => dispatch(segmentActions.changeTxtListOrder(idsOrder)),\n\t\tonSetRefusionAudioFiles: (refusedFiles) => dispatch(segmentActions.setRefusedSegmentAudioFiles(refusedFiles)),\n\t\tonSetRefusionTxtFiles: (refusedFiles) => dispatch(segmentActions.setRefusedSegmentTxtFiles(refusedFiles)),\n\t\tonOpenModalHandler: () => dispatch(segmentActions.openModalProject()),\n        onCloseModalHandler: () => dispatch(segmentActions.closeModalProject()),\n\t}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SegmentTool);","\nimport WaveSurfer from 'wavesurfer.js';\nimport React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './TranscriptTool.css';\nimport SettingBar from '../SettingBar/SettingBar';\nimport FooterTool from '../FooterTool/FooterTool';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as previewActions from '../../../store/actions/index';\n//import Wavesurfer from 'react-wavesurfer';\n\n//sorry for the name of this class - to be changed...\n\n\n\nclass TranscriptTool extends Component {\n\n   \n    constructor(props){\n        super(props);\n     \n        let wavesurfer = null;\n   \n        this.handleTogglePlay = this.handleTogglePlay.bind(this);\n        this.handlePosChange = this.handlePosChange.bind(this);\n        //this.loadAudioFileForPreview = this.loadAudioFileForPreview.bind(this);\n      }\n\n      handleTogglePlay = () => {\n        //this.wavesurfer.load('http://localhost:1234/repo/5d0e20536c8ef65ef77e7e65/5d0e206f6c8ef65ef77e7e66/test.wav');\n        if(this.props.playing){\n            this.wavesurfer.pause();\n        } else {\n            this.wavesurfer.play();\n        }\n\n        this.props.onTooglePlaying();\n      }\n\n      handlePosChange = (e) => {\n        this.setState({\n          pos: e.originalArgs[0]\n        });\n      }\n\n\n    componentDidMount = () => {\n\n        this.wavesurfer = WaveSurfer.create({\n            container: '#waveform',\n            waveColor: '#6f8796',\n            progressColor: '#3498db',\n            responsive: true,\n            //backend: 'MediaElement',\n            plugins: []\n        });\n\n        this.wavesurfer.on('loading', function (e) {\n           // console.log(e);\n        }.bind(this));\n\n\n        // Time stretcher\n        this.wavesurfer.on('ready', function () {\n           this.updateAudioArea(); //audioDisplayed: ustawia na true\n         }.bind(this));\n\n         this.props.onWeveSurferInitialized(true); //waveSurferInitialized: ustawia na true\n\n         \n        \n    }\n\n    componentWillUnmount = () => {\n        //this.props.onWeveSurferInitialized(false);\n        this.wavesurfer.stop();\n        this.props.onWeveSurferInitialized(false); \n        this.props.onAudioDisplayed(false);\n        //this.wavesurfer = null;\n    }\n\n    updateAudioArea = () => {\n        this.props.onUpdateAudioArea(this.props.fileKey)\n    }\n\n    getExt = (path) => {\n        return (path.match(/(?:.+..+[^\\/]+$)/ig) != null) ? path.split('.').slice(-1)[0] : 'null';\n    }\n\n    txtAreaChangedHandler = (e) => {\n        // console.log(e.currentTarget.value);\n        this.props.onUpdateTxtArea(e.currentTarget.value, null);\n    }\n\n    onLoadAudioToWaveSurfer = (audioFileUrl) => {\n            console.log(audioFileUrl)\n            this.wavesurfer.load(audioFileUrl);\n    }\n   \n\n    render() {\n\n        //obsluga podgladu pliku txt\n        if (this.props.txtfileName !== '') {\n            //aby nie ladowac jak jest juz zaladowane....\n            if (this.props.txtDisplayed === false) {\n                this.props.onUpdateTxtArea(this.props.txtContent, this.props.txtfileName)\n            }\n        }\n\n       \n        //obsluga podgladu pliku audio\n        if (this.props.audiofileName !== '') {\n            if (this.props.waveSurferInitialized==true) {\n                if(this.props.audioDisplayed === false){\n                        this.onLoadAudioToWaveSurfer(this.props.audioFileUrl);\n                }\n            }\n        }\n\n        // //to oznacza ze zakladka jest otworzona gdy \n        // //uzytkownik kliknal w plik w repo\n        // if(this.props.location.state){\n        //     const urlToFile = this.props.location.state.url;\n        //     const fileKey = this.props.location.state.key;\n        //     const fileExt = this.getExt(urlToFile);\n        //     //console.log(urlToFile)\n        //     //console.log(fileExt)\n\n        //     //gdy to jest plik txt\n        //     if(fileExt === 'txt'){\n        //         //aby wykonalo sie tylko raz\n        //         if(this.props.txtDisplayed === false){\n        //             fetch(urlToFile)\n        //             .then((r) => r.text())\n        //             .then(text  => {\n\n        //                 //console.log(text);\n        //                 this.props.onUpdateTxtArea(text, fileKey)\n\n        //             })\n        //         }\n        //     } \n        // }\n\n\n        let headerTxtField = (\n            <p style={{ fontWeight: 'bold' }}>\n                Podgld pliku txt<span style={{ fontSize: 'bigger' }}>\n                    {this.props.txtfileName}\n                </span>\n            </p>\n        );\n\n        let headerAudioField = (\n            <p style={{ fontWeight: 'bold' }}>\n                Podgld pliku audio <span style={{ fontSize: 'bigger' }}>\n                    {this.props.audiofileName}\n                </span>\n            </p>\n        );\n\n        let controlBtns = (\n            <button type=\"button\" onClick={this.handleTogglePlay} className=\"btn btn-primary\" id=\"play\">\n                {\n                this.props.playing? <i className=\"fas fa-pause\"></i>  : <i className=\"fas fa-play\"></i>\n                }\n                                \n            </button>\n        );\n\n\n        return (\n            <Aux>\n\n                <LeftSiteBar\n                    czyTopPart=\"true\"\n                    desc=\"W tym miejscu istnieje możliwość podglądu wyniku wykonywanych usług oraz odłuchania plików dźwiękowych z repozytorium\" />\n\n                <SettingBar />\n\n                <section className=\"Content\" data-scrollbar>\n\n                    <div className={[\"container-fluid\", \"TranscriptTool\"].join(' ')}>\n                        <div className=\"tool-desc\">\n\n                            \n                        </div>\n\n                        <div className=\"tool-body\">\n\n                            {headerAudioField}\n                            <div id=\"debuginfo\"></div>\n                            <div id=\"waveform\"></div>\n\n                            {this.props.audioDisplayed? controlBtns: null}\n                            \n\n                            {\n/*\n                                <div class=\"btn-group\" role=\"group\">\n                                    <button type=\"button\" className=\"btn btn-secondary\" id=\"play\"><i className=\"fas fa-play\"></i></button>\n                                    <button type=\"button\" className=\"btn btn-secondary\" id=\"stop\"><i className=\"fas fa-stop\"></i></button>\n                                    <button type=\"button\" className=\"btn btn-secondary\" id=\"back\"><i className=\"fas fa-step-backward\"></i>\n                                        <i className=\"fas fa-stopwatch\"></i></button>\n\n\n                                    <button type=\"button\" className=\"btn btn-secondary\" id=\"zoom\">\n                                        <i className=\"\">+</i>\n                                        <input type=\"range\" data-action=\"zoom\" min=\"1\" max=\"200\" value=\"0\" className=\"form-control-range\" id=\"controlZoom\" />\n                                        <span id=\"\">-</span>\n                                    </button>\n\n                                    <button type=\"button\" className=\"btn btn-secondary\" id=\"loudness\">\n                                        <i className=\"fas fa-volume-up\"></i>\n                                        <input type=\"range\" className=\"form-control-range\" id=\"controlLoudness\" />\n                                        <span id=\"loudness-value\">100%</span>\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-secondary\" id=\"speed\">\n                                        <i className=\"fas fa-running\"></i>\n                                        <input type=\"range\" data-action=\"speed\" min=\"25\" max=\"400\" value=\"100\" className=\"form-control-range\" id=\"controlSpeed\" />\n                                        <span id=\"speed-value\">100%</span>\n                                    </button>\n\n                                </div>\n*/\n\n                            }\n\n                            <hr />\n\n                            {\n                                /*\n                                                     <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"hmm\">hmm...</button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"szum-przerywany\">szum przerywany</button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"szum-ciagly\">szum ciągły</button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"back-mowcy\">szum mówcy</button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"back-mowcy\">nierozpoznane słowo</button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"back-mowcy\">przerwa</button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"font-up\">\n                                                             <i className=\"fas fa-font\" ></i> <i className=\"fas fa-font\"></i>\n                                                         </button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"font-down\">\n                                                             <i className=\"fas fa-font\" ></i> <i className=\"fas fa-font\" ></i>\n                                                         </button>\n                                                     </div>\n                             \n                                            */\n                            }\n\n\n                            <div className=\"form-group\">\n\n                                {headerTxtField}\n\n\n                                <textarea\n                                    className=\"form-control\"\n                                    className=\"TranskriptInput\"\n                                    placeholder=\"Zaznacz plik txt w repozytorium\"\n                                    value={this.props.txtContent}\n                                    onChange={this.txtAreaChangedHandler}\n                                >\n                                </textarea>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                    <FooterTool />\n\n\n                </section>\n\n\n\n            </Aux>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        txtContent: state.previewR.txtContent,\n        txtDisplayed: state.previewR.txtDisplayed,\n        txtfileName: state.previewR.txtfileName,\n        txtFileUrl: state.previewR.txtFileUrl,\n\n        audiofileName: state.previewR.audiofileName,\n        audioDisplayed: state.previewR.audioDisplayed,\n        audioFileUrl:  state.previewR.audioFileUrl,\n        waveSurferInitialized: state.previewR.waveSurferInitialized,\n        playing: state.previewR.playing,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        //onHandleCreateFolder: (key,projectId, userId, token) => dispatch(repoActions.handleCreateFolder(key, projectId, userId, token)),\n        onUpdateTxtArea: (newValue, fileKey) => dispatch(previewActions.updateTxtPreview(newValue, fileKey)),\n        onUpdateAudioArea: (fileKey) => dispatch(previewActions.updateAudioPreview(fileKey)),\n        onWeveSurferInitialized: (ifyes) => dispatch(previewActions.weveSurferInitialized(ifyes)),\n        onTooglePlaying: () => dispatch(previewActions.togglePlaying()),\n        onAudioDisplayed: (ifYes) => dispatch(previewActions.changeAudioDisplayed(ifYes))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TranscriptTool));","import * as actionTypes from '../actionsTypes';\nimport axios from 'axios';\n\nexport const updateTxtPreview = (newContent, fileName) => {\n    return {\n        type: actionTypes.UPDATE_TXT_PREVIEW,\n        newContent: newContent,\n        fileName: fileName,\n    }\n}\n\nexport const updateAudioPreview = (fileKey) => {\n    return {\n        type: actionTypes.UPDATE_AUDIO_PREVIEW,\n        fileKey: fileKey,\n    }\n}\n\nexport const changeAudioDisplayed = (ifyes) => {\n    return {\n        type: actionTypes.CHANGE_AUDIO_DISPLAYED,\n        ifYes: ifyes,\n    }\n}\n\n\nexport const weveSurferInitialized = (ifyes) => {\n    return {\n        type: actionTypes.WAVESURFER_INITIALIZED,\n        ifYes: ifyes,\n    }\n}\n\nexport const togglePlaying = () => {\n    return {\n        type: actionTypes.TOGGLE_PLAYING_PREVIEW,\n    }\n}\n\n\n//############### Txt File Preview ##############\n\nexport const openTxtFileToPreviewAction = (key, url, content) => {\n    return {\n        type: actionTypes.OPEN_TXT_FILE_PREVIEW,\n        fileUrl: url,\n        fileContent: content,\n        fileKey: key,\n    }\n}\n\n\nexport const openTxtFileToPreview = (file) => {\n    return dispatch => {\n        fetch(file.url)\n            .then(response => {\n                response.text().then(content => {\n                    dispatch(openTxtFileToPreviewAction(file.key, file.url, content));\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n}\n\n//############### Audio File Preview ##############\n\nexport const openAudioFileToPreviewAction = (key, url, waveSurferInitialized) => {\n    return {\n        type: actionTypes.OPEN_AUDIO_FILE_PREVIEW,\n        fileUrl: url,\n        fileKey: key,\n        waveSurferInitialized: waveSurferInitialized,\n    }\n}\n\n\nexport const openAudioFileToPreview = (file, waveSurferInitialized) => {\n\n    return dispatch => {\n\n        dispatch(openAudioFileToPreviewAction(file.key, file.url, waveSurferInitialized));\n\n        // const ctx = new AudioContext();\n        // let audio;\n\n        // fetch(file.url)\n        // .then(response => {\n        //     response.arrayBuffer().then(arrayBuffer => {\n        //         ctx.decodeAudioData(arrayBuffer).then(decodedAudio => {\n        //             audio = decodedAudio;\n        //             dispatch(openAudioFileToPreviewAction(file.key, file.url, audio));\n        //         })\n        //     })\n        // })\n        // .catch(error => {\n        //     console.log(error)\n        // })\n    }\n\n}\n\n","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './RepoBar.css';\nimport Moment from 'moment';\nimport FileBrowser, { Icons } from 'react-keyed-file-browser';\nimport { connect } from 'react-redux';\nimport * as repoActions from '../../../store/actions/index';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { getExt } from '../../../utils/utils';\n\nclass repoBar extends Component {\n\n\tstate = {\n\t\topenPreview: false,\n\t}\n\n\tcomponentDidMount() {\n\t\t//wysylam zadanie aby pobrac aktualne pliki w katalogu uzytkownika\n\t\tconst currentProjectID = this.props.currentProjectID;\n\t\tconst currentProjectOwner = this.props.currentProjectOwner; //Owner id\n\t\t//console.log(currentProjectID)\n\t\t//console.log(currentProjectOwner)\n\t\tthis.props.onGetProjectFilesForUser(currentProjectOwner, currentProjectID, this.props.token);\n\t}\n\n\thandleCreateFolder = (key) => {\n\t\tthis.props.onHandleCreateFolder(key, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t}\n\thandleCreateFiles = (files, prefix) => {\n\t\tthis.props.onHandleCreateFiles(files, prefix);\n\t}\n\thandleRenameFolder = (oldKey, newKey) => {\n\t\tthis.props.onHandleRenameFolder(oldKey, newKey, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t}\n\thandleRenameFile = (oldKey, newKey) => {\n\t\tthis.props.onHandleRenameFile(oldKey, newKey, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t}\n\thandleDeleteFolder = (folderKey) => {\n\t\tthis.props.onHandleDeleteFolder(folderKey, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t}\n\thandleDeleteFile = (fileKey) => {\n\t\tthis.props.onHandleDeleteFile(fileKey, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t}\n\n\thandleSelect = (key) => {\n\t\tconsole.log(\"handleSelect\")\n\t\tconsole.log(key)\n\t}\n\n\t// Called after onSelect, only on file selection\n\thandleSelectFile = (file) => {\n\t\tconsole.log(\"handleSelectFile\")\n\t\tconsole.log(file)\n\t}\n\n\t// Called after onSelect, only on folder selection\n\thandleSelectFolder = (folder) => {\n\t\tconsole.log(\"handleSelectFolder\")\n\t\tconsole.log(folder)\n\t}\n\n\t//dwukrotne klikniecie powoduje uruchomienie w podgladzie\n\thandlePreviewOpen = (file) => {\n\n\t\t//sprawdzam czy juz jestem na stronie podgladu.\n\t\t//jak nie to tam przechodze\n\n\t\tlet czyjestem = true;\n\n\t\tif (!this.props.location.pathname.includes('preview')) {\n\t\t\n\t\t\tlet toURL = this.props.match.url + '/preview';\n\t\t\tczyjestem = false;\n\t\t\tthis.props.history.push({\n\t\t\t\tpathname: toURL,\n\t\t\t});\n\t\t}\n\n\t\t//czytam rozszerzenie pliku\n\t\tconst ext = getExt(file.url)[0];\n\n\t\t//wtedy jest to plik txt\n\t\tif (ext === 'txt' || ext === 'ctm' || ext === 'zip' || ext === 'json' ||\n\t\text === 'TXT' || ext === 'CTM' || ext === 'ZIP' || ext === 'JSON') {\n\n\t\t\tif(file.url !== this.props.txtFileUrl){\n\t\t\t\tthis.props.onOpenTxtFileToPreview(file, czyjestem);\n\t\t\t}\n\n\t\t} else if (ext === 'wav' || ext === 'mp3' || ext === 'au' ||\n\t\t\text === 'WAV' || ext === 'MP3' || ext === 'AU' ) {\n\n\t\t\t\tif(file.url !== this.props.audioFileUrl){\n\t\t\t\t\tthis.props.onOpenAudioFileToPreview(file, czyjestem);\n\t\t\t\t}\n\n\t\t}\n\n\t}\n\n\thandlePreviewClose = (file) => {\n\t\tconsole.log(\"handlePreviewClose\")\n\t\tconsole.log(file)\n\t}\n\n\thandleFolderOpen = (folder) => {\n\t\tconsole.log(\"handleFolderOpen\")\n\t\tconsole.log(folder)\n\t}\n\n\thandleFolderClose = (folder) => {\n\t\tconsole.log(\"handleFolderClose\")\n\t\tconsole.log(folder)\n\t}\n\n\n\tstartResizeRepo = () => {\n\t\twindow.addEventListener('mousemove', this.Resize, false);\n\t\twindow.addEventListener('mouseup', this.stopResize, false);\n\t}\n\n\n\t//resize the element\n\tResize = (e) => {\n\t\tconst repoBar = document.getElementById('RepoBar');\n\t\tconst projectPage = document.getElementById('ProjectPage');\n\t\tconst leftSiteBar = document.getElementById('LeftSiteBar');\n\t\t//console.log(window.innerWidth - e.clientX);\n\t\tlet szerRepo = window.innerWidth - e.clientX;\n\t\tlet szerProject = (window.innerWidth - leftSiteBar.offsetWidth) - szerRepo;\n\t\trepoBar.style.width = szerRepo + 'px';\n\t\tprojectPage.style.width = szerProject + 'px';\n\t\t//element.style.height = (e.clientY - element.offsetTop) + 'px';\n\t}\n\t//on mouseup remove windows functions mousemove & mouseup\n\tstopResize = (e) => {\n\t\twindow.removeEventListener('mousemove', this.Resize, false);\n\t\twindow.removeEventListener('mouseup', this.stopResize, false);\n\t}\n\n\trender() {\n\t\twindow.addEventListener('onresize', this.Resize, false);\n\n\n\t\tconst mount = document.querySelectorAll('div.demo-mount-nested-editable');\n\n\t\treturn (\n\t\t\t<Aux>\n\t\t\t\t<div className=\"RepoBar\" id=\"RepoBar\">\n\t\t\t\t\t<div className=\"topPart\">\n\t\t\t\t\t\t<div className=\"repoTab\" >\n\t\t\t\t\t\t\t<div className=\"scrollStrip\"\n\t\t\t\t\t\t\t\tonMouseDown={this.startResizeRepo}>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-arrows-alt-h\"></i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\tRepozytorium\n\t\t\t\t\t</div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t<div className=\"repoNav\" >\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t<div className=\"mainRepoContent\" data-scrollbar>\n\n\n\n\t\t\t\t\t\t<FileBrowser\n\t\t\t\t\t\t\tfiles={this.props.files}\n\t\t\t\t\t\t\ticons={{\n\t\t\t\t\t\t\t\tFile: <i className=\"fas fa-file\"></i>,\n\t\t\t\t\t\t\t\tImage: <i className=\"fas fa-image\"></i>,\n\t\t\t\t\t\t\t\tPDF: <i className=\"fas fa-file-pdf\"></i>,\n\t\t\t\t\t\t\t\tRename: <i className=\"fas fa-edit\"></i>,\n\t\t\t\t\t\t\t\tFolder: <i className=\"fas fa-folder\"></i>,\n\t\t\t\t\t\t\t\tFolderOpen: <i className=\"fas fa-folder-open\"></i>,\n\t\t\t\t\t\t\t\tDelete: <i className=\"fas fa-trash\"></i>,\n\t\t\t\t\t\t\t\tLoading: <i className=\"fas fa-spinner\"></i>,\n\t\t\t\t\t\t\t}}\n\n\t\t\t\t\t\t\tonCreateFolder={this.handleCreateFolder}\n\t\t\t\t\t\t\tonCreateFiles={this.handleCreateFiles}\n\t\t\t\t\t\t\tonMoveFolder={this.handleRenameFolder}\n\t\t\t\t\t\t\tonMoveFile={this.handleRenameFile}\n\t\t\t\t\t\t\tonRenameFolder={this.handleRenameFolder}\n\t\t\t\t\t\t\tonRenameFile={this.handleRenameFile}\n\t\t\t\t\t\t\tonDeleteFolder={this.handleDeleteFolder}\n\t\t\t\t\t\t\tonDeleteFile={this.handleDeleteFile}\n\n\t\t\t\t\t\t\t// Always called when a file or folder is selected\n\t\t\t\t\t\t\tonSelect={this.handleSelect}\n\t\t\t\t\t\t\t// Called after onSelect, only on file selection\n\t\t\t\t\t\t\tonSelectFile={this.handleSelectFile}\n\t\t\t\t\t\t\t// Called after onSelect, only on folder selection\n\t\t\t\t\t\t\tonSelectFolder={this.handleSelectFolder}\n\t\t\t\t\t\t\tonPreviewOpen={this.handlePreviewOpen}\n\t\t\t\t\t\t\tonPreviewClose={this.handlePreviewClose}\n\t\t\t\t\t\t\tonFolderOpen={this.handleFolderOpen}\n\t\t\t\t\t\t\tonFolderClose={this.handleFolderClose}\n\n\t\t\t\t\t\t// \t\t\tonSelect: (fileOrFolder) => {}, // Always called when a file or folder is selected\n\t\t\t\t\t\t// onSelectFile: (file) => {}, //    Called after onSelect, only on file selection\n\t\t\t\t\t\t// onSelectFolder: (folder) => {}, //    Called after onSelect, only on folder selection\n\n\t\t\t\t\t\t// onPreviewOpen: (file) => {}, // File opened\n\t\t\t\t\t\t// onPreviewClose: (file) => {}, // File closed\n\n\t\t\t\t\t\t// onFolderOpen: (folder) => {}, // Folder opened\n\t\t\t\t\t\t// onFolderClose: (folder) => {}, // Folder closed\n\n\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t{mount[0]}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</Aux>\n\t\t);\n\t}\n\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcurrentProjectID: state.projectR.currentProjectID,\n\t\tcurrentProjectName: state.projectR.currentProjectName,\n\t\tcurrentProjectOwner: state.projectR.currentProjectOwner,\n\t\tfiles: state.repoR.files,\n\t\ttoken: state.homeR.token,\n\n\n        txtDisplayed: state.previewR.txtDisplayed,\n        txtfileName: state.previewR.txtfileName,\n        txtFileUrl: state.previewR.txtFileUrl,\n\n        audiofileName: state.previewR.audiofileName,\n        audioDisplayed: state.previewR.audioDisplayed,\n        audioFileUrl:  state.previewR.audioFileUrl,\n        waveSurferInitialized: state.previewR.waveSurferInitialized,\n        playing: state.previewR.playing,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonHandleCreateFolder: (key, projectId, userId, token) => dispatch(repoActions.handleCreateFolder(key, projectId, userId, token)),\n\t\tonHandleCreateFiles: (files, prefix) => dispatch(repoActions.handleCreateFiles(files, prefix)),\n\t\tonHandleRenameFolder: (oldKey, newKey, projectId, userId, token) => dispatch(repoActions.handleRenameFolder(oldKey, newKey, projectId, userId, token)),\n\t\tonHandleRenameFile: (oldKey, newKey, projectId, userId, token) => dispatch(repoActions.handleRenameFile(oldKey, newKey, projectId, userId, token)),\n\t\tonHandleDeleteFolder: (folderKey, projectId, userId, token) => dispatch(repoActions.handleDeleteFolder(folderKey, projectId, userId, token)),\n\t\tonHandleDeleteFile: (fileKey, projectId, userId, token) => dispatch(repoActions.handleDeleteFile(fileKey, projectId, userId, token)),\n\t\tonGetProjectFilesForUser: (userId, projectId, token) => dispatch(repoActions.getProjectFilesForUser(userId, projectId, token)),\n\t\tonOpenTxtFileToPreview: (file, ifWaveSurferIsInitialized) => dispatch(repoActions.openTxtFileToPreview(file,ifWaveSurferIsInitialized)),\n\t\tonOpenAudioFileToPreview: (file,ifWaveSurferIsInitialized) => dispatch(repoActions.openAudioFileToPreview(file,ifWaveSurferIsInitialized))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(repoBar));","import React from 'react';\nimport Aux from '../../hoc/Auxiliary';\n\nconst errorPage = (props) => {\n\n   \n    return(\n        <Aux>\n            <p>Ups.... coś poszło nie tak</p>\n        </Aux>\n    );\n}\n\nexport default errorPage;","import React from 'react';\nimport Aux from '../../../../hoc/Auxiliary';\nimport './Tab.css';\nimport { NavLink } from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\n\n\nconst tab = (props) => {\n\n    let klasy = [\"nav-link\", \"clarinNavLink\"];\n\n \n\n    return(\n        <Aux>\n             <li className=\"nav-item\">\n                 {\n                     /*\n                        <a className={klasy.join(' ')} \n                        href=\"#\"\n                        onClick = {()=> props.whenClickTab(props.title)}>{props.title}</a>                       \n                        */\n                 }\n\n                    <NavLink className={klasy.join(' ')} \n                       to={{\n                           pathname: props.match.url + '' + props.whereToLink,\n                           search: '',\n                           activeClassName: 'active' \n                       }}>{props.title}</NavLink>\n\n                    \n                \n            </li>\n        </Aux>\n    );\n}\n\nexport default withRouter(tab);","import React, { Component } from 'react';\nimport './ProjectPage.css';\nimport Aux from '../../hoc/Auxiliary';\n\nimport { connect } from 'react-redux';\n\nimport Dashboard from './Dashboard/Dashboard';\nimport RecognitionTool from './RecognitionTool/RecognitionTool';\nimport SegmentTool from './SegmentTool/SegmentTool';\nimport TranscriptTool from './PreviewTool/TranscriptTool';\n\nimport RepoBar from './RepoBar/RepoBar';\nimport ErrorPage from '../../components/ErrorPage/ErrorPage';\n\nimport TopBar from '../../components/TopBar/TopBar';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Tab from '../ProjectPage/TabContainer/Tab/Tab';\nimport * as projectActions from '../../store/actions/index';\n\n//import axios from '../../axios-speechtools';\n\nclass ProjectPage extends Component {\n\n\n  componentWillMount = () => {\n\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n\n    if (new Date(expiryDate) <= new Date()) {\n      this.props.onLogOut(); \n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const userName = localStorage.getItem('userName');\n    const remainingMilliseconds =\n    new Date(expiryDate).getTime() - new Date().getTime();\n\n    console.log(userId)\n    console.log(userName)\n    console.log(token)\n    this.props.onSetLoggedIn(userId,userName, token);    \n\n    //laduje podstawowe informacje o projekcie\n    //pozostale rzeczy beda pochodzic z serwera i db\n\n    //jezeli user przeszedl do projektu z listy projektow\n    //if(this.props.location.state) {\n      \n      \n      const projectId = this.props.currentProjectID;\n      const projectTitle = this.props.currentProjectName;\n      const projectOwnerId = this.props.currentProjectOwner;\n      console.log(projectId)\n      console.log(projectTitle)\n      console.log(projectOwnerId)\n\n      this.props.onInitProjectHandler(projectId, projectTitle, projectOwnerId);\n      this.props.onClearRecoStore();\n      this.props.onClearSegmentStore();\n      this.props.onClearPreviewStore();\n    //}\n\n  }\n\n  render() {\n\n    return (\n        <Aux>\n         \n            <TopBar \n                  version=\"longinit\" \n                  wide=\"yes\" \n                  language=\"pl\" \n                  projectTitle={\"\"+this.props.currentProjectName}\n                  changeLn = {this.props.changeLn}\n                  currLn = {this.props.currLn}/>\n            {/*\n            <LeftSiteBar czyTopPart=\"true\" />\n            */}\n            \n\n            <div className=\"ProjectPage\" id=\"ProjectPage\">\n \n              <ul className={[\"nav nav-tabs\", \"darkbg\"].join(' ')}>\n                  <Tab  title=\"Dashboard\" whereToLink={'/dashboard'}/>\n                  <Tab  title=\"Rozpoznawanie\" whereToLink={'/recognition'}/>\n                  <Tab  title=\"Sementacja\" whereToLink={'/segment'}/>\n                  <Tab  title=\"Podgląd plików\" whereToLink={'/preview'}/>                  \n              </ul>\n            \n              <Switch>\n                <Route path={this.props.match.url + '/recognition'} component={RecognitionTool} />\n                <Route path={this.props.match.url + '/segment'} component={SegmentTool} />\n                <Route path={this.props.match.url + '/preview'} component={TranscriptTool} />\n                <Route path={this.props.match.url + '/dashboard'} render={(props)=> {\n                  return <Dashboard/>\n                }} />\n                <Redirect from={this.props.match.url + '/'} to={this.props.match.url + '/dashboard'} />\n                <Route component={ErrorPage}/> \n              </Switch>\n              \n\n            </div>\n\n            <RepoBar />\n          \n        </Aux>\n      \n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentProjectID: state.prolistR.chosenProjectID,\n    currentProjectName: state.prolistR.chosenProjectName,\n    currentProjectOwner: state.prolistR.chosenProjectOwner,\n    \n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n     onInitProjectHandler: (projectId, projectTitle, projectOwner) => dispatch(projectActions.initProject(projectId, projectTitle, projectOwner)),\n     onSetLoggedIn:(userId, userName, token) => dispatch(projectActions.setLoggedIn(userId, userName, token)),\n     onLogOut: () => dispatch(projectActions.logout()),\n     onClearRecoStore: () => dispatch(projectActions.clearRecoStore()),\n     onClearSegmentStore: () => dispatch(projectActions.clearSegmentStore()),\n     onClearPreviewStore: () => dispatch(projectActions.clearPreviewStore()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectPage);\n","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './ProjectListItem.css';\nimport {Link} from 'react-router-dom';\n\n\nconst projectListItem = (props) => {\n\n    \n\n          // console.log(props.key)\n\n    return(\n        <Aux>\n             <tr className=\"ProjectListItem\">   \n                <td className=\"projectTitle\">\n\n                     <a onClick={props.wyborprojektu}>\n                        {props.title}\n                     </a>\n                   \n\n                </td>\n                {\n                    //<td>{props.owner}</td>\n                }\n                \n                <td>{props.modified}</td>\n                <td>\n                    {\n                    //<span onClick={props.duplicateProject}><i className={[\"fas\", \"fa-clone\", \"ProjectIcon\"].join(' ')}></i></span>\n                    //<span onClick={props.shareProject}><i className={[\"fas\", \"fa-share-alt\", \"ProjectIcon\"].join(' ')}></i></span>\n                    }\n                    <span onClick={props.editName}><i className={[\"fas\", \"fa-pen\", \"ProjectIcon\"].join(' ')}></i></span>\n                    <span onClick={props.deleteProject}><i className={[\"fas\", \"fa-trash-alt\", \"ProjectIcon\"].join(' ')}></i></span>\n                </td>\n\t\t\t</tr>\n        </Aux>\n    );\n}\n\nexport default projectListItem;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './ProjectList.css';\n\nconst projectsList = (props) => {\n\n    const ifLoading = props.ifLoading;\n\n     const listHeader = (\n            <tr className=\"thead-dark\">\n                <td className=\"title\">Tytuł</td>\n                {\n                    //<tSuperMpongoDBd >Właściciel</td>\n                }\n                \n                <td >Data utworzenia</td>\n                <td >Akcje</td>\n            </tr>\n        );\n \n\n    return(\n        <Aux>\n            <div className={\"ProjectList\"}>\n                {props.siteBar}\n                <table className=\"table\">\n                    <tbody>\n                        {listHeader}\n                        {props.children}\n                    </tbody>\n                </table>\n            </div>\n        </Aux>\n    );\n}\n\nexport default projectsList;","import React from 'react';\nimport './Spinner.css';\n\nconst spinner = (props) => {\n\n\n    return(\n        <div className=\"Spinner\">\n            <div className=\"lds-facebook\">\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )\n}\n\nexport default spinner;","import React, { Component } from 'react';\n\n\nclass SingleInputForm extends Component {\n\n    state = {\n        value: '',\n        isValid: false,\n    }\n\n\n    render() {\n\n        const errorMessage = this.props.errorMessage || false;\n\n        \n\n        return (\n\n            \n\n            <form onSubmit={this.props.onSubmitHandler}>\n                <h5 style={{textAlign:'left'}}>{this.props.title}</h5>\n                <hr/>\n                {\n                    errorMessage !== false ?\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {this.props.errorMessage}\n                        </div> : null\n                }\n                <div className=\"input-group mb-3\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder={this.props.placeholder}\n                        onChange={this.props.onChangeHandler}\n                        value={this.props.value} />\n                    <div className=\"input-group-append\">\n                        <button\n                            className=\"btn btn-primary\"\n                            type=\"submit\"\n                        >\n                            {this.props.buttonLabel}\n                        </button>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default SingleInputForm","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\n\n\nconst confirmationForm = (props) => {\n    \n        return (\n            <Aux>\n                <div className=\"alert alert-warning\" role=\"alert\">\n\n                     <p style={{textAlign:'center'}}>{props.messageQuestion}</p>\n                     <p style={{textAlign:'center',fontWeight:'bold'}}>{props.projectName}</p>\n\n                </div>\n                \n                <button \n                    className=\"btn btn-outline-secondary\"\n                    onClick={props.onCancel}>\n                    Cancel\n                </button>\n\n                <button \n                    className=\"btn btn-primary\"\n                    onClick={props.onOk}>\n                    OK\n                </button>\n\n            </Aux>\n        )\n}\n\nexport default confirmationForm","import React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliary';\nimport ProjectListItem from './ProjectListItem/ProjectListItem';\nimport LeftSiteBar from '../ProjectPage/LeftSiteBar/LeftSiteBar';\nimport ProjectsList from './ProjectsList/ProjectList';\nimport TopBar from '../../components/TopBar/TopBar';\nimport {withRouter, Route } from 'react-router-dom';\nimport ProjectPage from '../ProjectPage/ProjectPage';\nimport Modal from '../../components/UI/Modal/Modal';\nimport { connect } from 'react-redux';\nimport * as projectListActions from '../../store/actions/index';\nimport ButtonLeftBar from '../../components/UI/ButtonLeftBar/ButtonLeftBar';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport SingleInputForm from '../../components/UI/SingleInputForm/SingleInputForm';\nimport ConfirmationForm from '../../components/UI/ConfirmationForm/ConfirmationForm';\n\nconst localActions = {\n  CREATE_NEW_PROJECT: 'CREATE_NEW_PROJECT',\n  EDIT_NAME_PROJECT: 'EDIT_NAME_PROJECT',\n  DELETE_PROJECT: 'DELETE_PROJECT',\n}\n\nclass ProjectsListPage extends Component {\n\n  state = {\n    modalDisplay: false,\n    newProjectName: '',\n    modalTitle: '', //tytutl okna modalnego\n    currentValue: '', //wpisywany do okna modalnego\n  }\n\n\n  componentDidMount = () => {\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.props.onLogOut(); \n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const userName = localStorage.getItem('userName');\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n\n    console.log(userId)\n    console.log(userName)\n    console.log(token)\n    this.props.onSetLoggedIn(userId,userName, token);\n    //this.setState({ isAuth: true, token: token, userId: userId });\n    //this.setAutoLogout(remainingMilliseconds);\n    \n    this.props.onGetProjectsList(userId, token);\n\n  }\n\n  // logoutHandler = () => {\n  //   this.props.onLogout();\n  // };\n\n  // setAutoLogout = milliseconds => {\n  //   setTimeout(() => {\n  //     this.logoutHandler();\n  //   }, milliseconds);\n  // };\n\n  duplicateProjectHandler = (projectIndex) => {\n    alert('duplicate');\n  }\n\n  editNameProjectHandler = (projectIndex) => {\n    alert('edit');\n  }\n\n  shareProjectHandler = (projectIndex) => {\n    alert('share');\n  }\n\n  removeProjectHandler = (projectIndex) => {\n    alert('remove');\n  }\n\n  // wyborProjektuHandler = (projektIndex, projectName) => {\n  //   //const currlocation = this.props.match.url;\n  //   //wrzucam parametry do URL\n  //   const queryParams = [];\n  //   this.props.history.push({\n  //     pathname: \"/projects/\" + encodeURIComponent(projektIndex),\n  //     search: '',\n  //     key: encodeURIComponent(projektIndex)\n  //   });\n  // }\n\n  //prosty validator...\n  checkValidity = (value) => {\n    let isValid = true;\n\n    //bardzo prosta validacja po stronie przegladarki\n    //taka sama jest po stronie serwera\n    //nie moze byc puste i musi miec min. 3 znaki\n    //isValid = value.trim() !== '' && isValid;\n    //isValid = value.length >= 3 && isValid;\n\n    return isValid;\n  }\n\n  addNewProjectHandler = (event) => {\n   \n    event.preventDefault();\n    // dodaje nowy projekt tutaj TO DO\n    let formIsValid = this.checkValidity(this.state.newProjectName);\n    //console.log(formIsValid);\n    \n    if(formIsValid){\n      this.props.onNewProject(this.state.newProjectName, this.props.userId, this.props.token);\n\n    } else {\n      console.log('FORM IS INVALID!');\n    }\n  }\n\n  // changeNameProjectHandler = (event) => {\n  //   event.preventDefault();\n    \n  //   let formIsValid = this.checkValidity(this.state.newProjectName);\n  //   if(formIsValid){\n  //     //console.log(this.state.newProjectName)\n  //     this.props.onNewNameProject(this.state.newProjectName);\n\n  //   } else {\n  //     console.log('FORM IS INVALID!');\n  //   }\n  // }\n\n  newProjectNameChangeHandler = (event) => {\n    //console.log(event.target.value)\n    console.log('newProjectNameChangeHandler');\n    event.preventDefault();\n    this.setState({\n      newProjectName: event.target.value,\n    })\n  }\n\n  editProjectNameSubmitHandler = (event) => {\n    event.preventDefault();\n    this.props.onNameEdit(\n      this.props.projectId, \n      this.state.newProjectName,\n      this.props.userId,\n      this.props.token)\n  }\n\n  \n  onNewProjectDone = () => {\n    this.closeModalHandler()\n  }\n\n  \n\n\n  //otwiera okno modalne\n  openModalHandler = (actionType, projectId, projectName) => {\n    this.setState({\n      newProjectName: projectName,\n    })\n    this.props.onOpenModalHandler(actionType,projectId, projectName);\n  }\n\n  //zamyka okno modalne\n  closeModalHandler = () => {\n    this.props.onCloseModalHandler();\n  }\n\n  removeProjectHandler = (projectId) => {\n    this.props.onDelete(projectId, this.props.userId, this.props.token);\n  }\n\n  wyborProjektuOK = (projektId, projektName, projektOwner) => {\n    {\n      /*\n    <Link to={{\n      pathname: \"/projects/\" + encodeURIComponent(props.projektID),\n      state: {\n          projectTitle: props.title,\n          projectOwner: props.owner,\n      }\n      */\n    }\n\n    this.props.onProjectChoice(projektId, projektName, projektOwner)\n    this.props.history.push(\"/projects/\"+projektId);\n  }\n\n  \n  render() {\n\n    //tworze formularz ktory pokaze sie w oknie modalnym\n    //w zaleznosci ktory przycisk zostal wcisniety\n\n    //formularz dodawania nazwy dla nowego projektu\n    const newProjectForm = (\n      <Aux>\n        <SingleInputForm\n          onSubmitHandler={this.addNewProjectHandler}\n          onChangeHandler={this.newProjectNameChangeHandler}\n          title=\"Stworz nowy projekt\"\n          placeholder=\"Podaj nazwe projektu\"\n          buttonLabel=\"Dodaj projekt\"\n          value = {this.state.newProjectName}\n          errorMessage = {this.props.errorMessage}\n        />\n      </Aux>\n    );\n\n    //formularz edycji nazwy projektu\n    const editProjectName = (\n      <Aux>\n        <SingleInputForm\n          onSubmitHandler={this.editProjectNameSubmitHandler}\n         // onSubmitHandler={this.props.onNameEdit(this.props.projectId, this.state.newProjectName)}\n          //onSubmitHandler={this.props.onNameEdit(this.props.projectId, this.state.newProjectName)}\n          onChangeHandler={this.newProjectNameChangeHandler}\n          title=\"Edytuj nazwe projektu\"\n          placeholder=\"Zmie nazwe projektu\"\n          buttonLabel=\"Zmien\"\n          value = {this.state.newProjectName}\n          errorMessage = {this.props.errorMessage}\n        />\n      </Aux>\n    );\n\n    const deleteProject = (\n      <Aux>\n        <ConfirmationForm\n          messageQuestion={\"Czy na pewnoe chcesz usunac projekt?\"}\n          onCancel={this.closeModalHandler}\n          onOk = {(projectId)=>this.removeProjectHandler(this.props.projectId)}\n          projectName = {this.props.projectName}\n        />\n      </Aux>\n    );\n\n    let modalContent = null;\n  \n\n    switch(this.props.localAction){\n      case(localActions.CREATE_NEW_PROJECT):\n        modalContent = newProjectForm;\n        break;\n      case(localActions.EDIT_NAME_PROJECT):\n        modalContent = editProjectName;\n        break;\n      case(localActions.DELETE_PROJECT):\n        modalContent = deleteProject;\n        break;\n      default:\n        modalContent = <p>Bledny typ akcji lokalnej</p>\n    }\n    \n\n    //lewy sidebar\n    const leftSiteBar = (\n      <LeftSiteBar czyTopPart={false} \n        desc=\"W tym miejscu można tworzyć nowe projekty które stanowią przestrzeń roboczą dla wgranych plików. Projekty są przydzielane i wydoczne tylko dla zalogowanego użytkownika. UWAGA! w przypadku usunięcia projektu, zostaną usunięte również wszystkie wgrane do niego pliki\"\n         >\n        <ButtonLeftBar\n          customeStyle={{ height: '50px' }}\n          napis=\"Dodaj projekt\"\n          iconType=\"fa-plus\"\n          whenClicked={(actionType)=>this.openModalHandler(localActions.CREATE_NEW_PROJECT,'','')} />\n      </LeftSiteBar>\n    )\n\n    //co wyswietlic\n    let toDisplay = null;\n\n    //sama lista projektow\n    let projectList = null;\n\n    if (!this.props.ifError) {\n      //console.log(this.props.ifProjectsLoading)\n      //jak nie ma error to sprawdzam czy sie laduja dane\n      if (this.props.ifProjectsLoading) {\n        toDisplay = <Spinner />\n      } else {\n\n       // console.log(this.props.projectList);\n\n        projectList = this.props.projectList\n          .map((projekt, i) => {\n            //console.log(projekt)\n            return <ProjectListItem\n              key={projekt._id}\n              projektID={projekt._id}\n              title={projekt.name}\n              owner={projekt.owner}\n              modified={projekt.projectCreated}\n              deleteProject={(actionType,projectId, projectName)=>this.openModalHandler(localActions.DELETE_PROJECT, projekt._id, projekt.name)}\n              wyborprojektu = {(projektId, projektName, projektOwner)=>this.wyborProjektuOK(projekt._id, projekt.name, projekt.owner)}\n              //wyborprojektu={() => this.props.onProjectChoice(projekt._id, projekt.name, projekt.owner)}\n              //duplicateProject={() => this.props.onDuplicate(projekt._id)}\n              editName={(actionType,projectId, projectName)=>this.openModalHandler(localActions.EDIT_NAME_PROJECT,projekt._id, projekt.name)}\n   \n              //shareProject={() => this.props.onShare(projekt._id)}\n              //deleteProject={() => this.props.onDelete(projekt._id)}\n            />\n          });\n\n        toDisplay = (\n          <ProjectsList siteBar={leftSiteBar}>\n\n            {projectList}\n\n          </ProjectsList>\n        );\n\n      }\n\n    } else {\n      //kiedy jest error\n      toDisplay = <p className=\"error\">Error with connecting to server</p>;\n    }\n\n\n    return (\n      <Aux>\n\n        <Route path=\"/project/\" render={(props) => (\n          <ProjectPage {...props} />\n        )} />\n\n\n        <Modal\n          show={this.props.modalDisplay}\n          modalClosed={this.closeModalHandler}\n          >\n            {modalContent}\n        </Modal>\n\n\n        <TopBar\n          version=\"init\"\n          wide=\"yes\"\n          language=\"pl\"\n          projectTitle=\"\"\n          changeLn={this.props.changeLn}\n          currLn={this.props.currLn} />\n\n        {leftSiteBar}\n\n        {\n          toDisplay\n        }\n\n      </Aux>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    userId: state.homeR.userId,\n    userName: state.homeR.userName,\n    token: state.homeR.token,\n    localAction: state.prolistR.localAction,\n    modalDisplay: state.prolistR.modalDisplay,\n    newProjectCreated: state.prolistR.loaded,\n    projectList: state.prolistR.projects,\n    ifError: state.prolistR.error,\n    errorMessage: state.prolistR.errorMessage,\n    ifProjectsLoading: state.prolistR.projectsLoading,\n    projectId: state.prolistR.projectId,  //wiem ktorego projektu dotyczy kliknieta akcja\n    projectName: state.prolistR.projectName,  //oraz jaka jest nazwa obecnego projektu\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOpenModalHandler: (actionType,projectId, projectName) => dispatch(projectListActions.openModal(actionType,projectId, projectName)),\n    onCloseModalHandler: () => dispatch(projectListActions.closeModal()),\n    onNewProjectDone: () => dispatch(projectListActions.addNewProjectDone()),\n    onNewProject: (projectName, userId, token) => dispatch(projectListActions.addNewProject(projectName, userId, token)),\n    onProjectChoice: (projectId, projectName, projectOwner) => dispatch(projectListActions.projectChoice(projectId, projectName, projectOwner)),\n   // onDuplicate: (projectId) => dispatch(projectListActions.duplicateProject(projectId)),\n   // onShare: (projectId) => dispatch(projectListActions.shareProject(projectId)),\n    onDelete: (projectId, userId, token) => dispatch(projectListActions.deleteProject(projectId, userId, token)),\n    onNameEdit: (projectId, newProjectName,userId, token) => dispatch(projectListActions.editName(projectId, newProjectName,userId, token)),\n    onGetProjectsList: (userId, token) => dispatch(projectListActions.getProjectsList(userId, token)),\n    onSetLoggedIn:(userId, userName, token) => dispatch(projectListActions.setLoggedIn(userId, userName, token)),\n    onLogOut: () => dispatch(projectListActions.logout()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProjectsListPage));\n\n","import * as actionTypes from './actionsTypes';\nimport axios from 'axios';\n\n//otwieram okno modalne\nexport const openModal = (actionType, projectId, projectName) => {\n    return {\n        type: actionTypes.OPEN_MODAL,\n        localActionType: actionType,\n        projectId: projectId,\n        projectName: projectName\n    }\n}\n\n//zamykam okno modalne\nexport const closeModal = () => {\n    return {\n        type: actionTypes.CLOSE_MODAL,\n    }\n}\n\n\n//###########################################\n//#########  pobieram liste projektow #########\n//###########################################\n\nexport const getProjectsListAction = (userId, projects) => {\n    //console.log(projects)\n    return {\n        type: actionTypes.GET_PROJECTS_LIST,\n        userId: userId,\n        projects: projects,\n    }\n}\n\nexport const getProjectsListFailed = (error) => {\n    return {\n        type: actionTypes.GET_PROJECTS_LIST_FAILED,\n        error: error\n    }\n}\n\nexport const getProjectsList = (userId, token) => {\n    return dispatch => {\n        //const header = Authorization: `Bearer-${token}`;\n        //return axios.get(URLConstants.USER_URL, { headers: { header } });\n        axios.get('/projectsList',{\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        })\n            .then(response => {\n                console.log(response)\n                dispatch(getProjectsListAction(userId, response.data.projects));\n            })\n            .catch(error => {\n                dispatch(getProjectsListFailed(error));\n            });\n    }\n}\n\n//##################################################\n//#########  dodaje projekt ##########\n//##################################################\nexport const addNewProjectAction = (projectName, messageFromServer, responsedNewProject, userId, token) => {\n    return {\n        type: actionTypes.ADD_PROJECT,\n        projectName: projectName,\n        messageFromServer: messageFromServer,\n        responsedNewProject: responsedNewProject,\n        userId: userId,\n        token: token,\n    }\n}\n\nexport const addNewProjectActionFailed = (error) => {\n    return {\n        type: actionTypes.ADD_PROJECT_FAILED,\n        errorMessage: error\n    }\n}\n\nexport const initNewProjectAction = () => {\n    return {\n        type: actionTypes.ADD_PROJECT_INIT,\n    }\n}\n\nexport const addNewProjectDone = () => {\n    return {\n        type: actionTypes.ADD_PROJECT_DONE,\n    }\n}\n\nexport const addNewProject = (projectName, userId, token) => {\n    return dispatch => {\n        //ustawiam loaded na false w reducerze aby wylaczyc okienko dopiero gdy sie zaladuje\n        dispatch(initNewProjectAction())\n\n        axios.post('/projectsList', {\n                projectName: projectName,\n            },{\n                headers: {\n                    Authorization: 'Bearer ' + token\n            }})\n            .then(response => {\n                //console.log(\"from action:\")\n                //console.log(response)\n                dispatch(addNewProjectAction(projectName, response.data.message, response.data.project, userId, token));\n                dispatch(addNewProjectDone());\n            })\n            .catch(error => {\n                dispatch(addNewProjectActionFailed(error));\n            });\n    }\n}\n\n//########################################\n//#########  wybieram  projekt ##########\n//########################################\nexport const projectChoice = (projectId, projectName, projectOwner) => {\n    return {\n        type: actionTypes.CHOSE_PROJECT,\n        projectId: projectId,\n        projectName: projectName,\n        projectOwner: projectOwner,\n    }\n}\n\nexport const duplicateProject = (projectId) => {\n    return {\n        type: actionTypes.DUPLICATE_PROJECT,\n        projectId: projectId\n    }\n}\n\nexport const shareProject = (projectId) => {\n    return {\n        type: actionTypes.SHARE_PROJECT,\n        projectId: projectId\n    }\n}\n\n//################################################\n//################## USUWANIE PROJEKTU ###############\n//################################################\n\nexport const deleteProjectAction = (projectId, message,userId, token) => {\n    return {\n        type: actionTypes.REMOVE_PROJECT,\n        projectId: projectId,\n        message: message,\n        userId: userId,\n        token: token,\n    }\n}\n\nexport const deleteProject = (projectId, userId, token) => {\n    return dispatch => {\n     \n        axios.delete('/projectsList/' + projectId, {\n             data: { idprojektu: projectId },\n             headers: {\n                Authorization: 'Bearer ' + token\n            } \n        })\n            .then(response => {\n                if(response.status !== 200 && response.status !== 201){\n                    throw new Error('Deleting a project failed');\n                }\n                dispatch(deleteProjectAction(response.data.projectId, response.data.message, userId, token));\n                dispatch(closeModal());\n            })\n            .catch(error => {\n                console.log(error)\n               // dispatch(editNameProjectActionFailed(error));\n            });\n    }\n}\n\n//################################################\n//################## EDYCJA NAZWY ###############\n//################################################\n\nexport const editNameProjectAction = (projectId, newProjectName, messageFromServer, userId, token) => {\n    return {\n        type: actionTypes.EDIT_NAME,\n        projectId: projectId,\n        newProjectName: newProjectName,\n        message: messageFromServer,\n        userId: userId,\n        token: token,\n    }\n}\n\nexport const editNameProjectActionFailed = (error) => {\n    return {\n        type: actionTypes.EDIT_NAME_FAILED,\n        error: error.message\n    }\n}\n\nexport const editName = (projectId, newName, userId, token) => {\n    return dispatch => {\n\n        //console.log('EDIT NAME')\n        axios.put('/projectsList/' + projectId, {\n            newProjectName: newName,\n            projectId: projectId,\n        },{\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        })\n            .then(response => {\n                //console.log(\"from action:\")\n                //console.log(response)\n                dispatch(editNameProjectAction(response.data.projectEntry._id, response.data.projectEntry.name, response.data.message, userId, token));\n                dispatch(closeModal());\n            })\n            .catch(error => {\n                console.log(error)\n                dispatch(editNameProjectActionFailed(error));\n            });\n    }\n\n}\n\n\n\n","import React from 'react';\nimport TopBar from '../TopBar/TopBar';\nimport Aux from '../../hoc/Auxiliary';\nimport './HelpPage.css';\n\nconst helpPage = (props) => {\n    return (\n        <Aux>\n            <TopBar\n                version=\"init\"\n                wide=\"no\"\n                language=\"pl\"\n                projectTitle=\"\"\n                changeLn={props.changeLn}\n                currLn={props.currLn}\n            />\n\n            <div className=\"container HelpPage\">\n                \n                <p></p>\n                <div className=\"faq\">\n                    <h5>W jakim celu należy się zarejestrować?</h5>\n                    <p>\n                        Dzięki rejestracji istnieje możliwość zarządzania swoimi plikami w obrębie tworzonych projektów. Ponadto przydzielana jest prywatna przestrzeń na pliki użytkownika.\n                    </p>\n                </div>\n\n                <div className=\"faq\">\n                    <h5 >Zapomniałem hasło, co robić?</h5>\n                    <p>\n                        Póki co serwis nie posiada funkcjonalności przypomnienia hasła. Napisz do nas maila (adres w stopce na dole strony) abyśmy mogli zresetować hasło za Ciebie.\n                    </p>\n                </div>\n\n                <div className=\"faq\">\n                    <h5 >Czy moje pliki są bezpieczne?</h5>\n                    <p>\n                        Pliki są przechowywane w centralnym repozytorium do którego dostęp posiada tylko zarejestrowana osoba. Pliki można ewentualnie usunąć po zapisaniu wyników usług.\n                    </p>\n                </div>\n  \n            \n            \n            </div>\n\n        </Aux>\n\n    );\n}\n\nexport default helpPage;","import React, { Component } from 'react';\nimport './App.css';\nimport HomePage from './containers/HomePage/HomePage';\nimport { Route, Switch } from 'react-router-dom';\nimport ProjectPage from './containers/ProjectPage/ProjectPage';\nimport ProjectsListPage from './containers/ProjectsListPage/ProjectsListPage';\nimport HelpPage from './components/HelpPage/HelpPage';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport { connect } from 'react-redux';\nimport * as homeActions from './store/actions/index';\n\nimport en from 'react-intl/locale-data/en';\nimport pl from 'react-intl/locale-data/pl';\n\nimport messages_pl from \"./translations/pl.json\";\nimport messages_en from \"./translations/en.json\";\n\naddLocaleData([...en, ...pl]);\n\nconst messages = {\n  'pl': messages_pl,\n  'en': messages_en\n};\n\nconst language = navigator.language.split(/[-_]/)[0];  // language without region code\n\nclass App extends Component {\n\n  state = {\n    currln: \"pl\",\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.logoutHandler();\n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const userName = localStorage.getItem('userName');\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    this.props.onSetLoggedIn(userId, userName, token)\n    //this.setState({ isAuth: true, token: token, userId: userId });\n    this.setAutoLogout(remainingMilliseconds);\n  }\n\n  logoutHandler = () => {\n    this.props.onLogout();\n  };\n\n  setAutoLogout = milliseconds => {\n    setTimeout(() => {\n      this.logoutHandler();\n    }, milliseconds);\n  };\n\n\n\n  changeLnHandler = (ln) => {\n    this.setState({\n      currln: ln,\n    })\n  }\n\n  render() {\n\n\n\n\n    if (this.props.chosenProjectID !== null) {\n\n    }\n\n    return (\n      <div className=\"App\">\n        <IntlProvider locale={this.state.currln} defaultLocale=\"pl\" messages={messages[this.state.currln]}>\n\n\n          {\n\n          }\n\n\n          <Switch>\n\n            <Route path=\"/projects/:projectID\" render={(props) => (\n              <ProjectPage {...props}\n                changeLn={this.changeLnHandler}\n                currLn={this.state.currln} />\n            )} />\n\n            <Route path=\"/projectsList\" render={(props) => (\n              <ProjectsListPage {...props}\n                changeLn={this.changeLnHandler}\n                currLn={this.state.currln} />\n            )} />\n\n            <Route path=\"/help\" render={(props) => (\n              <HelpPage {...props}\n                changeLn={this.changeLnHandler}\n                currLn={this.state.currln} />\n            )} />\n            <Route path=\"/\" render={(props) => (\n              <HomePage {...props}\n                changeLn={this.changeLnHandler}\n                currLn={this.state.currln} />\n            )} />\n          </Switch>\n        </IntlProvider>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.homeR.isAuth,\n    chosenProjectID: state.prolistR.chosenProjectID\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(homeActions.logout()),\n    onSetLoggedIn: (userId, userName, token) => dispatch(homeActions.setLoggedIn(userId, userName, token))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport const updateObject = (oldObject, updatedValues) => {\n    return {\n        ...oldObject,\n        ...updatedValues\n    }\n}","import * as actionTypes from '../actions/actionsTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {\n    isAuth: false,\n    email: '',\n    pass: '',\n    userName: '',\n    registrationMessage: '',\n    loginMessage: '',\n    resRegistrationStatus: 0,\n    resLoginStatus: 0,\n    \n\n    token: '',\n    authLoading: false,\n    userId: '',\n    error: '',\n\n    autoLogoutAfter: 0 //po ilu milisekundach bedzie wylogowanie\n}\n\nconst logIn = (state, action) => {\n       // console.log(action)\n        return updateObject(state,{\n            isAuth: action.isAuth,\n            userName: action.userName,\n            token: action.token,\n            authLoading: action.authLoading,\n            userId:action.userId,\n            resLoginStatus: action.resLoginStatus,\n        });\n}\n\nconst logInFailed = (state, action) => {\n\n    return updateObject(state,{\n        isAuth: action.isAuth,\n        token: action.token,\n        authLoading: action.authLoading,\n        userId:action.userId,\n        loginMessage: action.message,\n        resLoginStatus: action.resLoginStatus,\n    });\n}\n\nconst register = (state, action) => {\n    const message = action.message;\n    const userId = action.userId;\n    const resRegistrationStatus = action.resRegistrationStatus;\n\n    return updateObject(state,{\n        isAuth: false,\n        registrationMessage: message,\n        resRegistrationStatus: resRegistrationStatus,\n    });\n}\n\nconst registerFailed = (state, action) => {\n    const message = action.message;\n \n    return updateObject(state,{\n        isAuth: false,\n        registrationMessage: message,\n        resRegistrationStatus: action.resRegistrationStatus,\n    });\n}\n\nconst autoLogout = (state,action) => {\n    const autoLogoutAfter = action.autoLogoutAfter;\n    return updateObject(state,{\n        autoLogoutAfter: autoLogoutAfter,\n    });\n}\n\nconst logOut = (state,action) => {\n\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiryDate');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userName');\n    \n    return updateObject(state,{\n        isAuth: false,\n        token:'',\n        userId:'', \n        email: '',\n        pass: '',\n        userName: '',\n        registrationMessage: '',\n        loginMessage: '',\n        resRegistrationStatus: 0,\n        resLoginStatus: 0,\n        token: '',\n        authLoading: false,\n        error: '',\n        autoLogoutAfter: 0 //po ilu milisekundach bedzie wylogowanie\n    });\n}\n\n\nconst homeReducer = (state = initialState, action) => {\n\n    switch(action.type){\n        case actionTypes.LOG_IN: return logIn(state, action);\n        case actionTypes.LOG_OUT: return logOut(state, action);\n        case actionTypes.LOG_IN_FAILED: return logInFailed(state, action);\n        case actionTypes.REGISTER: return register(state,action); \n        case actionTypes.REGISTER_FAILED: return registerFailed(state,action);\n        case actionTypes.SET_AUTO_LOGOUT: return autoLogout(state,action);         \n    }\n\n    return state;\n}\n\nexport default homeReducer;","import * as actionTypes from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\nimport axios from 'axios';\n\nconst initialState = {\n    projects: [],\n    error: false,          //gdy wystapi error z polaczeniem z api \n    projectsLoading: true, //gdy laduja sie dane z serwera\n\n    chosenProjectID: '',    //dane wybranego projektu\n    chosenProjectName: '',\n    chosenProjectOwner: '',\n\n    loaded: false, //gdy projekt z serwera juz sie zaladowal\n    errorMessage: '',   //gdy nie przejdzie validacji po stronie serwera\n    modalDisplay: false, //czy pokazywac modal\n\n    localAction: '', //po kliknieciu w przycisk wywolujacy okno modalne wiem po co zostalo ono klikniete\n    projectId: '',  //wiem ktorego projektu dotyczy kliknieta akcja\n    projectName: '',  //oraz jaka jest nazwa obecnego projektu\n}\n\nconst choseProject = (state, action) => {\n  \n    return updateObject(state, { \n        chosenProjectID: action.projectId, \n        chosenProjectName: action.projectName,\n        chosenProjectOwner: action.projectOwner,\n     });\n}\n\nconst addProject = (state, action) => {\n    let newProjectsList = [action.responsedNewProject, ...state.projects];\n    //console.log(newProjectsList)\n   // console.log(action.responsedNewProject)\n\n    return updateObject(state, {projects: newProjectsList, loaded: true });\n}\n\nconst addProjectInit = (state, action) => {\n    return updateObject(state, {loaded: false});\n}\n\nconst addProjectDone = (state, action) => {\n    return updateObject(state, {\n        loaded: true, \n        errorMessage:'',\n        modalDisplay: false});\n}\n\nconst addProjectFailed = (state,action) => {\n    //console.log(action.errorMessage.response.data.message)\n    return updateObject(state, {\n        errorMessage: action.errorMessage.response.data.message,\n    })\n}\n\nconst duplicateProject = (state, action) => {\n\n    // TO DO\n    return updateObject(state, {});\n}\n\nconst shareProject = (state, action) => {\n\n    // TO DO\n    return updateObject(state, {});\n}\n\nconst removeProject = (state, action) => {\n\n    const projectId = action.projectId;\n    const message = action.message;\n\n    //robie immutable removing project\n    const projects = [...state.projects];\n\n    //znajduje index projektu do usuniecia\n    let index = 0;\n    let updatedProjects = projects.map((project,i) => {\n        if(project._id !== projectId){\n            return project;\n        } \n        //jezeli znajdziemy to robimy update\n        index = i;\n    })\n\n    updatedProjects = [...updatedProjects.slice(0, index), ...updatedProjects.slice(index + 1)]\n\n    return updateObject(state, {\n        projects: updatedProjects\n    });\n}\n\n\nconst editNameFailed = (state, action) => {\n   const error = action.error;\n\n   \n   return updateObject(state, {errorMessage: error, error: true});\n}\n\nconst editName = (state, action) => {\n\n    const projectId = action.projectId;\n    const newProjectName = action.newProjectName;\n    const message = action.message;\n\n    console.log(projectId)\n    console.log(newProjectName)\n    console.log(message)\n\n    //robie immutable updating projektow\n    const projects = [...state.projects];\n    const updatedProjects = projects.map(project => {\n        if(project._id !== projectId){\n            return project;\n        }\n\n        //jezeli znajdziemy to robimy update\n        return {\n            ...project,\n            name: newProjectName\n        }\n    })\n\n    //console.log(state)\n    //console.log(\"Musze updatowac widok teraz!!!! w reducerze\")\n    \n    return updateObject(state, {\n        projects: updatedProjects,\n        errorMessage: '', \n        error: false});\n}\n\n//pobieranie listy projektow\nconst getProjectsListFailed = (state, action) => {\n     console.log(action)\n    return updateObject(state, { \n        error: true, \n        loaded: false,\n        errorMessage: action.errorMessage });\n}\n\nconst getProjectsList = (state, action) => {\n    //console.log(action)\n\n    return updateObject(state,\n        {\n            projects: action.projects,\n            error: false,\n            projectsLoading: false,\n        });\n\n}\n\nconst openModal = (state, action) => {\n    return updateObject(state,\n        {\n            modalDisplay: true,\n            localAction: action.localActionType,\n            projectId: action.projectId,\n            projectName: action.projectName\n        });\n}\n\nconst closeModal = (state, action) => {\n    return updateObject(state,\n        {\n            modalDisplay: false\n        });\n}\n\n\n\nconst projectsListReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.GET_PROJECTS_LIST: return getProjectsList(state, action);\n        case actionTypes.GET_PROJECTS_LIST_FAILED: return getProjectsListFailed(state, action);\n        case actionTypes.CHOSE_PROJECT: return choseProject(state, action);\n        case actionTypes.ADD_PROJECT_INIT: return addProjectInit(state, action);\n        case actionTypes.ADD_PROJECT_DONE: return addProjectDone(state, action);\n        case actionTypes.ADD_PROJECT: return addProject(state, action);\n        case actionTypes.ADD_PROJECT_FAILED: return addProjectFailed(state, action);\n        case actionTypes.DUPLICATE_PROJECT: return duplicateProject(state, action);\n        case actionTypes.SHARE_PROJECT: return shareProject(state, action);\n        case actionTypes.REMOVE_PROJECT: return removeProject(state, action);\n        case actionTypes.EDIT_NAME: return editName(state, action);\n        case actionTypes.EDIT_NAME_FAILED: return editNameFailed(state, action);\n        case actionTypes.OPEN_MODAL: return openModal(state, action);\n        case actionTypes.CLOSE_MODAL: return closeModal(state, action);\n        \n    }\n\n    return state;\n}\n\nexport default projectsListReducer;\n\n","import * as actionTypes from '../../actions/actionsTypes';\nimport {updateObject} from '../../utility';\n//import { removeRecognitionItem } from '../../actions';\n\n\nconst initialState = {\n    filesToUpload: [], \n    refusedFileList: [],  //refused files\n    //w formacie np. \n    // [{\n        // file: File {name: \"__mowa16000.wav\", lastModified: 1560968256333, lastModifiedDate: Wed Jun 19 2019 20:17:36 GMT+0200 (Central European Summer Time), webkitRelativePath: \"\", size: 1235820, …}\n        // id: \"01f0a209-a29f-407a-9b8a-12cdebd1e1fd\"\n        // loadedperc: 0\n        // status: \"toload\"\n    // }]\n    modal: false, //controls if modal window is opened\n    recoFileForPreview: '', //indicates which file is chosen for preview\n\n}\n\nconst setRefusedFiles = (state, action) => {\n    return updateObject(state, {\n        refusedFileList: action.refusedFileList, \n    });\n}\n\nconst clearRecoStore = (state,action) => {\n    return updateObject(state, {\n        filesToUpload: [], \n        modal: false, \n        recoFileForPreview: '', \n    });  \n}\n\nconst openModal = (state,action) => {\n    return updateObject(state, {\n        modal: true,\n    }) ;  \n}\n\nconst closeModal = (state,action) => {\n    return updateObject(state, {\n        modal: false,\n    }) ;  \n}\n\n\n\nconst dropFiles = (state, action) => {\n    let fileList = [...state.filesToUpload, ...action.files];\n    //console.log(\"DONEEEEE\");\n    //console.log(fileList);\n    return updateObject(state, {filesToUpload: fileList}) ;      \n}\n\nconst initFileRecognition = (state,action) => {\n\n    // to do\n    return updateObject(state, {}) ;  \n}\n\n//rozpoczynam wysylke na serwer i przetwarzanie rozpoznawania\nconst initBatchRecognition = (state,action) => {\n\n    \n    console.log(\"INIT BATCH RECOGNITION\")\n    //jezali jest jakikolwiek plik do wyslania\n    if(state.filesToUpload.length > 0) {\n        return updateObject(state, {});\n    } else {\n        return updateObject(state, {}); \n    }\n}\n\nconst updateFileState = (state,action) => {\n\n            const fileID = action.fileID;\n            const status = action.status;\n            const percLoaded = action.percLoaded;\n\n            let currentfileList = [...state.filesToUpload];\n\n            for (var i = 0; i < currentfileList.length; i++) {\n                if (currentfileList[i].id === fileID) {\n                    let updatedEntry = Object.assign({},currentfileList.find(obj => obj.id == fileID));\n                    updatedEntry.status = status;\n                    currentfileList[i] = updatedEntry;\n                    break;\n                }\n            }\n\n    return updateObject(state, { filesToUpload: currentfileList}) ;  \n}\n\nconst removeRecognitionItem = (state, action)=>{\n    const itemId = action.fileId;\n\n    const newFilesToUpload = state.filesToUpload.filter((item, index) => {\n        return item.id !== itemId\n    })\n    \n    return updateObject(state, { filesToUpload: newFilesToUpload}) ; \n\n}\n\nconst openAudioRecPreview = (state, action) => {\n    const entryId = action.fileID;\n\n    //znajduje pozycje w filesToUpload aby wyciagnac z niej plik audio\n\n    let foundEntry = state.filesToUpload.find(obj => obj.id == entryId);\n    console.log(foundEntry.file)\n\n    return updateObject(state, { recoFileForPreview: foundEntry.file}) ; \n\n}\n\nconst recognitionReducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.DROP_FILES: return dropFiles(state, action);\n        case actionTypes.INIT_BATCH_RECOGNITION: return initBatchRecognition(state,action);\n        case actionTypes.INIT_FILE_RECOGNITION: return initFileRecognition(state,action);\n        case actionTypes.UPDATE_FILE_STATE: return updateFileState(state, action);\n        case actionTypes.REMOVE_RECOGNITION_ITEM: return removeRecognitionItem(state,action);\n        case actionTypes.OPEN_AUDIO_RECOGNITION_PREVIEW: return openAudioRecPreview(state, action);\n        case actionTypes.CLEAR_RECO_STORE: return clearRecoStore(state, action);\n        case actionTypes.REFUSE_RECO_FILES: return setRefusedFiles(state, action);\n    }\n\n    return state;\n}\n\n\n\nexport default recognitionReducer;","import * as actionTypes from '../../actions/actionsTypes';\nimport uuid from 'uuid';\nimport { updateObject } from '../../utility';\n\n\nconst initialState = {\n    segmentEntry: [],\n    audioList: [],\n    txtList: [],\n\n    refusedAudioFileList: [],  //refused audio files\n    refusedTxtFileList: [],  //refused txt files\n    ifRefusedAudio: true, //which component refused files - audio or if false will be txt\n}\n\nconst setRefusedTxtFiles = (state, action) => {\n    return updateObject(state, {\n        refusedTxtFileList: action.refusedFileList, \n        ifRefusedAudio: false,\n    });\n}\n\nconst setRefusedAudioFiles = (state, action) => {\n    return updateObject(state, {\n        refusedAudioFileList: action.refusedFileList, \n        ifRefusedAudio: true,\n    });\n}\n\nconst clearSegmentStore = (state,action) => {\n    return updateObject(state, {\n        segmentEntry: [],\n        audioList: [],\n        txtList: [],\n    });\n}\n\nconst dropAudioFiles = (state, action) => {\n\n    let SegmentEntryList = [];\n\n    const AudioFileList = [...state.audioList, ...action.audioFiles];\n\n    // forming segment Entry as Array of {audioFile, txtfile}\n\n    //OK\n    if (AudioFileList.length >= state.txtList.length) {\n     \n        //make txtArray equally length\n        const ilebrakuje = AudioFileList.length - state.txtList.length;\n        let txtArray = [...state.txtList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = AudioFileList.map((audioentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let txtItem = txtArray[i];\n            //console.log(txtItem)\n            if(txtItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n            //console.log(status)\n            return ({\n                audioEntry: Object.assign({}, audioentry),\n                txtEntry: Object.assign({}, txtItem),\n                status: status, //status if audio and text together\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    } else {\n        \n        //make txtArray equally length\n        const ilebrakuje = state.txtList.length - AudioFileList.length;\n        let audioArray = [...AudioFileList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = state.txtList.map((txtentry, i) => {\n\n            let status = 'novalid';\n            let audioItem = audioArray[i];\n            //console.log(txtItem)\n            if(audioItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioArray[i]),\n                txtEntry: Object.assign({}, txtentry),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    }\n\n    //console.log(SegmentEntryList)\n\n\n    return updateObject(state, {\n        audioList: AudioFileList,\n        segmentEntry: SegmentEntryList\n    });\n}\n\n\nconst dropTxtFiles = (state, action) => {\n\n    let SegmentEntryList = [];\n\n    const TxtFileList = [...state.txtList, ...action.txtFiles];\n\n    // forming segment Entry as Array of {audioFile, txtfile}\n\n    if (TxtFileList.length >= state.audioList.length) {\n\n        //make txtArray equally length\n        const ilebrakuje = TxtFileList.length - state.audioList.length;\n        let audioArray = [...state.audioList, ...new Array(ilebrakuje)];\n        \n\n        SegmentEntryList = TxtFileList.map((txtentry, i) => {\n\n            let status = 'novalid';\n            let audioItem = audioArray[i];\n            //console.log(txtItem)\n            if(audioItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioArray[i]),\n                txtEntry: Object.assign({}, txtentry),\n                status:status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    } else {\n        //make txtArray equally length\n        const ilebrakuje = state.audioList.length - TxtFileList.length;\n        let txtArray = [...TxtFileList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = state.audioList.map((audioentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let txtItem = txtArray[i];\n            //console.log(txtItem)\n            if(txtItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioentry),\n                txtEntry: Object.assign({}, txtArray[i]),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    }\n\n    //console.log(SegmentEntryList)\n\n\n\n    return updateObject(state, {\n        txtList: TxtFileList,\n        segmentEntry: SegmentEntryList\n    });\n}\n\nconst changeAudioListOrder = (state, action) => {\n\n    let SegmentEntryList = [];\n\n    //receiving the ids as array in custome order\n    const idsAudioOrder = action.audioIdsOrder;\n\n    //not rearrange the audioList according to the idsOrder...\n    const newAudioList = idsAudioOrder.map(id => {\n        return (\n            Object.assign({},\n                state.audioList.find(elem => elem.id === id)\n            )\n        )\n    });\n\n\n    if (newAudioList.length >= state.txtList.length) {\n\n        //make txtArray equally length\n        const ilebrakuje = newAudioList.length - state.txtList.length;\n        let txtArray = [...state.txtList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = newAudioList.map((audioentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let txtItem = txtArray[i];\n            //console.log(txtItem)\n            if(txtItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioentry),\n                txtEntry: Object.assign({}, txtArray[i]),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    } else {\n        //make txtArray equally length\n        const ilebrakuje = state.txtList.length - newAudioList.length;\n        let audioArray = [...newAudioList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = state.txtList.map((txtentry, i) => {\n\n             //status to tell if entry has both audio and txt\n             let status = 'novalid';\n             let audioItem = audioArray[i];\n            \n             if(audioItem===undefined){\n                 status = 'novalid';\n             } else {\n                 status = 'valid';\n             }\n\n            return ({\n                audioEntry: Object.assign({}, audioArray[i]),\n                txtEntry: Object.assign({}, txtentry),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    }\n\n    // console.log(SegmentEntryList)\n\n\n    return updateObject(state, {\n        audioList: newAudioList,\n        segmentEntry: SegmentEntryList\n    });\n\n}\n\n\n\nconst changeTxtListOrder = (state, action) => {\n\n    let SegmentEntryList = [];\n    \n    //receiving the ids as array in custome order\n    const idsTxtOrder = action.txtIdsOrder;\n\n    //not rearrange the audioList according to the idsOrder...\n    const newTxtList = idsTxtOrder.map(id => {\n        return (\n            Object.assign({},\n                state.txtList.find(elem => elem.id === id)\n            )\n        )\n    });\n\n\n    if (newTxtList.length >= state.audioList.length) {\n\n        //make txtArray equally length\n        const ilebrakuje = newTxtList.length - state.audioList.length;\n        let audioArray = [...state.audioList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = newTxtList.map((txtentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let audioItem = audioArray[i];\n           \n            if(audioItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioArray[i]),\n                txtEntry: Object.assign({}, txtentry),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n\n            }\n            );\n        });\n    } else {\n        //make txtArray equally length\n        const ilebrakuje = state.audioList.length - newTxtList.length;\n        let txtArray = [...newTxtList, ...new Array(ilebrakuje)];\n\n        console.log(txtArray)\n\n        SegmentEntryList = state.audioList.map((audioentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let txtItem = txtArray[i];\n           \n            if(txtItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n\n            return ({\n                audioEntry: Object.assign({}, audioentry),\n                txtEntry: Object.assign({}, txtArray[i]),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    }\n\n    //console.log(SegmentEntryList)\n    return updateObject(state, {\n        txtList: newTxtList,\n        segmentEntry: SegmentEntryList\n    });\n}\n\n\n\n// const initBatchSegmentation = (state,action) => {\n\n//     // to do\n//     return updateObject(state, {}) ;  \n// }\n\nconst initFileSegmentation = (state,action) => {\n    const entryId = action.entryId;\n \n    let newSegmentEntry = state.segmentEntry.map((entry, i) => {\n        //status to tell if entry has both audio and txt\n        let newEntry = Object.assign({}, entry);\n       if(newEntry.id === entryId){\n            newEntry.processingStatus = 'inProgress';\n       }\n\n       return newEntry;\n    });\n\n    return updateObject(state, {segmentEntry: newSegmentEntry}) ;  \n}\n\nconst removeSegmentEntry = (state,action) => {\n    const entryId = action.entryId;\n\n    let entryAudioId = '';\n    let entryTxtId = '';\n    \n    const newsegmentEntry = state.segmentEntry.filter((item, index) => {\n        //zapisuje z jakich elementow sklada sie segmentEntry\n        let czyzostawic = true;\n        if(item.id !== entryId){\n            czyzostawic = true;\n        } else {\n            //wtedy usuwam ten element\n            czyzostawic = false;\n            entryAudioId = item.audioEntry.id;\n            entryTxtId = item.txtEntry.id;\n        }\n        return czyzostawic\n    })\n\n    //teraz usuwam z listy audio oraz txt elementy o tym id\n    const newAudioList = state.audioList.filter((audioItem, index) => {\n        return audioItem.id !== entryAudioId;\n    });\n\n    const newTxtList = state.txtList.filter((txtItem, index) => {\n        return txtItem.id !== entryTxtId;\n    });\n\n    console.log(entryId)\n    console.log(entryAudioId)\n    console.log(entryTxtId)\n\n    return updateObject(state, {\n        segmentEntry: newsegmentEntry,\n        audioList: newAudioList,\n        txtList: newTxtList,\n    }) ; \n}\n\nconst fileSegmentationSuccess = (state,action) => {\n    const entryId = action.entryId;\n    //znajduje to entry i ustawiam mu odpowiedni status processingStatus\n    console.log(entryId)\n    let newSegmentEntry = state.segmentEntry.map((entry, i) => {\n        //status to tell if entry has both audio and txt\n        let newEntry = Object.assign({}, entry);\n       if(newEntry.id === entryId){\n            newEntry.processingStatus = 'done';\n       }\n\n       return newEntry;\n    });\n\n    console.log(newSegmentEntry)\n\n    return updateObject(state, {segmentEntry: newSegmentEntry}) ;  \n}\n\nconst fileSegmentationFailed = (state,action) => {\n    const entryId = action.entryId;\n    //znajduje to entry i ustawiam mu odpowiedni status processingStatus\n\n    let newSegmentEntry = state.segmentEntry.map((entry, i) => {\n        //status to tell if entry has both audio and txt\n        let newEntry = Object.assign({}, entry);\n       if(newEntry.id === entryId){\n            newEntry.processingStatus = 'error';\n       }\n\n       return newEntry;\n    });\n\n    return updateObject(state, {segmentEntry: newSegmentEntry}) ;  \n}\n\nconst segmentationReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case actionTypes.DROP_AUDIO_FILES: return dropAudioFiles(state, action);\n        case actionTypes.DROP_TXT_FILES: return dropTxtFiles(state, action);\n        case actionTypes.CHANGE_AUDIO_LIST_ORDER: return changeAudioListOrder(state, action);\n        case actionTypes.CHANGE_TXT_LIST_ORDER: return changeTxtListOrder(state, action);\n        //case actionTypes.INIT_BATCH_SEGMENTATION: return initBatchSegmentation(state, action);\n        case actionTypes.INIT_FILE_SEGMENTATION: return initFileSegmentation(state,action);\n        case actionTypes.REMOVE_SEGMENT_ENTRY: return removeSegmentEntry(state,action);\n        case actionTypes.CLEAR_SEGMENT_STORE: return clearSegmentStore(state, action);\n        case actionTypes.FILE_SEGMENTATION_SUCCESS: return fileSegmentationSuccess(state,action);\n        case actionTypes.FILE_SEGMENTATION_FAILED: return fileSegmentationFailed(state,action);\n        case actionTypes.REFUSE_SEGMENT_AUDIO_FILES: return setRefusedAudioFiles(state, action);\n        case actionTypes.REFUSE_SEGMENT_TXT_FILES: return setRefusedTxtFiles(state, action);\n    }\n\n    return state;\n}\n\nexport default segmentationReducer;\n\n","import * as actionTypes from '../../actions/actionsTypes';\nimport {updateObject} from '../../utility';\nimport { changeAudioDisplayed } from '../../actions';\n\n\nconst initialState = {\n\n    txtContent: '',\n    txtDisplayed: false,\n    txtfileName: '',\n    txtFileUrl: '',\n\n    audiofileName: '',\n    audioContent: null,\n    audioDisplayed: false,\n    audioFileUrl: '',\n    waveSurferInitialized: false, //indicates when the waveSurfer is initialized\n\n    playing: false, //if playing....\n\n}\n\nconst clearPreviewStore = (state,action) => {\n    return updateObject(state, {\n        txtContent: '',\n        txtDisplayed: false,\n        txtfileName: '',\n        txtFileUrl: '',\n    \n        audiofileName: '',\n        audioDisplayed: false,\n        audioFileUrl: '',\n        waveSurferInitialized: false, \n    \n        playing: false, \n    }) ; \n}\n\n//zwraca rozszerzenie pliku\nconst getExt = (path) => {\n    return (path.match(/(?:.+..+[^\\/]+$)/ig) != null) ? path.split('.').slice(-1)[0]: 'null';\n}\n\nconst updateAudioPreview = (state, action) => {\n    return updateObject(state, {\n        //audiofileName: action.fileKey,\n        //txtfileName: action.fileName,\n        audioDisplayed: true,\n    }) ;      \n}\n\n\nconst updateTxtPreview = (state, action) => {\n    return updateObject(state, {\n        txtContent: action.newContent,\n        //txtfileName: action.fileName,\n        txtDisplayed: true,\n    }) ;      \n}\n\n\n\nconst openTxtFilePreview = (state,action) => {\n\n    const fileContent = action.fileContent;\n    const fileUrl = action.fileUrl;\n    const fileKey = action.fileKey;\n\n    return updateObject(state, {\n        txtfileName: fileKey,\n        txtFileUrl: fileUrl,\n        txtDisplayed: false,\n        txtContent: fileContent,\n    })\n\n}\n\n\nconst openAudioFilePreview = (state,action) => {\n\n    const fileUrl = action.fileUrl;\n    const fileKey = action.fileKey;\n    const wsinit = action.waveSurferInitialized;\n\n    console.log(wsinit)\n\n    return updateObject(state, {\n        audiofileName: fileKey,\n        audioDisplayed: false,\n        audioFileUrl: fileUrl,\n        waveSurferInitialized: wsinit, //indicates when the waveSurfer is initialized\n        playing: false, //if playing....\n    })\n\n}\n\nconst changeAudioDisplay = (state, action) => {\n    return updateObject(state, {\n        audioDisplayed: action.ifYes,\n    })\n}\n\nconst waveSurferInitialized = (state, action) => {\n    return updateObject(state, {\n        waveSurferInitialized: action.ifYes,\n    })\n}\n\nconst togglePlayingPreview = (state, action) => {\n    if(state.playing){\n        return updateObject(state, {\n            playing: false\n        })\n    } else {\n        return updateObject(state, {\n            playing: true\n        })\n    }\n}\n\nconst previewReducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.UPDATE_TXT_PREVIEW: return updateTxtPreview(state, action);\n        case actionTypes.UPDATE_AUDIO_PREVIEW: return updateAudioPreview(state, action);\n        case actionTypes.OPEN_TXT_FILE_PREVIEW: return openTxtFilePreview(state,action);\n        case actionTypes.OPEN_AUDIO_FILE_PREVIEW: return openAudioFilePreview(state,action);\n        case actionTypes.WAVESURFER_INITIALIZED: return waveSurferInitialized(state,action);\n        case actionTypes.TOGGLE_PLAYING_PREVIEW: return togglePlayingPreview(state,action);\n        case actionTypes.CLEAR_PREVIEW_STORE: return clearPreviewStore(state, action);\n        case actionTypes.CHANGE_AUDIO_DISPLAYED: return changeAudioDisplay(state,action);\n    }\n\n    return state;\n}\n\n\n\nexport default previewReducer;","import * as actionTypes from '../../store/actions/actionsTypes';\nimport Moment from 'moment';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    errorMessage: '',\n    error: false,\n    files: [],\n    // files: [\n    //     {\n    //       key: 'cat in a hat.mp3',\n    //       modified: +Moment().subtract(1, 'hours'),\n    //       size: 1.5 * 1024 * 1024,\n    //       url: ????\n    //     },\n    //     {\n    //       key: 'photos/animals/kitten_ball.png',\n    //       modified: +Moment().subtract(3, 'days'),\n    //       size: 545 * 1024,\n    //     },\n    //   ],\n}\n\n//##########################################\n//############ tworzenie nowego folderu\n//#########################################\n\nconst repoCreateFolder = (state, action) => {\n\n    const key = action.key;\n\n    const newfiles = state.files.concat([{key: key, }]);\n\n    return updateObject(state,\n        {files: newfiles});\n\n    // handleCreateFolder = (key) => {\n        //     this.setState(state => {\n        //       state.files = state.files.concat([{\n        //         key: key,\n        //       }])\n        //       return state\n        //     })\n        //   }\n}\n\nconst repoCreateFiles = (state, action) => {\n\n    const files = action.files;\n    const prefix = action.prefix;\n   \n    return updateObject(state,\n        {});\n\n         // handleCreateFiles = (files, prefix) => {\n\t// \tthis.setState(state => {\n\t// \t  const newFiles = files.map((file) => {\n\t// \t\tlet newKey = prefix\n\t// \t\tif (prefix !== '' && prefix.substring(prefix.length - 1, prefix.length) !== '/') {\n\t// \t\t  newKey += '/'\n\t// \t\t}\n\t// \t\tnewKey += file.name\n\t// \t\treturn {\n\t// \t\t  key: newKey,\n\t// \t\t  size: file.size,\n\t// \t\t  modified: +Moment(),\n\t// \t\t}\n\t// \t  })\n\t\n\t// \t  const uniqueNewFiles = []\n\t// \t  newFiles.map((newFile) => {\n\t// \t\tlet exists = false\n\t// \t\tstate.files.map((existingFile) => {\n\t// \t\t  if (existingFile.key === newFile.key) {\n\t// \t\t\texists = true\n\t// \t\t  }\n\t// \t\t})\n\t// \t\tif (!exists) {\n\t// \t\t  uniqueNewFiles.push(newFile)\n\t// \t\t}\n\t// \t  })\n\t// \t  state.files = state.files.concat(uniqueNewFiles)\n\t// \t  return state\n\t// \t})\n\t//   }\n}\n\n\n//##########################################\n//############ zmiana nazwy folderu w repo\n//#########################################\n\nconst repoRenameFolder = (state, action) => {\n\n    const oldKey = action.oldKey;\n    const newKey = action.newKey;\n\n    console.log('ZMIOANA NAZWY FOLDERU')\n\n    const newFiles = [];\n    state.files.map((file) => {\n\n        if(oldKey !== newKey){\n            newFiles.push({\n                ...file,\n                key: file.key.replace(oldKey, newKey),\n                modified: +Moment(),\n            })\n        }\n    })\n    \n    return updateObject(state,\n        {files: newFiles});\n    \n\n    // handleRenameFolder = (oldKey, newKey) => {\n\t// \tthis.setState(state => {\n\t// \t  const newFiles = []\n\t// \t  state.files.map((file) => {\n\t// \t\tif (file.key.substr(0, oldKey.length) === oldKey) {\n\t// \t\t  newFiles.push({\n\t// \t\t\t...file,\n\t// \t\t\tkey: file.key.replace(oldKey, newKey),\n\t// \t\t\tmodified: +Moment(),\n\t// \t\t  })\n\t// \t\t} else {\n\t// \t\t  newFiles.push(file)\n\t// \t\t}\n\t// \t  })\n\t// \t  state.files = newFiles\n\t// \t  return state\n\t// \t})\n\t//   }\n}\n\n//##########################################\n//############ zmiana nazwy pliku w repo\n//#########################################\n\nconst repoRenameFile = (state, action) => {\n\n    const oldKey = action.oldKey;\n    const newKey = action.newKey;\n\n    const newFiles = [];\n    \n    state.files.map((file) => {\n\t\tif (file.key === oldKey) {\n\t\t\tnewFiles.push({\n                ...file,\n                key: newKey,\n                modified: +Moment(),\n\t\t\t})\n\t\t} else {\n\t\t\t  newFiles.push(file)\n\t\t\t}\n\t\t})\n\t\t\n\n    return updateObject(state,\n        {files: newFiles});\n\n}\n\n//##########################################\n//############ usuwanie folderow z repo\n//#########################################\n\nconst repoDeleteFolder = (state, action) => {\n\n    const folderKey = action.folderKey;\n\n    const newFiles = [];\n    state.files.map((file) => {\n        if (file.key.substr(0, folderKey.length) !== folderKey) {\n            newFiles.push(file)\n        }\n    })\n    \n    return updateObject(state,\n        {files: newFiles});\n}\n\n\n//##########################################\n//############ usuwanie plikow z repo ######\n//##########################################\n\nconst repoDeleteFile = (state, action) => {\n\n    const fileKey = action.fileKey;\n\n    const newFiles = [];\n    state.files.map((file) => {\n        if (file.key !== fileKey) {\n            newFiles.push(file)\n        } else {\n            //jezeli jest usuniety z folderu to musze posotawic folder\n            let n = fileKey.lastIndexOf(\"/\");\n            //to oznacza ze plik jest w jakim podfoldrze\n            if(n > 1){\n               //wtedy zwracam tylko sam folder - bez pliku w nim\n               console.log(file)\n               let onlyFolders = file.key.substring(0,n+1);\n               console.log(onlyFolders)\n               file.key = onlyFolders;\n               newFiles.push(file);\n            }\n        }\n    })\n  \n    return updateObject(state,\n        {files: newFiles});\n}\n\nconst repoGetUserProjectFiles = (state, action) => {\n    const files = action.files;\n    return updateObject(state,\n        {files: files});\n}\n\nconst repoGetUserProjectFilesFailed = (state, action) => {\n    const error = action.error.toString();\n    return updateObject(state,\n        {errorMessage: error,\n        error: true});\n}\n\nconst repoReducer = (state = initialState, action) => {\n    switch(action.type){\n        //case actionTypes.REPO_UPLOAD_FILE: return repoUploadFile(state,action);\n        case actionTypes.REPO_CREATE_FOLDER: return repoCreateFolder(state,action);\n        case actionTypes.REPO_CREATE_FILES: return repoCreateFiles(state,action);\n        case actionTypes.REPO_RENAME_FOLDER: return repoRenameFolder(state,action);\n        case actionTypes.REPO_RENAME_FILE: return repoRenameFile(state,action);\n        case actionTypes.REPO_DELETE_FOLDER: return repoDeleteFolder(state,action);\n        case actionTypes.REPO_DELETE_FILE: return repoDeleteFile(state,action);\n        case actionTypes.REPO_GET_USER_PROJECT_FILES: return repoGetUserProjectFiles(state,action);\n        case actionTypes.REPO_GET_USER_PROJECT_FILES_FAILED: return repoGetUserProjectFilesFailed(state,action);\n\n    }\n\n    return state;\n}\n\nexport default repoReducer;","import * as actionTypes from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    currentProjectID: '',\n    currentProjectName: '',\n    currentProjectOwner: '',\n\n    modal: false,  // keeps if moda should be opened\n}\n\nconst initProject = (state, action) => {\n    return updateObject(state,\n        {\n            currentProjectID: action.projectId,\n            currentProjectName: action.projectTitle,\n            currentProjectOwner: action.projectOwner,\n        });\n}\n\nconst openModalProject = (state, action) => {\n    return updateObject(state,\n        {\n            modal: true\n        });\n}\n\nconst closeModalProject = (state, action) => {\n    return updateObject(state,\n        {\n            modal: false\n        });\n}\n\n\n\nconst projectReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case actionTypes.INIT_PROJECT: return initProject(state, action);\n        case actionTypes.OPEN_MODAL_PROJECT: return openModalProject(state, action);\n        case actionTypes.CLOSE_MODAL_PROJECT: return closeModalProject(state, action);\n\n\n    }\n\n    return state;\n}\n\nexport default projectReducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport homeReducer from './store/reducers/homeReducer';\nimport projectsListReducer from './store/reducers/projectsListReducer';\nimport recognitionReducer from './store/reducers/toolsReducers/recognitionReducer';\nimport segmentationReducer from './store/reducers/toolsReducers/segmentationReducer';\nimport previewReducer from './store/reducers/toolsReducers/previewReducer';\nimport repoReducer from './store/reducers/repoReducer';\nimport thunk from 'redux-thunk';\nimport axios from 'axios';\nimport projectReducer from './store/reducers/projectReducer';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (process.env.NODE_ENV !== 'development') {\n    console.log = () => {}\n  }\n  \n//the address for api\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n//axios.defaults.headers.common['Authorization'] = 'AUTH TOKEN';\n//axios.defaults.headers.post['Content-Type'] = 'application/json';\n\nconst rootReducer = combineReducers({\n    homeR: homeReducer,\n    projectR: projectReducer,\n    prolistR: projectsListReducer,\n    recR: recognitionReducer,\n    segR: segmentationReducer,\n    repoR: repoReducer,\n    previewR: previewReducer,\n});\n\n\n// dla asynchronicznych zadan\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}