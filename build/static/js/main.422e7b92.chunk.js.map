{"version":3,"sources":["hoc/Auxiliary.js","containers/HomePage/Jumbotron/Jumbotron.js","components/UI/Input/Input.js","store/actions/repo.js","store/actions/actionsTypes.js","store/actions/projectsList.js","store/actions/project.js","store/actions/home.js","containers/HomePage/LoginArea/LoginArea.js","containers/HomePage/DecoIntro/DecoIntro.js","containers/HomePage/HomeText/HomeText.js","components/AppFooter/AppFooter.js","components/TopBar/TopBar.js","containers/HomePage/HomePage.js","containers/ProjectPage/SettingBar/SettingBar.js","containers/ProjectPage/FooterTool/FooterTool.js","containers/ProjectPage/LeftSiteBar/LeftSiteBar.js","containers/ProjectPage/Dashboard/Dashboard.js","components/UI/ButtonLeftBar/ButtonLeftBar.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","containers/ProjectPage/ToolItem/ToolItem.js","containers/ProjectPage/AudioEditor/TextEditor/TextEditor.js","containers/ProjectPage/AudioEditor/SegmentsEditor/Segment/Segment.js","containers/ProjectPage/AudioEditor/SegmentsEditor/SegmentsEditor.js","containers/ProjectPage/AudioEditor/AudioEditor.js","store/actions/toolActions/audioEditor.js","containers/ProjectPage/RecognitionTool/RecognitionTool.js","store/actions/toolActions/recognition.js","containers/ProjectPage/SegmentTool/SegmentTool.js","store/actions/toolActions/segmentation.js","containers/ProjectPage/VADTool/VADTool.js","store/actions/toolActions/vad.js","containers/ProjectPage/DIATool/DIATool.js","store/actions/toolActions/dia.js","components/UI/DragAndDrop/DragAndDrop.js","components/UI/DropFilesArea/DropFilesArea.js","containers/ProjectPage/MultimediaPreview/MultimediaPreview.js","containers/ProjectPage/TranscriptionTool/TranscriptionTool.js","store/actions/toolActions/preview.js","utils/utils.js","utils/fileTypes.js","components/TextEdit/TextEdit.js","components/Preview/Preview.js","containers/ProjectPage/RepoBar/RepoBar.js","containers/ProjectPage/RepoPanel/ContainerFile/ContainerFile.js","components/UI/Dropzone/Dropzone.js","components/UI/Progress/Progress.js","components/UploadAudio/UploadAudio.js","containers/ProjectPage/RepoPanel/RepoSession/RepoSession.js","components/UI/SingleInputForm/SingleInputForm.js","containers/ProjectPage/RepoPanel/RepoPanel.js","components/ErrorPage/ErrorPage.js","containers/ProjectPage/TabContainer/Tab/Tab.js","containers/ProjectPage/ProjectPage.js","containers/ProjectsListPage/ProjectListItem/ProjectListItem.js","containers/ProjectsListPage/ProjectsList/ProjectList.js","components/UI/Spinner/Spinner.js","components/UI/ConfirmationForm/ConfirmationForm.js","containers/ProjectsListPage/ProjectsListPage.js","components/HelpPage/HelpPage.js","containers/NewPasswordPage/NewPasswordPage.js","App.js","serviceWorker.js","store/utility.js","store/reducers/homeReducer.js","store/reducers/projectsListReducer.js","store/reducers/toolsReducers/recognitionReducer.js","store/reducers/toolsReducers/segmentationReducer.js","store/reducers/toolsReducers/previewReducer.js","store/reducers/repoPanelReducer.js","store/reducers/projectReducer.js","store/reducers/toolsReducers/vadReducer.js","store/reducers/toolsReducers/diaReducer.js","index.js","images/logo-clarin-pl-short.png"],"names":["auxiliary","props","children","jumbotron","react_default","a","createElement","Auxiliary","className","join","input","inputElement","validationError","inputClasses","invalid","touched","push","inputtype","Object","assign","onChange","whenchanged","label","setContainerStatus","containerId","toolType","status","type","createNewSessionDone","sessionName","sessionId","createNewSessionFailed","error","errorMessage","getProjectFilesForUser","userId","projectId","token","dispatch","axios","get","headers","Authorization","then","response","sessions","containers","data","catch","getProjectFilesForUserActionFailed","handleRenameFolderActionFailed","toString","editName","newName","put","newProjectName","messageFromServer","message","editNameProjectAction","console","log","editNameProjectActionFailed","initProject","projectTitle","projectOwner","forgotPass","emailaddr","startLoading","post","email","resStatus","stopLoading","createNotification","resForgotPassStatus","forgotPassFailed","registerUser","userName","userEmail","userPass","name","password","resRegistrationStatus","registerUserAction","finalMessage","length","i","msg","registerUserActionFailed","loginUserAction","isAuth","authLoading","resLoginStatus","logout","setLoggedIn","LoginArea","state","loginform","loginemail","elementType","elementConfig","placeholder","value","validation","required","minLength","valid","loginpass","forgotPassForm","forgotPassEmail","registerform","registerName","registeremail","registerpass","loginFormIsValid","forgotPassFormIsValid","registerFormIsValid","firstTimeAfterLogin","showRemindPassView","forgotPassHandler","event","preventDefault","_this","onForgotPass","loginHandler","loginData","formLoginElement","onLogIn","registerHandler","registerData","formRegisterElement","onRegister","inputRegisterChangedHandler","updatedRegisterForm","objectSpread","target","updatedRegisterName","checkValidity","updatedRegisterEmail","updatedregisterPass","formIsValid","inputField","setState","inputForgotPassChangedHandler","updatedForgotForm","updatedforgotPassEmail","inputLoginChangedHandler","updatedLoginForm","updatedLoginEmail","updatedLoginPass","logOutHandler","onLogOut","history","showLoginAreaBack","e","rules","isValid","trim","prevProps","prevState","this","_this2","role","registrationMessage","loginMessage","registerArea","key","onSubmit","Input_Input","disabled","forgotPassArea","react_router_dom","to","onClick","href","loginArea","style","fontSize","userToken","loginAndForgot","isLoading","loader","textAlign","Component","connect","homeR","loggedEmail","forgotPassEmailSent","forgotPassMessage","authActions","pass","Error","localStorage","setItem","expiryDate","Date","getTime","toISOString","autoLogoutAfter","loginUserActionFailed","withRouter","decointro","btnclasses","hometext","id","appfooter","moment","format","topBar","_handleFocus","text","_handleFocusOut","onChangeProjectName","projectID","czyInit","version","navClassNames","wide","clickLogo","src","logoShort","alt","float","index_es","icon","faReply","main_bundle_default","projectName","labelClassName","inputClassName","inputWidth","isEditing","inputHeight","inputMaxLength","onFocus","onFocusOut","faTerminal","faQuestion","projectR","currentProjectName","currentProjectID","currentProjectOwner","projectListActions","homePage","TopBar_TopBar","language","changeLn","currLn","Jumbotron_Jumbotron","HomePage_LoginArea_LoginArea","DecoIntro_DecoIntro","HomeText_HomeText","AppFooter_AppFooter","settingBar","footerTool","leftSiteBar","czyTopPart","data-scrollbar","desc","Dashboard","LeftSiteBar_LeftSiteBar","SettingBar_SettingBar","location","pathname","replace","FooterTool_FooterTool","containersForREC","recR","containersForSEG","segR","repoFiles","repoR","files","buttonLeftBar","ifdisabled","whenClicked","customeStyle","napis","backdrop","show","clicked","modal","Backdrop_Backdrop","modalClosed","modalTitle","override","css","_templateObject","ToolItem","closeModalHandler","componentDidUpdate","componentDidMount","runPreview","openPreview","container","runProcess","runTool","downloadElement","action","linkToDownload","process","owner","project","session","_id","window","open","handleClick","theID","copyToClipboard","onRemoveItem","removeThisItem","runProcessAgain","str","el","document","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","iconType","faFileAlt","czyEdytowany","modalContent","faComment","DIAcontainerInPreview","faSurprise","VADcontainerInPreview","RECcontainerInPreview","faClock","SEGcontainerInPreview","nBytes","size","filesize","aMultiples","nMultiple","nApprox","toFixed","previewIconAlpha","statusIcon","progressBar","runProcessIcon","Tooltip","title","faExclamationCircle","color","react_spinners","loading","aria-valuenow","aria-valuemin","aria-valuemax","width","opacity","faCheck","faEye","Modal_Modal","es6","containerName","divider","ifVAD","ifDIA","ifREC","ifSEG","recoContainerForPreview","vadR","vadContainerForPreview","diaR","diaContainerForPreview","alignContainerForPreview","TextEditor","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","editorisready","onLoadTranscription","loadNextForTranscript","onLoadNextElement","transcriptHasChanged","loadTranscriptBtnDisabled","loadTranscriptBtnText","loadTranscriptBtnStyle","backgroundColor","saveTranscriptBtnDisabled","saveTranscriptBtnText","saveTranscriptBtnStyle","transcriptionSaved","ButtonLeftBar_ButtonLeftBar","react_textarea_autosize_esm_browser","maxRows","minRows","onTextChanged","inputRef","tag","textarea","autoFocus","onSaveChanges","transcriptionData","Segment","updateStartTimeSegment","element","startTime","parseFloat","endTime","onUpdateStartTime","segmentId","updateEndTimeSegment","onUpdateEndTime","updateSegmentLabel","labelText","onUpdateLabel","playSegment","onPlaySegment","removeSegment","onRemoveSegment","data-action","data-id","SegmentsEditor","updateLabel","newLabel","onUpdateSegmentLabel","updateStartTime","newValue","onUpdateSegmentStartTime","updateEndTime","onUpdateSegmentEndTime","componentWillMount","renderSegments","segments","sort","s1","s2","map","segment","SegmentsEditor_Segment_Segment","saveSegments","onSaveSegmentChanges","czyDisabled","czyZmieniono","marginBottom","AudioEditor","saveChanges","onSaveTranscription","containerForPreview","increasePlaybackSpeed","player","getElementById","speedFactor","playbackRate","decreasePlaybackSpeed","togglePlaying","isPlaying","peaks","pause","play","rewind3secBack","playBack","rewind5secBack","seconds","timeBack","getCurrentTime","seek","odliczanie","clearTimeout","odliczanieTemp","setTimeout","createPeaksInstance","options","Promise","resolve","reject","Peaks","init","err","peaksInstance","bindEventHandlers","querySelector","addEventListener","getAttribute","getSegment","points","removeById","czyZmienionoSegmenty","zoom","zoomIn","currentZoom","getZoom","zoomOut","editorFullWidth","ifFullScreen","zoomview","views","getView","fitToContainer","overview","on","startMarker","updateSegment","convertPeaksSegments","getSegments","editable","startPeaksLeaving","audioPathok","datPathok","_options","mediaElement","dataUri","arraybuffer","mediaUrl","zoomWaveformColor","overviewWaveformColor","overviewHighlightColor","segmentColor","randomizeSegmentColor","segmentStartMarkerColor","segmentEndMarkerColor","keyboard","nudgeIncrement","zoomLevels","showPlayheadTime","emitCueEvents","defineProperty","setSource","segmenty","currentSegments","errorHandler","getDataFromContainer","fileName","VADUserSegments","DIAUserSegments","RECUserSegments","undefined","audioPath","datPath","loadNewAudioToEditor","requestWaveformData","url","fetch","arrayBuffer","updateSource","waveformData","removeAll","source","add","toConsumableArray","setZoom","loadTranscription","blocks","newSegment","allsegments","ktoreIstniejaceWModified","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","currentseg","return","minTime","maxTime","nowyLabel","_i","_ktoreIstniejaceWModi","nachodzacy","segmentCounter","update","updateSegmentStartTime","updateSegmentEndTime","saveSegmentChanges","simplerSegments","onSaveVADSegments","onSaveDIASegments","addSegment","loadNextElement","textChanged","evt","onTranscriptionChanged","onLoadExistingTranscription","openPreviewInEMU","finalPathToEMU","encodeURI","audioPlayer","React","createRef","keyName","handle","previewInEMUBtn","transcriptWindow","AudioEditor_TextEditor_TextEditor","segmentEditor","AudioEditor_SegmentsEditor_SegmentsEditor","playPauseicon","faPause","faPlay","audioPreview","Fragment","data-tip","data-for","faExpand","dist_index_es","delayShow","faHistory","faLongArrowAltUp","display","faLongArrowAltDown","faSearchPlus","faSearchMinus","faGripLinesVertical","controls","ref","esm","onKeyDown","bind","filter","containerBinaryPreviewREC","containerBinaryPreviewVAD","containerBinaryPreviewDIA","containerBinaryPreviewSEG","audioFileREC","containerAudioFileREC","audioFileVAD","containerAudioFileVAD","audioFileDIA","containerAudioFileDIA","audioFileSEG","containerAudioFileSEG","dataForEMU","openContainerInEMUSuccess","openContainerInEMUFailed","audioEditorActions","updatedSegments","saveVADSegmentsSuccess","saveVADSegmentsFailed","saveDIASegmentsSuccess","saveDIASegmentsFailed","transcription","saveTranscriptionSuccess","saveTranscriptionFailed","transcriptData","loadTranscriptionSuccess","loadTranscriptionFailed","RecognitionTool","openModalHandler","onOpenModalHandler","startBatchRecognition","audioFilesArray","entry","file","audioFilesIds","onStartBatchRecognition","openContainerInPreview","openContainerInRecoPreview","makeEditorFullWidth","runRECinBatch","runSpeechRecognition","foundIdx","removeToolItem","onRemoveElementFromRECList","szer1col","szer2col","recoIcon","filelist","ProjectPage_ToolItem_ToolItem","statusREC","ProjectPage_AudioEditor_AudioEditor","modalDisplay","refusedFileList","recognitionActions","onDrop","onCloseModalHandler","FormData","append","content-type","onSetRefusionFiles","refusedFiles","messsage","runSpeechRecognitionFailed","SegmentTool","openContainerInAlignPreview","runSEGinBatch","runSpeechSegmentation","onRemoveSegmentationItem","alignIcon","statusSEG","audioList","txtList","refusedAudioFileList","refusedTxtFileList","ifRefusedAudio","runSpeechSegmentationFailed","segmentActions","VADTool","openContainerInVADPreview","runVADinBatch","VADItems","runSpeechVoiceActivityDetection","onRemoveElementFromVADList","vadIcon","statusVAD","containersForVAD","vadActions","VADSegments","runSpeechVoiceActivityDetectionFailed","DIATool","openContainerInDIAPreview","runDIAinBatch","containersForDIA","runSpeechDiarization","onRemoveElementFromDIAList","diaIcon","statusDIA","diaActions","DIAsegments","runSpeechDiarizationFailed","dragAndDropStyles","dropIndicationStyles","top","right","bottom","height","border","borderRadius","alignItems","justifyContent","DragAndDrop","drag","dropRef","handleDrag","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","handleDragOut","handleDrop","whenDropped","clearData","getData","draggedFile","fileURL","fileSize","fileId","div","current","removeEventListener","DropFilesArea","mainTitle","allowUploadLocalFiles","multiple","multipleFiles","whenFilesChose","videoJsOptions","aspectRatio","fluid","responsive","liveui","scrubbing","controlBar","fullscreenToggle","currentTimeDisplay","timeDivider","durationDisplay","remainingTimeDisplay","volumePanel","plugins","wavesurfer","msDisplayMax","debug","waveColor","progressColor","cursorColor","hideScrollbar","audioRate","partialRender","MultimediaPreview","fileToPreviewURL","fileToPreview","blokada","initializePreview","videojs","audioNode","version_info","VERSION","getPluginVersion","WaveSurfer","setFileToPreview","load","destroy","dispose","data-vjs-player","node","multimediaPlayer","TranscriptionTool","audioFileURL","txtFileURL","componentWillUnmount","getExt","path","match","split","slice","txtAreaChangedHandler","onUpdateTxtArea","currentTarget","handleDropAudio","audioFile","handleDropTxt","txtFile","nextProps","nextState","_React$createElement","ProjectPage_MultimediaPreview_MultimediaPreview","fontWeight","txtfileName","audiofileName","UI_DragAndDrop_DragAndDrop","UI_DropFilesArea_DropFilesArea","txtContent","previewR","txtDisplayed","txtFileUrl","audioDisplayed","audioFileUrl","waveSurferInitialized","playing","fileKey","newContent","onUpdateAudioArea","previewActions","onWeveSurferInitialized","ifyes","ifYes","onTooglePlaying","onAudioDisplayed","getFileKeyFromURL","indexOf","substring","extensionMapping","fileTypes_i","_Object$entries","entries","Audio","_ref3","_ref2","slicedToArray","extensions","fileTypes_iteratorNormalCompletion","fileTypes_didIteratorError","fileTypes_iteratorError","fileTypes_step","fileTypes_iterator","extension","TextEdit","txtLoaded","content","textURL","saveEditedFile","onSaveEditedFileHandler","potwierdzenieZapisania","przyciskSaveDisabled","editTxtFileOK","whenClose","filekey","newConent","repoActions","Preview","ext","podgladPliku","components_TextEdit_TextEdit","onClose","repoBar","actionType","folderToUpload","filesToUpload","onStartUpload","onUploadFiles","extFiles","fileList","FileList","fileExtention","hasOwnProperty","Element","inputControl","Array","from","forEach","newFile","loadedperc","uuid","v4","handleCreateFolder","onHandleCreateFolder","handleCreateFiles","prefix","onHandleCreateFiles","handleRenameFolder","oldKey","newKey","onHandleRenameFolder","handleRenameFile","onHandleRenameFile","handleDeleteFolder","folderKey","onHandleDeleteFolder","handleDeleteFile","onHandleDeleteFile","handleDownloadFile","onHandleDownloadFile","handleUploadFiles","onUploadFilesModalOpen","handleSelect","handleSelectFile","handleSelectFolder","folder","handlePreviewOpen","czyjestem","includes","toURL","onOpenTxtFileToPreview","onOpenAudioFileToPreview","handlePreviewClose","handleRightClickOnFile","getElementsByTagName","handleFolderOpen","handleFolderClose","startResizeRepo","Resize","stopResize","uploadFilesDone","onUploadFilesFinish","refreshRepo","projectPage","szerRepo","innerWidth","clientX","szerProject","offsetWidth","onGetProjectFilesForUser","mount","querySelectorAll","filesToUploadList","filesToRefuseList","czyPokazacUploatBtn","Alert","controlsBtns","es_Progress","max","uploadPercent","Math","round","uploadBtnDisabled","components_Preview_Preview","onMouseDown","ContainerFile","uploadProgress","x","onUploadProgress","ProgressEvent","percent","loaded","total","changeUploadProgress","handleCreateFolderActionFailed","handleCreateFilesAction","delete","handleDeleteFolderActionFailed","handleDeleteFileActionFailed","ifWaveSurferIsInitialized","fileUrl","fileContent","openTxtFileToPreviewAction","openAudioFileToPreviewAction","params","pathToDownload","nazwaPliku","saveAs","autoBom","selectContainer","foo","runVAD","onAddContainerToVAD","runDIA","onAddContainerToDIA","runRECO","onAddContainerToReco","runALIGN","onAddContainerToAlign","onRemoveContainer","onChangeContainerName","contName","VADerrorClass","DIAerrorClass","RECerrorClass","SEGerrorClass","ifSelected","Dropzone","hightlight","fileInputRef","openFileDialog","assertThisInitialized","onFilesAdded","onDragOver","onDragLeave","click","array","fileListToArray","list","item","cursor","faUpload","Progress","classNameForSuccess","progress","UploadAudio","uploading","successfullUploaded","uploadValid","uploadFinishAndUpdateRepo","removeToUpload","index","filetoremove","newFileList","uploadFiles","sendRequest","renderActions","validatedFiles","concat","forSession","uniqueHash","uniqueFilename","dataToSend","Content-Type","_boundary","copy","percentage","oryginalName","sid","promises","_this3","all","_this4","UI_Progress_Progress","_this5","UI_Dropzone_Dropzone","removeIcon","ifValidClass","faMinusCircle","renderProgress","currentlySelestSessions","RepoSession","ifOpened","clickFolderHandler","selectTheSession","selectTheContainer","onRemoveSession","containerList","uploadCard","components_UploadAudio_UploadAudio","RepoPanel_ContainerFile_ContainerFile","faChevronDown","faChevronRight","faFolderOpen","faFolder","margin","SingleInputForm","onSubmitHandler","onChangeHandler","buttonLabel","RepoPanel_templateObject","repoPanel","clickCreateSession","clickExportToMenu","clickRemoveItem","newSessionName","whatClicked","waitingForCorpus","whichContainerToRemove","whichSessionIdToRemove","removeObjectFromRepo","selectedSession","currentlySelectedSessions","selectedContainers","currentlySelectedContainers","alert","removeContainerFromRepo","repoData","byId","selectSessionHandler","onSelectSession","selectContainerHandler","onSelectContainer","exportToEmuReady","addSession","whichSessionNameToRemove","newSessionChangeHandler","onSubmitNewSessionHandler","createNewSession","addContainerToRecoList","addContainerToReco","addContainerToAlignList","addContainerToAlign","addContainerToDIAList","addContainerToDIA","addContainerToVADList","addContainerToVAD","removeContainer","finallyRemoveContainer","removeSession","finallyRemoveSession","removeSessionFromRepo","openConfirmExportToEmu","runEMUExport","onExportToEMU","downloadCorpus","corpusPath","onKorpusDownloaded","modalContentEMUExport","akcjaKorpus","modalContentRemoveContainer","modalContentRemoveSession","modalContentAddSession","UI_SingleInputForm_SingleInputForm","listaSesji","keys","sId","containersArray","RepoPanel_RepoSession_RepoSession","changeContainerName","faFolderPlus","removeContainerFromRepoFailed","sessionData","createdSessionName","createdSessionId","removeSessionFromRepoFailed","changeContainerNameFailed","errorPage","faCogs","whereToLink","search","activeClassName","ProjectPage","removeItem","getItem","onSetLoggedIn","projectOwnerId","onInitProjectHandler","onClearRecoStore","onClearSegmentStore","onClearPreviewStore","DndProvider","backend","Backend","Tab_Tab","react_router","component","render","ProjectPage_Dashboard_Dashboard","ErrorPage","RepoPanel_RepoPanel","prolistR","chosenProjectID","chosenProjectOwner","projectActions","projectListItem","wyborprojektu","projektID","modified","faTrash","deleteProject","projectsList","ifLoading","listHeader","siteBar","spinner","confirmationForm","messageQuestion","onCancel","onOk","localActions","ProjectsListPage","currentValue","onGetProjectsList","duplicateProjectHandler","projectIndex","editNameProjectHandler","shareProjectHandler","removeProjectHandler","addNewProjectHandler","onNewProject","newProjectNameChangeHandler","editProjectNameSubmitHandler","onNameEdit","onNewProjectDone","onDelete","wyborProjektuOK","projektId","projektName","projektOwner","onProjectChoice","newProjectForm","editProjectName","ConfirmationForm","localAction","toDisplay","projectList","ifError","ifProjectsLoading","Spinner_Spinner","projekt","ProjectListItem_ProjectListItem","projectCreated","ProjectsList_ProjectList","containers_ProjectPage_ProjectPage","newProjectCreated","projects","projectsLoading","localActionType","responsedNewProject","addNewProjectAction","addNewProjectActionFailed","deleteProjectAction","getProjectsListAction","getProjectsListFailed","helpPage","NewPasswordPage","confirmPassword","submitted","czyHaslaPasuja","handleChange","updatePassword","_this$props","newPassword","res","paddingBottom","addLocaleData","en","pl","messages","messages_pl","messages_en","App","navigator","currln","logoutHandler","onLogout","setAutoLogout","milliseconds","changeLnHandler","ln","remainingMilliseconds","lib_index_es","locale","defaultLocale","_ref","containers_NewPasswordPage_NewPasswordPage","containers_ProjectsListPage_ProjectsListPage","HelpPage_HelpPage","HomePage","homeActions","Boolean","hostname","updateObject","oldObject","updatedValues","convertArrayToObject","reduce","obj","getIdsArray","initialState","homeReducer","arguments","logIn","_updateObject","logOut","logInFailed","register","registerFailed","autoLogout","chosenProjectName","projectsListReducer","getProjectsList","choseProject","addProjectInit","addProjectDone","newProjectsList","addProject","addProjectFailed","shareProject","updatedProjects","removeProject","editNameFailed","openModal","closeModal","recoFileForPreview","starttime","stoptime","recognitionReducer","addContainerToPreviewReco","newElementToAdd","produce","draftState","unshift","dropFiles","initBatchRecognition","initFileRecognition","findIndex","updateFileState","nowaLista","removeRecognitionItem","entryId","fileID","foundEntry","find","openAudioRecPreview","clearRecoStore","setRefusedFiles","foundFileIdx","speechRecognitionSuccess","speechRecognitionFailed","changeToolItemStatus","segmentationReducer","addContainerToPreviewAlign","newElements","found","speechSegmentationSuccess","speechSegmentationFailed","removeSegmentationItem","audioContent","previewReducer","updateTxtPreview","updateAudioPreview","openTxtFilePreview","wsinit","openAudioFilePreview","togglePlayingPreview","clearPreviewStore","changeAudioDisplay","iferror","allIds","txtFiles","repoPanelReducer","newStatus","changeContainerStatus","speechRecognitionDone","speechSegmentationDone","speechDiarizationSuccess","speechDiarizationFailed","speechVADSuccess","speechVADFailed","containerBinaryData","loadBinaryForPreview","containerAudioFile","loadAudioForPreview","allContainers","allSessions","previouslySelectedSess","ktorezaznaczonecontenery","repoSelectSession","previouslySelectedCont","ktorasesjazaznaczone","repoSelectContainer","repoGetUserProjectFiles","repoGetUserProjectFilesFailed","repoCreateSession","repoCreateSessionFailes","newlistconts","arr","newContainers","object","repoRemoveContainerSuccess","repoRemoveContainerFailed","conteneryDoUsuniecia","newSessions","repoRemoveSessionSuccess","repoRemoveSessionFailed","exportToEmuDone","korpusDownloaded","transcriptionSavedMessage","projectReducer","openModalProject","closeModalProject","saveTranscription","transcriptionChanged","vadReducer","addContainerToPreviewVAD","removeVADItemFromList","diaReducer","addContainerToPreviewDIA","removeFromDIAItems","dotenvFlow","config","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","chalk","green","defaults","baseURL","axiosBaseURL","timeout","interceptors","use","statusCode","errorData","statusText","request","rootReducer","combineReducers","repoReducer","NotificationManager","info","success","warning","src_templateObject","zIndex","transform","store","createStore","applyMiddleware","thunk","app","es","lib","src_App_0","ReactDOM","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.422e7b92.chunk.js","sourcesContent":["\nconst auxiliary = (props) => props.children;\n\nexport default auxiliary;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './Jumbotron.css';\n//import {FormattedMessage} from 'react-intl';\n//import {Link} from 'react-router-dom';\n\nconst jumbotron = (props) => {\n\n    let myclasses = [\"jumbotron\", \"CustomJumbo\"];\n\n    return(\n        <Aux>\n            <div className={myclasses.join(' ')}>\n                <div className=\"container\">\n                    <h1 className=\"display-4\">CLARIN-PL</h1>\n                    <p className=\"lead\">\n                        \n                        Platforma do tworzenia korpusów i analizy sygnałów mowy.\n                       \n                    </p>\n                    <hr className=\"my-4\" />\n                    <p>\n                        Automatyczne rozpoznawanie mowy z plików dźwiękowych, segmentacja, tworzenie korpusów audio.\n                    </p>\n\n                   \n                   \n                {\n\n                  //  <div className=\"alert alert-info\" role=\"alert\">\n                  //  Portal w wersji beta.\n                  //  </div>\n\n                    // <Link to=\"/projectsList\">\n                    //       <button className=\"btn btn-primary btn-lg btn-block gotoprojects\">\n                    //           Przejdz do listy projektow\n                    //        </button>\n                    // </Link>\n                }\n\n                    {\n                    /*\n                    <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">\n                        \n                        <FormattedMessage\n                                id=\"Jumbotron.register\"\n                                defaultMessage=\"Zarejestruj się\"\n                                />\n\n                    </a>\n                    */\n                    }\n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default jumbotron;","import React from 'react';\nimport './Input.css';\n\nconst input = (props) => {\n\n    let inputElement = null;\n    let validationError = null;\n\n    const inputClasses = ['Input', 'form-control'];\n\n\n    if(props.invalid && props.touched){\n        inputClasses.push('is-invalid');\n        validationError = <p>Wprowadź poprawdną wartość!</p>;\n    }\n\n    switch(props.inputtype) {\n        case('input'):\n            inputElement = <input \n                onChange={props.whenchanged}\n                className={inputClasses.join(' ')} {...props}/>;\n            break;\n        case('textarea'):\n            inputElement = <textarea \n                onChange={props.whenchanged}\n                className={inputClasses.join(' ')}\n                 {...props}/>\n            break;\n        default:\n            inputElement = <input \n                onChange={props.whenchanged}\n                className={inputClasses.join(' ')} {...props}/>\n    }\n\n    return (\n        <div className=\"Input\">\n            <label>{props.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    )\n};\n\nexport default input;","import * as actionTypes from './actionsTypes';\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\n//import { saveSync } from 'save-file';\n//import streamSaver from 'StreamSaver';\n\n// ############################################################\n// ############## użytkownik pobrał korpus i można obliczyć go od nowa #################\n// ###########################################################\n\nexport const korpusDownloaded = () => {\n    return {\n        type: actionTypes.KORPUS_DOWNLOADED,\n    }\n}\n\n// ############################################################\n// ############## Speech VAD #################\n// ###########################################################\n\nexport const runSpeechVoiceActivityDetectionSuccess = (containerId, toolType, VADSegments) => {\n    return {\n        type: actionTypes.REPO_RUN_SPEECH_VAD_DONE,\n        containerId: containerId,\n        toolType: toolType,\n        VADSegments: VADSegments,\n    }\n}\n\nexport const runSpeechVoiceActivityDetectionFailed = (containerId, toolType, message) => {\n    return {\n        type: actionTypes.REPO_RUN_SPEECH_VAD_FAILED,\n        containerId: containerId,\n        toolType: toolType,\n        message: message,\n    }\n}\n\nexport const runSpeechVoiceActivityDetection = (container, token) => {\n    \n    return dispatch => {\n\n        axios.put(('/repoFiles/runSpeechVAD/'+container._id), \n        {\n           // containerId: container._id,\n           // toolType: toolType,\n        }, \n        {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n        .then(response => {\n            dispatch(runSpeechVoiceActivityDetectionSuccess(response.data.containerId, response.data.toolType, response.data.VADSegments, response.data.message));\n        })\n        .catch(error => {\n            const errorMessage = error.response.data.message;\n            const containerId = error.response.data.containerId;\n            const toolType = error.response.data.toolType;\n            dispatch(runSpeechVoiceActivityDetectionFailed(containerId, toolType,errorMessage));\n        }); \n    }\n}\n\n// ############################################################\n// ############## Speech diarization #################\n// ###########################################################\n\nexport const runSpeechDiarizationSuccess = (containerId, toolType, DIAsegments) => {\n    return {\n        type: actionTypes.REPO_RUN_SPEECH_DIARIZATION_DONE,\n        containerId: containerId,\n        toolType: toolType,\n        DIAsegments: DIAsegments,\n    }\n}\n\nexport const runSpeechDiarizationFailed = (containerId, toolType, message) => {\n    return {\n        type: actionTypes.REPO_RUN_SPEECH_DIARIZATION_FAILED,\n        containerId: containerId,\n        toolType: toolType,\n        message: message,\n    }\n}\n\nexport const runSpeechDiarization = (container, token) => {\n    \n    return dispatch => {\n\n        axios.put(('/repoFiles/runSpeechDiarization/'+container._id), \n        {\n            containerId: container._id,\n            //toolType: toolType,\n        }, \n        {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n        .then(response => {\n            dispatch(runSpeechDiarizationSuccess(response.data.containerId, response.data.toolType, response.data.DIAsegments));\n        })\n        .catch(error => {\n            const errorMessage = error.response.data.message;\n            const containerId = error.response.data.containerId;\n            const toolType = error.response.data.toolType;\n            dispatch(runSpeechDiarizationFailed(containerId, toolType,errorMessage));\n        }); \n    }\n}\n\n\n// ############################################################\n// ############## Speech segmentation #################\n// ###########################################################\n\nexport const runSpeechSegmentationSuccess = (message,containerId, toolType) => {\n    return {\n        type: actionTypes.REPO_RUN_SPEECH_SEGMENTATION_DONE,\n        containerId: containerId,\n        toolType: toolType,\n        message: message,\n    }\n}\n\nexport const runSpeechSegmentationFailed = (message,containerId, toolType) => {\n\n\n    return {\n        type: actionTypes.REPO_RUN_SPEECH_SEGMENTATION_FAILED,\n        containerId: containerId,\n        toolType: toolType,\n        message: message,\n    }\n}\n\nexport const runSpeechSegmentation = (container, token) => {\n    \n    return dispatch => {\n\n        axios.put(('/repoFiles/runSpeechSegmentation/'+container._id), \n        {\n            containerId: container._id,\n           // toolType: toolType,\n        }, \n        {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n        .then(response => {\n            dispatch(runSpeechSegmentationSuccess(response.message,container._id, response.data.toolType));\n        })\n        .catch((error) => {\n            const errorMessage = error.response.data.message;\n            const containerId = error.response.data.containerId;\n            const toolType = error.response.data.toolType;\n\n            dispatch(runSpeechSegmentationFailed(errorMessage,containerId, toolType));\n        }); \n    }\n}\n\n\n// ############################################################\n// ############## Ukończenie wykonywania speech recognition #################\n// ###########################################################\n\nexport const runSpeechRecognitionSuccess = (containerId, toolType) => {\n    return {\n        type: actionTypes.REPO_RUN_SPEECH_RECOGNITION_DONE,\n        containerId: containerId,\n        toolType: toolType,\n    }\n}\n\nexport const runSpeechRecognitionFailed = (containerId, toolType, messsage) => {\n    return {\n        type: actionTypes.REPO_RUN_SPEECH_RECOGNITION_FAILED,\n        containerId: containerId,\n        toolType: toolType,\n        messsage: messsage,\n    }\n}\n\nexport const runSpeechRecognition = (container, token) => {\n    \n    return dispatch => {\n\n\n        axios.put(('/repoFiles/runSpeechRecognition/'+container._id), \n        {\n            containerId: container._id,\n            //toolType: toolType,\n        }, \n        {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n        .then(response => {\n            dispatch(runSpeechRecognitionSuccess(container._id, response.data.toolType));\n        })\n        .catch(error => {\n            let errorMessage;\n            let containerId;\n            let toolType;\n            if(error.response){\n                errorMessage = error.response.data.message;\n                containerId = error.response.data.containerId;\n                toolType = error.response.data.toolType;\n            } else {\n                errorMessage = \"Coś poszło nie tak z rozpoznawaniem mowy\";\n                containerId = container._id;\n                toolType = \"REC\";\n            }\n            dispatch(runSpeechRecognitionFailed(containerId, toolType, errorMessage));\n        }); \n    }\n}\n\n//############################################################\n// ############## zmienia status contanera #################\n// ###########################################################\n\nexport const setContainerStatus = (containerId, toolType, status) => {\n\n\n    return {\n        type: actionTypes.SET_CONTAINER_STATUS,\n        containerId: containerId,\n        toolType: toolType,\n        status: status,\n    }\n}\n\n\n//############################################################\n// ############## zmienia status wpisu contanera dodanego do reco #################\n// ###########################################################\n\n/*\nexport const setToolItemStatus = (containerId, toolType, status) => {\n    return {\n        type: actionTypes.SET_TOOL_ITEM_STATUS,\n        containerId: containerId,\n        toolType: toolType,\n        status: status,\n    }\n}\n*/\n\n\n//############################################################\n// ############## usuwanie containera z repo #################\n// ###########################################################\n\nexport const removeContainerFromRepoSuccess = (message, sessionId, containerId) => {\n    return {\n        type: actionTypes.REPO_DELETE_CONTAINER_SUCCESS,\n        message: message,\n        sessionId: sessionId,\n        containerId: containerId,\n    }\n}\n\nexport const removeContainerFromRepoFailed = (error) => {\n    return {\n        type: actionTypes.REPO_DELETE_CONTAINER_FAILED,\n        error: error,\n    }\n}\n\nexport const removeContainerFromRepo = (userId, projectId, sessionId, containerId,token) => {\n    return dispatch => {\n\n        axios.delete(('/repoFiles/delete/'+containerId), \n        {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n        .then(response => {\n            dispatch(removeContainerFromRepoSuccess(response.data.message, response.data.sessionId, response.data.containerId));\n        })\n        .catch(error => {\n            dispatch(removeContainerFromRepoFailed(error));\n        }); \n    }\n}\n\n// ###########################################################\n// ############## zmiana nazwy contenera w repo ############## OK\n// ###########################################################\n\nexport const changeContainerNameSuccess = (containerId) => {\n    return {\n        type: actionTypes.REPO_CHANGE_CONTAINER_NAME_SUCCESS,\n        containerId: containerId,\n    }\n}\n\nexport const changeContainerNameFailed = (error) => {\n    return {\n        type: actionTypes.REPO_CHANGE_CONTAINER_NAME_FAILED,\n        error: error,\n    }\n}\n\n\nexport const changeContainerName = (container, text, token) => {\n    return dispatch => {\n\n        //const projectId = container.project;\n        //const userId = container.owner;\n        const containerId = container._id;\n\n        axios.put(('/repoFiles/changeContainerName/'+containerId), \n        {\n            newName: text\n        },\n        {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n        .then(response => {\n            dispatch(changeContainerNameSuccess(response.data.containerId));\n        })\n        .catch(error => {\n            dispatch(changeContainerNameFailed(error));\n        }); \n      \n    }\n}\n\n\n//############################################################\n// ############## usuwanie sesji z repo #################\n// ###########################################################\n\nexport const removeSessionFromRepoSuccess = (message, sessionId) => {\n    return {\n        type: actionTypes.REPO_DELETE_SESSION_SUCCESS,\n        message: message,\n        sessionId: sessionId,\n    }\n}\n\nexport const removeSessionFromRepoFailed = (error) => {\n    return {\n        type: actionTypes.REPO_DELETE_SESSION_FAILED,\n        error: error,\n    }\n}\n\nexport const removeSessionFromRepo = (userId, projectId, sessionId,token) => {\n    return dispatch => {\n\n        axios.delete(('/repoFiles/deleteSession/'+sessionId), \n        {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n        .then(response => {\n            dispatch(removeSessionFromRepoSuccess(response.data.message, response.data.sessionId));\n        })\n        .catch(error => {\n            dispatch(removeSessionFromRepoFailed(error));\n        }); \n    }\n}\n\n\n\n\n\n\n// ############################################################\n// ################ pobieranie sesji projektu #################\n// ############################################################\n/*\nexport const getRepoAssetsSuccess = (userId, sessions, containers) => {\n    return {\n        type: actionTypes.REPO_GET_USER_PROJECT_FILES,\n        sessions: sessions,\n        containers: containers,\n    }\n}\n\nexport const getRepoAssetsFailed = (error) => {\n    return {\n        type: actionTypes.REPO_GET_USER_PROJECT_FILES_FAILED,\n        error: error,\n    }\n}\n\n// pobieram liste plikow w katalogu uzytkownika dla danego projektu\nexport const getRepoAssets = (userId, projectId, token) => {\n    return dispatch => {\n\n        //console.log(\"wysyłam getProjectAssets\")\n        axios.get(('/repoFiles/getProjectAssets/' + projectId), {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n        .then(response => {\n            dispatch(getRepoAssetsSuccess(userId, response.data.sessions, response.data.containers));\n        })\n        .catch(error => {\n            dispatch(getRepoAssetsFailed(error));\n        });\n    }\n}\n*/\n\n\n// ############################################################\n// ####################### tworzenie nowej sesji ##############\n// ############################################################\n\nexport const createNewSession = (sessionName, projectId, userId, token) => {\n    return dispatch => {\n\n        axios.post('/repoFiles/createNewSession',\n            {\n                sessionName: sessionName,\n                projectId: projectId,\n                userId: userId,\n            }, \n            {\n                headers: {\n                    Authorization: 'Bearer ' + token\n                \n                },\n            }\n        )\n        .then(sessionData => {\n           let createdSessionName = sessionData.data.sessionName;\n           let createdSessionId = sessionData.data.id;\n           dispatch(createNewSessionDone(createdSessionName,createdSessionId));\n        })\n        .catch(error => {\n            dispatch(createNewSessionFailed(error));\n        });\n    }\n}\n\nexport const createNewSessionDone = (sessionName, sessionId) => {\n    return {\n        type: actionTypes.REPO_CREATE_NEW_SESSION,\n        sessionName: sessionName,\n        sessionId: sessionId,\n    }\n}\n\nexport const createNewSessionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_CREATE_NEW_SESSION_FAILED,\n        errorMessage: error,\n    }\n}\n\n\n// ########################################################\n// ################## zazbaczanie w repo #####################\n// ##########################################################\n\nexport const selectSession = (sessionId) =>{\n    return {\n        type: actionTypes.REPO_SELECT_SESSION,\n        sessionId: sessionId,\n    }\n}\n\nexport const selectContainer = (containerId) => {\n    return {\n        type: actionTypes.REPO_SELECT_CONTAINER,\n        containerId: containerId,\n    }\n}\n\n\n\n//#################################################################\n//############## get user project files ######################\n//####################################################\n\nexport const getProjectFilesForUserAction = (userId, sessions, containers) => {\n    return {\n        type: actionTypes.REPO_GET_USER_PROJECT_FILES,\n        sessions: sessions,\n        containers: containers,\n    }\n}\n\nexport const getProjectFilesForUserActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_GET_USER_PROJECT_FILES_FAILED,\n        error: error,\n    }\n}\n\n// pobieram liste plikow w katalogu uzytkownika dla danego projektu\nexport const getProjectFilesForUser = (userId, projectId, token) => {\n    return dispatch => {\n       \n        axios.get(('/repoFiles/getProjectAssets/' + projectId ), {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n            .then(response => {\n                dispatch(getProjectFilesForUserAction(userId, response.data.sessions, response.data.containers));\n            })\n            .catch(error => {\n                dispatch(getProjectFilesForUserActionFailed(error));\n            });\n    }\n}\n\n\n\n// #################################\n// ###### Export To EMU\n// ############################\n\nexport const exportToEMUFailed = (message) => {\n    return {\n        type: actionTypes.EXPORT_TO_EMU_DONE_FAILED,\n        message: message,\n    }\n}\n\nexport const exportToEMUSuccess = (message) => {\n    return {\n        type: actionTypes.EXPORT_TO_EMU_DONE_SUCCESS,\n        message: message,\n    }\n}\n\n\n//it initializes creating corpus on the serwer\nexport const exportToEMU = (projectId, userId, token) => {\n    console.log(\"Export to emu\");\n    return dispatch => {\n        axios.get('/repoFiles/exportToEmu/'+userId+'/'+projectId, {\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        })\n        .then(response => {\n            console.log(response)\n\n            //jak jest gotowy to go ściągam\n           // this.downloadCorpus(projectId, userId, token);\n\n            dispatch(exportToEMUSuccess(response.data.message));\n        })\n        .catch(error => {\n            console.log(error)\n            dispatch(exportToEMUFailed(error.message));\n        });\n    }\n}\n\n\n//#####################################################################################\n//#####################################################################################\n//#####################################################################################\n//#####################################################################################\n//#####################################################################################\n//####################### to pod spodem to kopia ze starej biblioteki ###############\n//#####################################################################################\n\n\n\n\n\n//#################################################################\n//############# upload plików do repo ############################\n//################################################################\n\n\n\nexport const uploadFilesFinish = () =>{\n    return {\n        type: actionTypes.REPO_UPLOAD_FILES_FINISH,\n    }\n}\n\nexport const uploadFilesInit = () =>{\n    return {\n        type: actionTypes.REPO_UPLOAD_FILES_INIT,\n    }\n}\n\nexport const uploadFilesFailed = (message) =>{\n    return {\n        type: actionTypes.REPO_UPLOAD_FILES_FAILED,\n        message: message\n    }\n}\n\nexport const uploadFilesSuccess = (message) =>{\n    return {\n        type: actionTypes.REPO_UPLOAD_FILES_SUCCESS,\n        message: message,\n    }\n}\n\nexport const changeUploadProgress = (percent) => {\n    return {\n        type: actionTypes.REPO_UPLOAD_FILES_PROGRESS,\n        percent: percent,\n    }\n}\n\nexport const uploadFilesModalOpen = () => {\n    return {\n        type: actionTypes.REPO_UPLOAD_FILES_MODAL_OPEN,\n    }\n}\n\nexport const uploadFiles = (fileList,folderKey,userId, projectId, token) => {\n    return dispatch => {\n\n        \n        const data = new FormData()\n\n        for(var x = 0; x < fileList.length; x++){\n            data.append('audioFiles', fileList[x]);\n        }\n\n       // console.log(userId)\n       // console.log(projectId)\n\n        data.append('folderKey', folderKey);\n        data.append('userId', userId);\n        data.append('projectId', projectId);\n\n        dispatch(uploadFilesInit());\n        \n\n        axios.post('/repoFiles/uploadFiles', data, \n        {\n            headers: {\n                Authorization: 'Bearer ' + token,\n                'content-type': 'multipart/form-data',\n            },\n\n            onUploadProgress: ProgressEvent => {\n                let percent = ProgressEvent.loaded / ProgressEvent.total*100;\n\n                dispatch(changeUploadProgress(percent));\n\n                if(percent===100){\n                    dispatch(uploadFilesFinish());\n                }\n            }\n        })\n        .then(response => {\n            console.log(response)\n            dispatch(uploadFilesSuccess(response.message));\n        })\n        .catch(error => {\n            console.log(error)\n            dispatch(uploadFilesFailed(error.message));\n        });\n\n        //tutaj powinniśmy zwrócić z serwera listę plikow z serwera któ©e zostały dodane\n        // let files = [\n        //         {\n        //         key: '/lalala/test.wav',\n        //         modified: 1567318077468,\n        //         size: 250496,\n        //         url: 'http://localhost:1234/5d1db8a1ceb24447d9cdda0c/5d6b603c5be78a2d10b5f2a7/demo_files/test.wav',\n        //         relativeKey: '/lalala/test.wav'\n        //       },\n        //       {\n        //         key: '/koty/',\n        //         modified: 1567318077404,\n        //         size: 4096,\n        //         url: 'http://localhost:1234/5d1db8a1ceb24447d9cdda0c/5d6b603c5be78a2d10b5f2a7/my_files/',\n        //         relativeKey: '/koty/'\n        //       }\n\n        //     ];\n\n        // dispatch(uploadFilesSuccess(files));\n    }\n}\n\n\n\n//#################################################################\n//############## edycja pliku txt ######################\n//####################################################\n\nexport const handleUpdateTxtFileAction = (key, message) => {\n    return {\n        type: actionTypes.REPO_EDIT_TXT_SUCCESS,\n        file: key,\n    }\n}\n\nexport const handleUpdateTxtFileActionFailed = (key, message) => {\n    return {\n        type: actionTypes.REPO_EDIT_TXT_FAILED,\n        file: key,\n    }\n}\n\nexport const handleUpdateTxtFile = (userId, projectId, token, key, newContent) => {\n    console.log('UPDATE TXT FILE:' + key);\n    return dispatch => {\n        axios.put(('/repoFiles/editTxtFile/'), {\n            key: key, //np key: \"nowyfolder/\" lub \"nowyfolder/innypodfolder/\"\n            newContent: newContent,\n            userId: userId,\n            projectId: projectId,\n        }, {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n            .then(response => {\n                console.log(response)\n                dispatch(handleUpdateTxtFileAction(response.data.key, response.data.message));\n            })\n            .catch(error => {\n                dispatch(handleUpdateTxtFileActionFailed(error));\n            });\n    }\n}\n\n\n\n//#########################################\n//#######   tworzenie nowego folderu\n//#########################################\n\nexport const handleCreateFolderAction = (key, message) => {\n    return {\n        type: actionTypes.REPO_CREATE_FOLDER,\n        key: key,\n        message: message,\n    }\n}\n\nexport const handleCreateFolderActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_CREATE_FOLDER_FAILED,\n        error: error.toString(),\n    }\n}\n\nexport const handleCreateFolder = (key, projectId, userId, token) => {\n    console.log('CREATE NEW FOLDER:' + key);\n    return dispatch => {\n        axios.post(('/repoFiles/createFolder/'), {\n            key: key, //np key: \"nowyfolder/\" lub \"nowyfolder/innypodfolder/\"\n            projectId: projectId,\n            userId: userId,\n        }, {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n            .then(response => {\n                console.log(response)\n                dispatch(handleCreateFolderAction(response.data.key, response.data.message));\n            })\n            .catch(error => {\n                dispatch(handleCreateFolderActionFailed(error));\n            });\n    }\n}\n\n//############################################\n//#########tworzenie nowych plikow\n//  TO DO: poki co nie ma mozliwosci wgrania plikow osobno do repo\n// tylko przez usluge\n//##############################################\n\nexport const handleCreateFilesAction = (files, prefix) => {\n    return {\n        type: actionTypes.REPO_CREATE_FILES,\n        files: files,\n        prefix: prefix,\n    }\n}\n\nexport const handleCreateFiles = (files, prefix) => {\n    console.log('CREATE NEW FILES:' + files);\n    return dispatch => {\n        dispatch(handleCreateFilesAction(files, prefix));\n    }\n}\n\n//#############################################\n//######### zmiana nazwy folderu\n//#############################################\nexport const handleRenameFolderAction = (oldKey, newKey, message) => {\n    return {\n        type: actionTypes.REPO_RENAME_FOLDER,\n        oldKey: oldKey,\n        newKey: newKey,\n        message: message,\n    }\n}\n\nexport const handleRenameFolderActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_RENAME_FOLDER_FAILED,\n        error: error.toString()\n    }\n}\n\nexport const handleRenameFolder = (oldKey, newKey, projectId, userId, token) => {\n    //console.log('RENAME FOLDER:' + oldKey + ' into ' + newKey);\n    //RENAME FOLDER:alaMaKota/ into alaMaKota222/\n    return dispatch => {\n        axios.put(('/repoFiles/renameFolder/'), {\n            oldKey: oldKey, \n            newKey: newKey,\n            userId: userId,\n            projectId: projectId,\n        }, {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n            .then(response => {\n                console.log(response)\n                //this.getProjectFilesForUser(userId, projectId, token);\n                dispatch(handleRenameFolderAction(response.data.oldKey, response.data.newKey, response.data.message));\n                //dispatch(handleRenameFolderAction(response.data.oldKey, response.data.newKey, response.data.message));\n            })\n            .catch(error => {\n                dispatch(handleRenameFolderActionFailed(error));\n            });\n    }\n}\n\n//#####################################################\n//################zmiana nazwy pliku/folderu\n//################ takze przenoszenie pliku/folderu\n//#####################################################\nexport const handleRenameFileAction = (oldKey, newKey, message) => {\n    return {\n        type: actionTypes.REPO_RENAME_FILE,\n        oldKey: oldKey,\n        newKey: newKey,\n        message: message\n    }\n}\n\nexport const handleRenameFileActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_RENAME_FILE,\n        error: error.toString()\n    }\n}\n\nexport const handleRenameFile = (oldKey, newKey, projectId, userId, token) => {\n    return dispatch => {\n        axios.put(('/repoFiles/renameFile/'), {\n            oldKey: oldKey, \n            newKey: newKey,\n            projectId: projectId,\n            userId: userId,\n        }, {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n        .then(response => {\n            console.log(response)\n            dispatch(handleRenameFileAction(response.data.oldKey, response.data.newKey, response.data.message));\n        })\n        .catch(error => {\n            dispatch(handleRenameFolderActionFailed(error));\n        });\n    }\n}\n\n//############################################\n//########### usuwanie folderu ##############\n//##########################################\nexport const handleDeleteFolderAction = (folderKey) => {\n    return {\n        type: actionTypes.REPO_DELETE_FOLDER,\n        folderKey: folderKey,\n    }\n}\n\nexport const handleDeleteFolderActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_DELETE_FOLDER_FAILED,\n        error: error.toString(),\n    }\n}\nexport const handleDeleteFolder = (folderKey, projectId, userId,token) => {\n    console.log('DELETE FOLDER:' + folderKey);\n    return dispatch => {\n        axios.delete('/repoFiles/deleteFolder/', \n        {\n            data: { \n                folderKey: folderKey,  \n                projectId: projectId,\n                userId: userId,\n            },\n            headers: {\n               Authorization: 'Bearer ' + token\n           } \n       })\n\n           .then(response => {\n               dispatch(handleDeleteFolderAction(response.data.folderKey));\n           })\n           .catch(error => {\n               console.log(error)\n               dispatch(handleDeleteFolderActionFailed(error));\n           });\n    }\n}\n\n//##############################################\n//############# usuwanie pliku\n//#############################################\nexport const handleDeleteFileAction = (fileKey, message) => {\n    return {\n        type: actionTypes.REPO_DELETE_FILE,\n        fileKey: fileKey,\n        message: message,\n    }\n}\n\nexport const handleDeleteFileActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_DELETE_FILE_FAILED,\n        error: error.toString(),\n    }\n}\n\n// #################################\n// ###### Usuwanie pliku\n// ############################\nexport const handleDownloadFileAction = (fileURL) => {\n    return {\n        type: actionTypes.REPO_DOWNLOAD_FILE,\n        downloadedFile: fileURL,\n    }\n}\n\nexport const handleDownloadFile = (fileKey, projectId, userId, token) => {\n    console.log(fileKey)\n    return dispatch => {\n        axios.get('/repoFiles/downloadFile/', {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n            params: {\n                fileKey: fileKey,\n                projectId: projectId,\n                userId: userId,\n            }\n        })\n               .then(response => {\n                    console.log(response)\n                    let url = response.data.pathToDownload;\n                    let nazwaPliku = url.split('/');\n                    nazwaPliku = nazwaPliku[nazwaPliku.length -1];\n                    \n                    saveAs(url, nazwaPliku, { autoBom: true });\n\n               })\n               \n               .catch(error => {\n                   console.log(error)\n                   //dispatch(handleDownloadFileActionError(error));\n               });\n    }\n}\n\n\n\nexport const handleDeleteFile = (fileKey, projectId, userId, token) => {\n    console.log('DELETE FILE:' + fileKey);\n    return dispatch => {\n            axios.delete('/repoFiles/deleteFile/', \n            {\n                data: { \n                    fileKey: fileKey,\n                    projectId: projectId,\n                    userId: userId,\n                 },\n                headers: {\n                   Authorization: 'Bearer ' + token\n               } \n           })\n               .then(response => {\n                    dispatch(handleDeleteFileAction(response.data.fileKey, response.data.message));\n               })\n               .catch(error => {\n                   console.log(error)\n                   dispatch(handleDeleteFileActionFailed(error));\n               });\n    }\n}\n\n\n\n","\n// home page actions\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\nexport const SET_AUTO_LOGOUT = 'SET_AUTO_LOGOUT';\nexport const REGISTER = 'REGISTER';\nexport const REGISTER_FAILED = 'REGISTER_FAILED';\nexport const SET_CURRENT_PROJECT_ID = 'SET_CURRENT_PROJECT_ID';\nexport const FORGOT_PASS = 'FORGOT_PASS';\nexport const FORGOT_PASS_FAILED = 'FORGOT_PASS_FAILED';\n\nexport const START_LOADING = 'START_LOADING';\nexport const STOP_LOADING = 'STOP_LOADING';\n\n// project list actions\nexport const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const GET_PROJECTS_LIST = 'GET_PROJECTS_LIST';\nexport const GET_PROJECTS_LIST_FAILED = 'GET_PROJECTS_LIST_FAILED';\nexport const CHOSE_PROJECT = 'CHOSE_PROJECT';\n\nexport const ADD_PROJECT = 'ADD_PROJECT';\nexport const ADD_PROJECT_FAILED = 'ADD_PROJECT_FAILED';\nexport const ADD_PROJECT_INIT = 'ADD_PROJECT_INIT';\nexport const ADD_PROJECT_DONE = 'ADD_PROJECT_DONE';\n\nexport const DUPLICATE_PROJECT = 'DUPLICATE_PROJECT';\nexport const SHARE_PROJECT = 'SHARE_PROJECT';\nexport const REMOVE_PROJECT = 'REMOVE_PROJECT';\nexport const EDIT_NAME = 'EDIT_NAME';\nexport const EDIT_NAME_FAILED = 'EDIT_NAME_FAILED';\n\n//project page\nexport const INIT_PROJECT = 'INIT_PROJECT';\nexport const OPEN_MODAL_PROJECT = 'OPEN_MODAL_PROJECT';\nexport const CLOSE_MODAL_PROJECT = 'CLOSE_MODAL_PROJECT';\nexport const CLEAR_RECO_STORE = 'CLEAR_RECO_STORE';\nexport const CLEAR_SEGMENT_STORE = 'CLEAR_SEGMENT_STORE';\nexport const CLEAR_PREVIEW_STORE = 'CLEAR_PREVIEW_STORE';\nexport const SET_TOOL_ITEM_STATUS = 'SET_TOOL_ITEM_STATUS';\n\n// audio editor\nexport const LOAD_BINARY_FOR_PREVIEW = 'LOAD_BINARY_FOR_PREVIEW';\nexport const LOAD_BINARY_FOR_PREVIEW_FAILED = 'LOAD_BINARY_FOR_PREVIEW_FAILED';\nexport const LOAD_AUDIO_FOR_PREVIEW = 'LOAD_AUDIO_FOR_PREVIEW';\nexport const LOAD_AUDIO_FOR_PREVIEW_FAILED = 'LOAD_AUDIO_FOR_PREVIEW_FAILED';\nexport const SAVE_TRANSCRIPTION_SUCCESS = 'SAVE_TRANSCRIPTION_SUCCESS';\nexport const SAVE_TRANSCRIPTION_FAILED = 'SAVE_TRANSCRIPTION_FAILED';\nexport const TRANSCRIPTION_CHANGED = 'TRANSCRIPTION_CHANGED';\nexport const LOAD_TRANSCRIPTION = 'LOAD_TRANSCRIPTION';\nexport const LOAD_TRANSCRIPTION_FAILED = 'LOAD_TRANSCRIPTION_FAILED';\n\n// dia tab\nexport const ADD_CONTAINER_TO_DIA = 'ADD_CONTAINER_TO_DIA';\nexport const ADD_CONTAINER_TO_PREVIEW_DIA = 'ADD_CONTAINER_TO_PREVIEW_DIA';\nexport const SAVE_DIA_SEGMENTS_SUCCESS = 'SAVE_DIA_SEGMENTS_SUCCESS';\nexport const SAVE_DIA_SEGMENTS_FAILED = 'SAVE_DIA_SEGMENTS_FAILED';\nexport const REMOVE_DIA_ITEM = 'REMOVE_RECOGNITION_ITEM';\n\n//seg tab\nexport const OPEN_CONTAINER_IN_EMU_SUCCESS = 'OPEN_CONTAINER_IN_EMU_SUCCESS';\nexport const OPEN_CONTAINER_IN_EMU_FAILED = 'OPEN_CONTAINER_IN_EMU_FAILED';\n\n// vad tab\nexport const ADD_CONTAINER_TO_VAD = 'ADD_CONTAINER_TO_VAD';\nexport const ADD_CONTAINER_TO_PREVIEW_VAD = 'ADD_CONTAINER_TO_PREVIEW_VAD';\nexport const RUN_VAD_IN_BATCH = 'RUN_VAD_IN_BATCH';\nexport const SAVE_VAD_SEGMENTS_SUCCESS = 'SAVE_VAD_SEGMENTS_SUCCESS';\nexport const SAVE_VAD_SEGMENTS_FAILED = 'SAVE_VAD_SEGMENTS_FAILED';\nexport const REMOVE_VAD_ITEM = 'REMOVE_RECOGNITION_ITEM';\n\n// recognition tab\nexport const ADD_CONTAINER_TO_PREVIEW_RECO = 'ADD_CONTAINER_TO_PREVIEW_RECO';\nexport const INIT_BATCH_RECOGNITION = 'INIT_BATCH_RECOGNITION';\nexport const INIT_FILE_RECOGNITION = 'INIT_BATCH_RECOGNITION';\nexport const DROP_FILES = 'DROP_FILES';\nexport const UPDATE_FILE_STATE = 'UPDATE_FILE_STATE';\nexport const OPEN_AUDIO_RECOGNITION_PREVIEW = 'OPEN_AUDIO_RECOGNITION_PREVIEW';\nexport const REMOVE_RECOGNITION_ITEM = 'REMOVE_RECOGNITION_ITEM';\nexport const REFUSE_RECO_FILES = 'REFUSE_RECO_FILES';\nexport const ADD_CONTAINER_TO_RECO = 'ADD_CONTAINER_TO_RECO';\n\n\n// segmentation tab\n//export const INIT_BATCH_SEGMENTATION = 'INIT_BATCH_SEGMENTATION';\nexport const INIT_FILE_SEGMENTATION = 'INIT_FILE_SEGMENTATION';\nexport const DROP_AUDIO_FILES = 'DROP_AUDIO_FILES';\nexport const DROP_TXT_FILES = 'DROP_TXT_FILES';\nexport const CHANGE_AUDIO_LIST_ORDER = 'CHANGE_AUDIO_LIST_ORDER';\nexport const CHANGE_TXT_LIST_ORDER = 'CHANGE_TXT_LIST_ORDER';\nexport const REMOVE_SEGMENT_ENTRY = 'REMOVE_SEGMENT_ENTRY';\nexport const FILE_SEGMENTATION_SUCCESS = 'FILE_SEGMENTATION_SUCCESS';\nexport const FILE_SEGMENTATION_FAILED = 'FILE_SEGMENTATION_FAILED';\nexport const REFUSE_SEGMENT_AUDIO_FILES = 'REFUSE_SEGMENT_AUDIO_FILES';\nexport const REFUSE_SEGMENT_TXT_FILES = 'REFUSE_SEGMENT_TXT_FILES';\nexport const ADD_CONTAINER_TO_ALIGN = 'ADD_CONTAINER_TO_ALIGN';\nexport const ADD_CONTAINER_TO_PREVIEW_ALIGN = 'ADD_CONTAINER_TO_PREVIEW_ALIGN';\nexport const REMOVE_SEGMENTATION_ITEM = 'REMOVE_RECOGNITION_ITEM';\n\n\n\n\n// repo\nexport const REPO_RUN_SPEECH_RECOGNITION_DONE = 'REPO_RUN_SPEECH_RECOGNITION_DONE';\nexport const REPO_RUN_SPEECH_RECOGNITION_FAILED = 'REPO_RUN_SPEECH_RECOGNITION_FAILED';\n\nexport const REPO_RUN_SPEECH_SEGMENTATION_DONE = 'REPO_RUN_SPEECH_SEGMENTATION_DONE';\nexport const REPO_RUN_SPEECH_SEGMENTATION_FAILED = 'REPO_RUN_SPEECH_SEGMENTATION_FAILED';\n\nexport const REPO_RUN_SPEECH_DIARIZATION_DONE = 'REPO_RUN_SPEECH_DIARIZATION_DONE';\nexport const REPO_RUN_SPEECH_DIARIZATION_FAILED = 'REPO_RUN_SPEECH_DIARIZATION_FAILED';\n\nexport const REPO_RUN_SPEECH_VAD_DONE = 'REPO_RUN_SPEECH_VAD_DONE';\nexport const REPO_RUN_SPEECH_VAD_FAILED = 'REPO_RUN_SPEECH_VAD_FAILED';\n\nexport const EXPORT_TO_EMU_DONE_FAILED = 'EXPORT_TO_EMU_DONE_FAILED';\nexport const EXPORT_TO_EMU_DONE_SUCCESS = 'EXPORT_TO_EMU_DONE_SUCCESS';\n\nexport const DOWNLOAD_KORPUS_DONE = 'DOWNLOAD_KORPUS_DONE';\nexport const DOWNLOAD_KORPUS_FAILED = 'DOWNLOAD_KORPUS_FAILED';\n\nexport const KORPUS_DOWNLOADED = 'KORPUS_DOWNLOADED';\n\nexport const REPO_DELETE_SESSION_SUCCESS = 'REPO_DELETE_SESSION_SUCCESS';\nexport const REPO_DELETE_SESSION_FAILED = 'REPO_DELETE_SESSION_FAILED';\n\nexport const REPO_CHANGE_CONTAINER_NAME_SUCCESS = 'REPO_CHANGE_CONTAINER_NAME_SUCCESS';\nexport const REPO_CHANGE_CONTAINER_NAME_FAILED = 'REPO_CHANGE_CONTAINER_NAME_FAILED';\n\n\nexport const REPO_SELECT_CONTAINER = 'REPO_SELECT_CONTAINER';\nexport const REPO_SELECT_SESSION = 'REPO_SELECT_SESSION';\nexport const REPO_CREATE_NEW_SESSION = 'REPO_CREATE_NEW_SESSION';\nexport const REPO_CREATE_NEW_SESSION_FAILED = 'REPO_CREATE_NEW_SESSION_FAILED';\nexport const REPO_DELETE_CONTAINER_SUCCESS = 'REPO_DELETE_CONTAINER_SUCCESS';\nexport const REPO_DELETE_CONTAINER_FAILED = 'REPO_DELETE_CONTAINER_FAILED';\nexport const SET_CONTAINER_STATUS = 'SET_CONTAINER_STATUS';\n\n\n// pod spodem to kopie\nexport const REPO_UPLOAD_FILES_MODAL_OPEN = 'REPO_UPLOAD_FILES_MODAL_OPEN';\nexport const REPO_UPLOAD_FILES_PROGRESS = 'REPO_UPLOAD_FILES_PROGRESS';\nexport const REPO_UPLOAD_FILES_FINISH = 'REPO_UPLOAD_FILES_FINISH';\nexport const REPO_UPLOAD_FILES_INIT = 'REPO_UPLOAD_FILES_INIT';\nexport const REPO_UPLOAD_FILES_SUCCESS = 'REPO_UPLOAD_FILES_SUCCESS';\nexport const REPO_UPLOAD_FILES_FAILED = 'REPO_UPLOAD_FILES_FAILED';\nexport const REPO_EDIT_TXT_SUCCESS = 'REPO_EDIT_TXT_SUCCESS';\nexport const REPO_EDIT_TXT_FAILED = 'REPO_EDIT_TXT_FAILED';\nexport const REPO_UPLOAD_FILE = 'REPO_UPLOAD_FILE';\nexport const REPO_UPLOAD_FILE_FAILED = 'REPO_UPLOAD_FILE_FAILED';\nexport const REPO_CREATE_FOLDER = 'REPO_CREATE_FOLDER';\nexport const REPO_CREATE_FOLDER_FAILED = 'REPO_CREATE_FOLDER_FAILED';\nexport const REPO_CREATE_FILES = 'REPO_CREATE_FILES';\nexport const REPO_CREATE_FILES_FAILED = 'REPO_CREATE_FILES_FAILED';\nexport const REPO_RENAME_FOLDER = 'REPO_RENAME_FOLDER';\nexport const REPO_RENAME_FOLDER_FAILED = 'REPO_RENAME_FOLDER_FAILED';\nexport const REPO_RENAME_FILE = 'REPO_RENAME_FILE';\nexport const REPO_RENAME_FILE_FAILED = 'REPO_RENAME_FILE_FAILED';\nexport const REPO_DELETE_FOLDER = 'REPO_DELETE_FOLDER';\nexport const REPO_DELETE_FOLDER_FAILED = 'REPO_DELETE_FOLDER_FAILED';\nexport const REPO_DELETE_FILE = 'REPO_DELETE_FILE';\nexport const REPO_DELETE_FILE_FAILED = 'REPO_DELETE_FILE_FAILED';\nexport const REPO_GET_USER_PROJECT_FILES = 'REPO_GET_USER_PROJECT_FILES';\nexport const REPO_GET_USER_PROJECT_FILES_FAILED = 'REPO_GET_USER_PROJECT_FILES_FAILED';\nexport const REPO_DOWNLOAD_FILE = 'REPO_DOWNLOAD_FILE';\n\n\n\n//preview\nexport const UPDATE_TXT_PREVIEW = 'UPDATE_TXT_PREVIEW';\nexport const UPDATE_AUDIO_PREVIEW = 'UPDATE_AUDIO_PREVIEW';\nexport const OPEN_TXT_FILE_PREVIEW = 'OPEN_TXT_FILE_PREVIEW';\nexport const OPEN_AUDIO_FILE_PREVIEW = 'OPEN_AUDIO_FILE_PREVIEW';\nexport const WAVESURFER_INITIALIZED = 'WAVESURFER_INITIALIZED';\nexport const TOGGLE_PLAYING_PREVIEW = 'TOGGLE_PLAYING_PREVIEW';\nexport const CHANGE_AUDIO_DISPLAYED = 'CHANGE_AUDIO_DISPLAYED';\n","import * as actionTypes from './actionsTypes';\nimport axios from 'axios';\n\n//otwieram okno modalne\nexport const openModal = (actionType, projectId, projectName) => {\n    return {\n        type: actionTypes.OPEN_MODAL,\n        localActionType: actionType,\n        projectId: projectId,\n        projectName: projectName\n    }\n}\n\n//zamykam okno modalne\nexport const closeModal = () => {\n    return {\n        type: actionTypes.CLOSE_MODAL,\n    }\n}\n\n\n//###########################################\n//#########  pobieram liste projektow #########\n//###########################################\n\nexport const getProjectsListAction = (userId, projects) => {\n    //console.log(projects)\n    return {\n        type: actionTypes.GET_PROJECTS_LIST,\n        userId: userId,\n        projects: projects,\n    }\n}\n\nexport const getProjectsListFailed = (error) => {\n    return {\n        type: actionTypes.GET_PROJECTS_LIST_FAILED,\n        error: error\n    }\n}\n\nexport const getProjectsList = (userId, token) => {\n    return dispatch => {\n        //const header = Authorization: `Bearer-${token}`;\n        //return axios.get(URLConstants.USER_URL, { headers: { header } });\n        axios.get('/projectsList',{\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        })\n            .then(response => {\n                console.log(response)\n                dispatch(getProjectsListAction(userId, response.data.projects));\n            })\n            .catch(error => {\n                dispatch(getProjectsListFailed(error));\n            });\n    }\n}\n\n//##################################################\n//#########  dodaje projekt ##########\n//##################################################\nexport const addNewProjectAction = (projectName, messageFromServer, responsedNewProject, userId, token) => {\n    return {\n        type: actionTypes.ADD_PROJECT,\n        projectName: projectName,\n        messageFromServer: messageFromServer,\n        responsedNewProject: responsedNewProject,\n        userId: userId,\n        token: token,\n    }\n}\n\nexport const addNewProjectActionFailed = (error) => {\n    return {\n        type: actionTypes.ADD_PROJECT_FAILED,\n        errorMessage: error\n    }\n}\n\nexport const initNewProjectAction = () => {\n    return {\n        type: actionTypes.ADD_PROJECT_INIT,\n    }\n}\n\nexport const addNewProjectDone = () => {\n    return {\n        type: actionTypes.ADD_PROJECT_DONE,\n    }\n}\n\nexport const addNewProject = (projectName, userId, token) => {\n    return dispatch => {\n        //ustawiam loaded na false w reducerze aby wylaczyc okienko dopiero gdy sie zaladuje\n        dispatch(initNewProjectAction())\n\n        axios.post('/projectsList/addProject', {\n                projectName: projectName,\n            },{\n                headers: {\n                    Authorization: 'Bearer ' + token\n            }})\n            .then(response => {\n                //console.log(\"from action:\")\n                //console.log(response)\n                dispatch(addNewProjectAction(projectName, response.data.message, response.data.project, userId, token));\n                dispatch(addNewProjectDone());\n            })\n            .catch(error => {\n                dispatch(addNewProjectActionFailed(error));\n            });\n    }\n}\n\n//########################################\n//#########  wybieram  projekt ##########\n//########################################\nexport const projectChoice = (projectId, projectName, projectOwner) => {\n    return {\n        type: actionTypes.CHOSE_PROJECT,\n        projectId: projectId,\n        projectName: projectName,\n        projectOwner: projectOwner,\n    }\n}\n\nexport const duplicateProject = (projectId) => {\n    return {\n        type: actionTypes.DUPLICATE_PROJECT,\n        projectId: projectId\n    }\n}\n\nexport const shareProject = (projectId) => {\n    return {\n        type: actionTypes.SHARE_PROJECT,\n        projectId: projectId\n    }\n}\n\n//################################################\n//################## USUWANIE PROJEKTU ###############\n//################################################\n\nexport const deleteProjectAction = (projectId, message,userId, token) => {\n    return {\n        type: actionTypes.REMOVE_PROJECT,\n        projectId: projectId,\n        message: message,\n        userId: userId,\n        token: token,\n    }\n}\n\nexport const deleteProject = (projectId, userId, token) => {\n    return dispatch => {\n     \n        axios.delete('/projectsList/removeProject/' + projectId, {\n             //data: { idprojektu: projectId },\n             headers: {\n                Authorization: 'Bearer ' + token\n            } \n        })\n            .then(response => {\n                if(response.status !== 200 && response.status !== 201){\n                    throw new Error('Deleting a project failed');\n                }\n                dispatch(deleteProjectAction(response.data.projectId, response.data.message, userId, token));\n                dispatch(closeModal());\n            })\n            .catch(error => {\n                console.log(error)\n               // dispatch(editNameProjectActionFailed(error));\n            });\n    }\n}\n\n//################################################\n//################## EDYCJA NAZWY ###############\n//################################################\n\nexport const editNameProjectAction = (projectId, newProjectName, messageFromServer, userId, token) => {\n    return {\n        type: actionTypes.EDIT_NAME,\n        projectId: projectId,\n        newProjectName: newProjectName,\n        message: messageFromServer,\n        userId: userId,\n        token: token,\n    }\n}\n\nexport const editNameProjectActionFailed = (error) => {\n    return {\n        type: actionTypes.EDIT_NAME_FAILED,\n        error: error.message\n    }\n}\n\nexport const editName = (projectId, newName, userId, token) => {\n    return dispatch => {\n\n        //console.log('EDIT NAME')\n        axios.put('/projectsList/updateProjectName/' + projectId, {\n            newProjectName: newName,\n        },{\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        })\n            .then(response => {\n                //console.log(\"from action:\")\n                //console.log(response)\n                dispatch(editNameProjectAction(response.data.projectId, response.data.newName, response.data.message, userId, token));\n                dispatch(closeModal());\n            })\n            .catch(error => {\n                console.log(error)\n                dispatch(editNameProjectActionFailed(error));\n            });\n    }\n\n}\n\n\n\n","import * as actionTypes from './actionsTypes';\n//import axios from 'axios';\n\n\n\n//initialization the init properties of the project\nexport const initProject = (projectId, projectTitle, projectOwner) => {\n    return {\n        type: actionTypes.INIT_PROJECT,\n        projectId: projectId,\n        projectTitle: projectTitle,\n        projectOwner: projectOwner,\n    }\n}\n\nexport const openModalProject = () => {\n    return {\n        type: actionTypes.OPEN_MODAL_PROJECT,\n    }\n}\n\nexport const closeModalProject = () => {\n    return {\n        type: actionTypes.CLOSE_MODAL_PROJECT,\n    }\n}\n\nexport const clearRecoStore = () => {\n    return {\n        type: actionTypes.CLEAR_RECO_STORE,\n    }\n}\n\nexport const clearSegmentStore = () => {\n    return {\n        type: actionTypes.CLEAR_SEGMENT_STORE,\n    }\n}\n\nexport const clearPreviewStore = () => {\n    return {\n        type: actionTypes.CLEAR_PREVIEW_STORE,\n    }\n}\n\n\n\n\n","import * as actionTypes from './actionsTypes';\nimport axios from 'axios';\nimport { createNotification, loader } from '../../index';\n\n\n\n\n\n//######################################################\n//##################### przypomnienie hasła #######################\n//#######################################################\n\nexport const forgotPassFailed = (error) => {\n\n    let finalMessage = error.response.data.message;\n    let status = error.response.status;\n\n    /*\n    if(status >= 500){\n        createNotification('error',finalMessage);\n    } else {\n        createNotification('warning',finalMessage);\n    }\n    */\n\n    \n    return {\n        type: actionTypes.FORGOT_PASS_FAILED,\n        message: finalMessage,\n        resForgotPassStatus: status,\n    }\n}\n\nexport const forgotPassAction = (message, resStatus) => {\n\n    createNotification('success',message);\n\n    return {\n        type: actionTypes.FORGOT_PASS,\n        message: message,\n        resForgotPassStatus: resStatus,\n    }\n}\nexport const forgotPass = (emailaddr) => {\n    return dispatch => {\n        dispatch(startLoading());\n        axios.post('/auth/forgotPass',{email: emailaddr})\n        .then(response => {\n            dispatch(stopLoading());\n            dispatch(forgotPassAction(response.data.message, response.status));\n        })\n        .catch(error => {\n            console.log(error.response)\n            dispatch(stopLoading());\n            dispatch(forgotPassFailed(error));\n        });\n    }\n\n    \n}\n\n\n//######################################################\n//##################### rejestracja #######################\n//#######################################################\n\nexport const registerUserActionFailed = (error) => {\n\n    let finalMessage = error.response.data.message;\n    let status = error.response.status;\n\n    if(error.response.data.data.length >= 1) {\n        for(let i =0; i< error.response.data.data.length; i++){\n            finalMessage = finalMessage + '\\n';\n            finalMessage = finalMessage + error.response.data.data[i].msg;\n        }\n    }\n\n    /*\n    if(status >= 500){\n        createNotification('error',finalMessage);\n    } else {\n        createNotification('warning',finalMessage);\n    }\n    */\n\n    return {\n        type: actionTypes.REGISTER_FAILED,\n        message: finalMessage,\n        resRegistrationStatus: status,\n    }\n}\n\nexport const registerUserAction = (response) => {\n\n    const message = response.data.message;\n    const userId = response.data.userId;\n    const status = response.status;\n\n    createNotification('success',message);\n\n    return {\n        type: actionTypes.REGISTER,\n        message: message,\n        userId: userId,\n        resRegistrationStatus: status,\n    }\n}\nexport const registerUser = (userName, userEmail, userPass) => {\n    return dispatch => {\n        dispatch(startLoading());\n        axios.put('/auth/registration',{\n            name: userName,\n            email: userEmail,\n            password: userPass,\n        })\n        .then(response => {\n            dispatch(stopLoading());\n            dispatch(registerUserAction(response));\n        })\n        .catch(error => {\n            dispatch(stopLoading());\n            dispatch(registerUserActionFailed(error));\n        });\n    }    \n}\n\n\n\n\n//####################################################\n//######################### logowanie ################\n//####################################################\n\n\nexport const loginUserAction = (isAuth, token, authLoading, userId,userName,resStatus) => {\n   \n    //createNotification('success','Welcome '+userName);\n   \n    return {\n        type: actionTypes.LOG_IN,\n        isAuth: isAuth,\n        token: token,\n        authLoading: authLoading,\n        userId: userId,\n        userName: userName,\n        resLoginStatus: resStatus,\n\n    }\n}\n\nexport const loginUserActionFailed = (error) => {\n    \n    let finalMessage = error.response.data.message;\n    let status = error.response.status;\n\n   /*\n    if(status >= 500){\n        createNotification('error',finalMessage);\n    } else {\n        createNotification('warning',finalMessage);\n    }\n    */\n\n    return {\n        type: actionTypes.LOG_IN_FAILED,\n        isAuth: false,\n        authLoading: false,\n        message: finalMessage,\n        resLoginStatus: status,\n    }\n}\n\nexport const setAutoLogout = (aftermilliseconds) => {\n   // console.log('setAutoLogout! after:' + aftermilliseconds);\n    return {\n        type: actionTypes.SET_AUTO_LOGOUT,\n        autoLogoutAfter: aftermilliseconds,\n    }\n}\n\nexport const logout = () => {\n  //  console.log('LOG OUT');\n  createNotification('success','Zostałeś wylogowany!');\n    return {\n        type: actionTypes.LOG_OUT\n    }\n}\n\n// wywolywane pod odwiezeniu strony gdy token jest jeszcze w przegladarce\nexport const setLoggedIn = (userId, userName, token) => {\n    return loginUserAction(true,token,false,userId,userName)\n}\n\n\n\nexport const loginUser = (userEmail, userPass) => {\n\n    \n    return dispatch => {\n\n        dispatch(startLoading());\n        \n        axios.post('/auth/login',{\n            email: userEmail,\n            password: userPass\n        }).then(response => {\n          \n            dispatch(stopLoading());\n\n            if(response.status === 422){\n                throw new Error('Validation failed.');\n            }\n\n            if(response.status === 404){\n              \n                throw new Error('Page not found')\n            }\n\n            if(response.status !== 200 & response.status !== 201){\n                throw new Error('Could not authenticate')\n            }\n\n\n           // console.log(response);\n            //ustawic state na auth false i authloading na false\n            //przekierowanie\n            \n            localStorage.setItem('token',response.data.token);\n            localStorage.setItem('userId', response.data.userId);\n            localStorage.setItem('userName', response.data.userName);\n\n            dispatch(loginUserAction(true, response.data.token,false,response.data.userId,response.data.userName, response.status));\n\n            //gasnie za 10h\n            const remainingMilliseconds = 60 * 60 * 10000;\n            const expiryDate = new Date(\n                new Date().getTime() + remainingMilliseconds\n            );\n            localStorage.setItem('expiryDate', expiryDate.toISOString());\n            dispatch(setAutoLogout(remainingMilliseconds));\n            //this.props.history.replace('/projectsList');\n\n        })\n        .catch(error => {\n            dispatch(stopLoading());\n\n            dispatch(loginUserActionFailed(error));\n        });\n    }\n   \n}\n\n\n\n//####################################################\n//######################### preloader ################\n//####################################################\n\nexport const startLoading = () => {\n    return {\n        type: actionTypes.START_LOADING,\n    }\n}\n\nexport const stopLoading = () => {\n    \n    return {\n        type: actionTypes.STOP_LOADING,\n    }\n}","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './LoginArea.css';\nimport {withRouter, Link} from 'react-router-dom';\n//import {FormattedMessage} from 'react-intl';\nimport {connect} from 'react-redux';\n//import * as actionTypes from '../../../store/actions/actionsTypes';\nimport Input from '../../../components/UI/Input/Input';\nimport * as authActions from '../../../store/actions/index';\nimport {loader} from '../../../index';\n\n\nclass LoginArea extends Component {\n\n    state = {\n        loginform: {\n            loginemail: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Podaj swój email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            loginpass: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Wpisz hasło'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 7\n                },\n                valid: false,\n                touched: false\n            },\n        },\n\n        forgotPassForm: {\n            forgotPassEmail: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Podaj swój email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n        },\n\n\n        registerform: {\n            registerName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Podaj swoje imie'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 3\n                },\n                valid: false,\n                touched: false\n            },\n            registeremail: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Podaj swój email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            registerpass: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Wpisz hasło'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 7\n                },\n                valid: false,\n                touched: false\n            },\n        },\n\n        loginFormIsValid:false,\n        forgotPassFormIsValid: false,\n        registerFormIsValid: false,\n        firstTimeAfterLogin: false,\n\n        showRemindPassView: false,\n\n    }\n\n\n    //simple validator....\n    checkValidity(value, rules){\n        let isValid = true;\n\n       \n        if(rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength  && isValid;\n        }\n\n        return isValid;\n\n    }\n\n    forgotPassHandler = (event) => {\n        event.preventDefault();\n       let emailaddr = this.state.forgotPassForm.forgotPassEmail.value;\n       this.props.onForgotPass(emailaddr);\n\n    }\n\n    loginHandler = (event) => {\n        event.preventDefault();\n\n        //I am transforming the state to more compact form\n        let loginData = {};\n        for (let formLoginElement in this.state.loginform) {\n            loginData[formLoginElement] = this.state.loginform[formLoginElement].value;\n        }\n\n        this.props.onLogIn(loginData.loginemail, loginData.loginpass);\n\n        \n    }\n\n    registerHandler = (event) => {\n\n        event.preventDefault();\n\n        //I am transforming the state to more compact form\n        let registerData = {};\n        for (let formRegisterElement in this.state.registerform) {\n            registerData[formRegisterElement] = this.state.registerform[formRegisterElement].value;\n        }\n\n        this.props.onRegister(registerData.registerName, registerData.registeremail, registerData.registerpass);        \n    }\n\n\n    //updated at every input in register form\n    inputRegisterChangedHandler = (event) => {\n\n        const updatedRegisterForm = {\n            ...this.state.registerform\n        }\n\n        switch(event.target.name){\n            case 'registerName':\n                //immutable update\n                const updatedRegisterName = {\n                    ...updatedRegisterForm.registerName\n                }\n                updatedRegisterName.value = event.target.value;\n                updatedRegisterName.valid = this.checkValidity(updatedRegisterName.value, updatedRegisterName.validation);\n                updatedRegisterName.touched = 1;\n                //assembling back after update\n                updatedRegisterForm.registerName = updatedRegisterName;\n\n                break;\n            case 'registerEmail':\n                //immutable update\n                const updatedRegisterEmail = {\n                    ...updatedRegisterForm.registeremail\n                }\n                updatedRegisterEmail.value = event.target.value;\n                updatedRegisterEmail.valid = this.checkValidity(updatedRegisterEmail.value, updatedRegisterEmail.validation);\n                updatedRegisterEmail.touched = 1;\n                //assembling back after update\n                updatedRegisterForm.registeremail = updatedRegisterEmail;\n\n                break;\n            case 'registerPass':\n\n                const updatedregisterPass = {\n                    ...updatedRegisterForm.registerpass\n                }\n                updatedregisterPass.value = event.target.value;\n                updatedregisterPass.valid = this.checkValidity(updatedregisterPass.value, updatedregisterPass.validation);\n                updatedregisterPass.touched = 1;\n                updatedRegisterForm.registerpass = updatedregisterPass;\n                break;\n        }\n\n        //sprawdzam czy cały formularz jest poprawny\n        let formIsValid = true;\n        for (let inputField in updatedRegisterForm){\n            formIsValid = updatedRegisterForm[inputField].valid && formIsValid;\n        }\n    \n        this.setState({registerform: updatedRegisterForm, registerFormIsValid: formIsValid});\n    }\n\n    //updated at every input in forgotPass form\n    inputForgotPassChangedHandler = (event) => {\n        const updatedForgotForm = {\n            ...this.state.forgotPassForm\n        }\n\n        switch(event.target.name){\n            case 'forgotPassEmail':\n\n               //immutable update\n                const updatedforgotPassEmail = {\n                    ...updatedForgotForm.forgotPassEmail\n                }\n                updatedforgotPassEmail.value = event.target.value;\n                updatedforgotPassEmail.valid = this.checkValidity(updatedforgotPassEmail.value, updatedforgotPassEmail.validation);\n                updatedforgotPassEmail.touched = 1;\n                //assembling back after update\n                updatedForgotForm.forgotPassEmail = updatedforgotPassEmail;\n                break;\n        }\n\n        //sprawdzam czy cały formularz jest poprawny\n        let formIsValid = true;\n        for (let inputField in updatedForgotForm){\n            formIsValid = updatedForgotForm[inputField].valid && formIsValid;\n        }\n\n        this.setState({forgotPassForm: updatedForgotForm, forgotPassFormIsValid: formIsValid});\n\n\n    }\n\n\n    //updated at every input in login form\n    inputLoginChangedHandler = (event) => {\n\n        const updatedLoginForm = {\n            ...this.state.loginform\n        }\n\n        switch(event.target.name){\n            case 'loginEmail':\n\n               //immutable update\n                const updatedLoginEmail = {\n                    ...updatedLoginForm.loginemail\n                }\n                updatedLoginEmail.value = event.target.value;\n                updatedLoginEmail.valid = this.checkValidity(updatedLoginEmail.value, updatedLoginEmail.validation);\n                updatedLoginEmail.touched = 1;\n                //assembling back after update\n                updatedLoginForm.loginemail = updatedLoginEmail;\n                break;\n            case 'loginPass':\n\n                const updatedLoginPass = {\n                    ...updatedLoginForm.loginpass\n                }\n                updatedLoginPass.value = event.target.value;\n                updatedLoginPass.valid = this.checkValidity(updatedLoginPass.value, updatedLoginPass.validation);\n                updatedLoginPass.touched = 1;\n                //assembling back after update\n                updatedLoginForm.loginpass = updatedLoginPass;\n                break;\n        }\n\n        //sprawdzam czy cały formularz jest poprawny\n        let formIsValid = true;\n        for (let inputField in updatedLoginForm){\n            formIsValid = updatedLoginForm[inputField].valid && formIsValid;\n        }\n\n\n        console.log(formIsValid)\n\n        this.setState({loginform: updatedLoginForm, loginFormIsValid: formIsValid});\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n\n        //sprawdzam czy jestesmy zalogowaniu poraz pierwszy\n        //jezeli tak to przechodzimy do listy projektow\n        if (this.props.isAuth !== prevProps.isAuth) {\n            //this.props.history.push(\"/projectsList\");\n        }\n      }\n\n      logOutHandler = () => {\n        this.props.onLogOut();\n        this.props.history.push(\"/\");\n      }\n\n      showLoginAreaBack = (e) => {\n        e.preventDefault();\n         \n        this.setState({showRemindPassView: false});\n      }\n\n      forgotPass = (e) => {\n          e.preventDefault();\n         \n          this.setState({showRemindPassView: true});\n      }\n\n      \n\n    \n    render() {\n       \n        let myclasses = [\"container-fluid\", \"LoginArea\"];\n\n        // ######### formatowanie informacji po zalogowaniu się ########\n        let messageForLogin = '';\n        if(this.props.isAuth==false){\n            messageForLogin = 'Zaloguj się';\n        } else {\n            messageForLogin = 'Jesteś zalogowany jako:';\n        }\n\n\n        // ######### formatowanie informacji error Register ########\n        let errorRegisterInfo = null;\n        if(this.props.resRegistrationStatus === 201 || this.props.resRegistrationStatus === 200){\n            errorRegisterInfo = (\n                <div className=\"alert alert-success\" role=\"alert\">\n                     {this.props.registrationMessage}\n                </div>\n            )\n        } else if(this.props.resRegistrationStatus !== 0){\n                 errorRegisterInfo = (\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                         {this.props.registrationMessage}\n                    </div>\n                )\n        }\n\n\n        // ######### formatowanie informacji error Login ########\n        let errorLoginInfo = null;\n        if(this.props.resLoginStatus === 201 || this.props.resLoginStatus === 200){\n            errorLoginInfo = (\n                <div className=\"alert alert-success\" role=\"alert\">\n                     {this.props.loginMessage}\n                </div>\n            )\n        } else if(this.props.resLoginStatus !== 0){\n\n            let message = this.props.loginMessage;\n\n            if(typeof message === 'undefined' || message === null){\n                errorLoginInfo = (\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                         Wystąpił problem z serwerem\n                    </div>\n                )\n            } else {\n                errorLoginInfo = (\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                         {message}\n                    </div>\n                )\n            }\n        }\n\n\n         // ######### formatowanie informacji forgot Pass########\n        let errorForgotPassInfo = null;\n        /*\n        if(this.props.resForgotPassStatus === 201 || this.props.resForgotPassStatus === 200){\n            errorForgotPassInfo = (\n                <div className=\"alert alert-success\" role=\"alert\">\n                     {this.props.forgotPassMessage}\n                </div>\n            )\n        } else if(this.props.resForgotPassStatus !== 0){\n\n            let message = this.props.forgotPassMessage;\n\n            if(typeof message === 'undefined' || message === null){\n                errorForgotPassInfo = (\n                    <div className=\"alert alert-danger\" role=\"alert\">\n                         Wystąpił problem z serwerem\n                    </div>\n                )\n            } else {\n                errorForgotPassInfo = (\n                    <div className=\"alert alert-warning\" role=\"alert\">\n                         {message}\n                    </div>\n                )\n            }\n        }\n        */\n\n        \n\n        const registerArea = (\n            <div className=\"col\" key=\"a1\">\n                            \n                            <h3>Zarejestruj się</h3>\n                           \n                            {\n                               // this.props.registrationMessage !== ''?\n                               // errorRegisterInfo : null\n                            }\n                             \n                            <form onSubmit={this.registerHandler}>  \n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"text\"\n                                        label=\"Imie\"\n                                        placeholder=\"Podaj swoje imie\"\n                                        name=\"registerName\"\n                                        touched = {this.state.registerform.registerName.touched}\n                                        invalid={!this.state.registerform.registerName.valid}\n                                        whenchanged={(event) => this.inputRegisterChangedHandler(event)}/>\n                                </div> \n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"text\"\n                                        label=\"Adres Email\"\n                                        placeholder=\"Podaj adres email\"\n                                        name=\"registerEmail\"\n                                        touched = {this.state.registerform.registeremail.touched}\n                                        invalid={!this.state.registerform.registeremail.valid}\n                                        whenchanged={(event) => this.inputRegisterChangedHandler(event)}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"password\"\n                                        label=\"Hasło\"\n                                        placeholder=\"Podaj hasło\"\n                                        name=\"registerPass\"\n                                        touched = {this.state.registerform.registerpass.touched}\n                                        invalid={!this.state.registerform.registerpass.valid}\n                                        whenchanged={(event) => this.inputRegisterChangedHandler(event)}/>\n                                </div>\n                                \n                                <button disabled={!this.state.registerFormIsValid} className=\"btn btn-primary\">\n                                    Zarejestruj się\n                                </button>\n                            </form>\n                               \n             </div>\n        );\n\n        const forgotPassArea = (\n            <div className=\"col\" key=\"a5\">\n                            \n                            {\n                            !this.props.isAuth?\n                            \n                            <form onSubmit={this.forgotPassHandler}> \n                              \n                                <h3>Przypomnienie hasła</h3>\n                                \n                                {\n                                  //  this.props.forgotPassMessage !== ''?\n                                  //  errorForgotPassInfo: null \n                                }\n\n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"text\"\n                                        label=\"Adres Email\"\n                                        placeholder=\"Wpisz adres email\"\n                                        name=\"forgotPassEmail\"\n                                        touched = {this.state.forgotPassForm.forgotPassEmail.touched}\n                                        invalid={!this.state.forgotPassForm.forgotPassEmail.valid}\n                                        whenchanged={(event) => this.inputForgotPassChangedHandler(event)}/>\n                                </div>\n    \n                                <button disabled={!this.state.forgotPassFormIsValid} className=\"btn btn-primary\" >\n\n                                    Wyślij email z linkiem do zresetowania hasła\n                                    \n                                </button>\n\n                                <br></br>\n                                <br></br>\n\n                                <a href=\"#\" onClick={this.showLoginAreaBack}>Zaloguj się</a>\n\n                             \n                            </form>   \n                            \n                            : \n                            \n                            <div>\n\n                                <h4>Witaj: <span className=\"loggedAs\">{this.props.userName}</span></h4>\n\n                                <Link to=\"/projectsList\">\n                                    <button className=\"btn btn-primary btn-lg btn-block gotoprojects\">\n                                        Przejdź do listy swoich korpusów\n                                    </button>\n                                </Link>\n\n                                <div> lub </div>\n\n                                <button \n                                    className=\"btn btn-secondary\"\n                                    onClick={this.logOutHandler}>\n\n                                    Wyloguj się\n                                \n                                </button>\n\n                            </div>\n\n                            }\n                                \n            </div>\n        );\n\n        const loginArea = (\n            <div className=\"col\" key=\"a2\">\n                            \n                            {\n                            !this.props.isAuth?\n                            \n                            <form onSubmit={this.loginHandler}> \n                              \n                                <h3>Zaloguj się</h3>\n                                \n                                {\n                                    \n                                    //this.props.loginMessage !== ''? createNotification('warning', this.props.loginMessage) : null\n                                   // this.props.loginMessage != ''? errorLoginInfo: null\n                                   // errorLoginInfo: null \n                                }\n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"text\"\n                                        label=\"Adres Email\"\n                                        placeholder=\"Wpisz adres email\"\n                                        name=\"loginEmail\"\n                                        touched = {this.state.loginform.loginemail.touched}\n                                        invalid={!this.state.loginform.loginemail.valid}\n                                        whenchanged={(event) => this.inputLoginChangedHandler(event)}/>\n                                    \n                                </div>\n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"password\"\n                                        label=\"Hasło\"\n                                        placeholder=\"Podaj hasło\"\n                                        name=\"loginPass\"\n                                        touched = {this.state.loginform.loginpass.touched}\n                                        invalid={!this.state.loginform.loginpass.valid}\n                                        whenchanged={(event) => this.inputLoginChangedHandler(event)}/>\n                                </div>\n                            \n                              \n                                    <button disabled={!this.state.loginFormIsValid} className=\"btn btn-primary\" >\n\n                                        Zaloguj się\n                                       \n                                    </button>\n\n                                    <br></br>\n                                    <br></br>\n\n                                    <a href=\"#\" onClick={this.forgotPass}>Zapomniałem hasła</a>\n                            </form>   \n                            \n                            : \n                            \n                            <div>\n\n                                <h4>Witaj: <span className=\"loggedAs\">{this.props.userName}</span></h4>\n                                <p>Jeżeli chcesz skorzystać z usług z lini poleceń, użyj poniższego klucza API (czytaj więcej <a href=\"/docs/api.html\" target=\"_blank\">TUTAJ</a>):</p>\n                                <p style={{fontSize:'10px'}}><b>{this.props.userToken}</b></p>\n                                <p>Jeżeli chcesz skorzystać z interfejsu graficznego</p>\n\n                                <Link to=\"/projectsList\">\n                                    <button className=\"btn btn-primary btn-lg btn-block gotoprojects\">\n                                        Przejdź do listy swoich korpusów\n                                    </button>\n                                </Link>\n\n                                <div> lub </div>\n\n                                <button \n                                    className=\"btn btn-secondary\"\n                                    onClick={this.logOutHandler}>\n\n                                    Wyloguj się\n                                \n                                </button>\n\n                            </div>\n\n                            }\n                                \n                        </div>\n        );\n\n        let loginAndForgot = null;\n\n        if(this.state.showRemindPassView){\n\n            loginAndForgot = forgotPassArea;\n     \n        } else {\n            loginAndForgot = loginArea;\n        }\n        \n     \n        return(\n            <Aux>\n\n                {\n                    this.props.isLoading ? loader(): null\n                }\n                <div className={myclasses.join(' ')}>\n                    <div className=\"container\">\n\n                        <div className=\"row\">\n\n                            <div className=\"col\">\n                                {this.props.isAuth? null : <p style={{textAlign:'center'}}>Aby skorzystać z serwisu należy być zalogowanym. Załóż konto poniżej</p>\n                                //  <div className=\"alert alert-info\" role=\"alert\">\n                                //      Aby skorzystać z serwisu należy się zarejestrować\n                                // </div>\n                                }\n                                  \n                            </div>\n                            \n                                        \n                        </div>\n                        \n                        <div className=\"row\">\n                            \n                            {this.props.isAuth? loginArea : \n                                [registerArea, loginAndForgot]}\n                                                \n                        </div>\n                    </div>\n                </div>\n            </Aux>\n        );\n    }\n   \n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.homeR.isAuth,\n        userToken: state.homeR.token,\n        loggedEmail: state.homeR.email,\n        userName: state.homeR.userName,\n        registrationMessage: state.homeR.registrationMessage,\n        loginMessage: state.homeR.loginMessage,\n        resRegistrationStatus: state.homeR.resRegistrationStatus,\n        resLoginStatus: state.homeR.resLoginStatus,\n        forgotPassEmailSent: state.homeR.forgotPassEmailSent,\n        resForgotPassStatus: state.homeR.resForgotPassStatus,\n        forgotPassMessage: state.homeR.forgotPassMessage,\n\n        isLoading: state.homeR.isLoading,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onForgotPass: (emailaddr) => dispatch(authActions.forgotPass(emailaddr)),\n        onLogIn: (email, pass) => dispatch(authActions.loginUser(email, pass)),\n        onRegister: (userName, userEmail, userPass) => dispatch(authActions.registerUser(userName, userEmail, userPass)),\n        onLogOut: () => dispatch(authActions.logout())\n   \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LoginArea));","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './DecoIntro.css';\n\nconst decointro = (props) => {\n\n    let myclasses = [\"container-fluid\", \"DecoIntro\"];\n\n    let btnclasses = [\"btn\", \"btn-secondary\",  \"btn-lg btn-block\", \"introButton\"];\n\n    return(\n        <Aux>\n            <div className=\"container-fluid\">\n                \n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <a href=\"#mowa\" className={btnclasses.join(' ')}>\n                                    Wsparcie w transkrypcji kolekcji plików audio\n                            </a>\n                            <a href=\"#pliki\" className={btnclasses.join(' ')}>\n                                    Tworzenie korpusów audio\n                            </a>\n                        </div>\n                        <div className=\"col\">\n                            <a href=\"#bezpieczenstwo\" className={btnclasses.join(' ')}>\n                                    Bezpieczeństwo danych\n                            </a>\n                            <a href=\"#latwosc\" className={btnclasses.join(' ')}>\n                                    Łatwość obsługi\n                            </a>\n                        </div>\n                    </div>\n                </div> \n            </div>\n            <div className={myclasses.join(' ')}>\n                <div className=\"container\">\n                    \n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default decointro;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './HomeText.css';\n\nconst hometext = (props) => {\n\n    let myclasses = [\"container\", \"HomeText\"];\n    return(\n        <Aux>\n            <div className={myclasses.join(' ')}>\n                <div className=\"row\">\n                    <dir className=\"col\" >\n                        <h3 id=\"mowa\">Automatycza transkrypcja nagrań</h3>\n                        <p>Serwis udostępnia narzędzia do rozpoznawania oraz segmentacji nagrań zawierających mowę. Robi to w sposób automatyczny, wyręczając użytkownika w dokonywaniu transkrypcji w sposób manualny. Istnieje możliwość przetwarzania wsadowego, wielu plików jednocześnie. Użytkownik posiada możliwość dokonywania ręcznych korekt transkrypcji automatycznych bądź tworzenia transkrypcji zupełnie manualnie w sposób zoptymalizowany i bez potrzeby odrywania rąk od klawiatury!</p>\n\n                        <h3 id=\"pliki\">Tworzenie korpusów audio</h3>\n                        <p>Swoje zasoby dźwiękowe możesz przechowywać w centralnym repozytorium plików, dostępnym tylko dla Ciebie po zalogowaniu. W każdym momencie możesz usunąć pliki z serwera bądź pobrać je na dysk twardy.\n                        Portal umożliwia tworzenie korpusów, gotowych do dalszej analizy w środowisku EMU-SDMD do badań naukowych.</p>\n                    </dir>\n                    <dir className=\"col\" id=\"bezpieczenstwo\">\n                        <h3 id=\"bezpieczenstwo\">Bezpieczeństwo danych</h3>\n                        <p>Twoje pliki są chronione specjalnym kluczem zabezpieczeń, a dostęp do nich jest możliwy tylko dla zalogowanych użytkowników.</p>\n                        \n                        <h3 id=\"latwosc\">Łatwość obsługi</h3>\n                        <p>Serwis został tak zaprojektowany aby w maksymalny sposób ułatwić jego obsługę. Nawigacja w serwisie nie powinna sprawiać żadnego problemu. Interfejs użytkownika przewiduje dostępność wszystkich funkcjonalności w jednym miejscu, bez konieczności nawigowania w strukturze serwisu.</p>\n                    </dir>\n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default hometext;","import React from 'react';\nimport Aux from '../../hoc/Auxiliary';\nimport './AppFooter.css';\n//import { FormattedMessage } from 'react-intl';\nimport moment from 'moment';\n\nconst appfooter = (props) => {\n\n    let myclasses = [\"text-muted\", \"container-fluid\", \"AppFooter\"];\n    return (\n        <Aux>\n            <footer className={myclasses.join(' ')}>\n                <div className=\"container\">\n\n                    <div>\n                        CLARIN-PL {moment().format('YYYY')}\n                    </div>\n                    <div className=\"contactInfo\">\n                        <div>Main developers: Danijel Korzinek (speech services): danijel@pjwstk.edu.pl, Mariusz Kleć (front-end and back-end of the web): mklec@pjwstk.edu.pl </div>\n                    </div>\n                </div>\n            </footer>\n        </Aux>\n    );\n}\n\nexport default appfooter;","import React, { Component } from 'react';\nimport './TopBar.css';\n//import logoBig from '../../images/logo-clarin-pl.png';\nimport logoShort from '../../images/logo-clarin-pl-short.png';\nimport { Link } from 'react-router-dom';\n//import { FormattedMessage } from 'react-intl';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faReply, faQuestion, faTerminal } from '@fortawesome/free-solid-svg-icons';\nimport EditableLabel from 'react-inline-editing';\n//import { render } from 'react-dom';\nimport { connect } from 'react-redux';\nimport * as projectListActions from '../../store/actions/projectsList';\n\nclass topBar extends Component {\n\n  \n    _handleFocus = (text) => {\n       // console.log('Focused with text: ' + text);\n    }\n\n    _handleFocusOut = (text) => {\n       // console.log('Left editor with text: ' + this.props.projectID + \" \" + text + \" \" + this.props.userId + \" \" + this.props.token);\n       this.props.onChangeProjectName(this.props.projectID, text, this.props.userId, this.props.token);\n    }\n\n    render() {\n\n            //czy poczatkowa wersja topbara czy rozbudowana....\n        let czyInit = this.props.version === \"init\" ? true : false;\n\n        //definicja klas na topbar\n        let navClassNames = [\"TopBar\", \"navbar\", \"navbar-expand\"];\n        if (czyInit) navClassNames.push(\"init\");\n\n        return (\n\n\n            <nav className={navClassNames.join(' ')}>\n    \n                {\n                    //czy szeroki topBar czy nie\n                }\n                <div className={this.props.wide === \"no\" ? \"container\" : \"container-fluid\"}>\n    \n                    {\n                        //kliknięcie w logo\n                    }\n                    <Link to=\"/\" className=\"navbar-brand\" onClick={this.props.clickLogo}>\n                        <div className=\"logoPlace\">\n                            <img src={czyInit ? logoShort : logoShort} alt=\"clarin-logo\" className=\"logo\" />\n                        </div>\n                    </Link>\n    \n    \n                    {\n                        //czy wyświetlać info o projekcie\n                    }\n                    <div className=\"projectTitleEdit\">\n                        {czyInit ? null : (\n                            <div>\n                                <div style={{float: 'left'}}>\n                                    <Link to=\"/projectsList\">\n                                        <FontAwesomeIcon icon={faReply} className=\"faIcon\" />\n                                        <i className={[\"fas\", \"fa-arrow-left\"].join(' ')}></i>\n                                    </Link>\n                                </div>\n                                \n                                <div style={{float: 'left'}}>\n                                    <EditableLabel text={this.props.projectName}\n                                        labelClassName='myLabelClass'\n                                        inputClassName='myInputClass'\n                                        inputWidth='200px'\n                                        isEditing={false}\n                                        inputHeight='25px'\n                                        inputMaxLength={80}\n                                        onFocus={this._handleFocus}\n                                        onFocusOut={this._handleFocusOut}\n                                    />\n                                </div>\n    \n                               \n                                {\n                                    /*\n\n                                     <span className=\"editField\">{this.props.projectTitle}</span>\n                                        <a href=\"#\"><i className={[\"fas\", \"fa-edit\"].join(' ')}></i></a>\n                                    */\n                                }\n    \n                            </div>\n                        )}\n                    </div>\n    \n    \n    \n    \n                    <ul className=\"navbar-nav\">\n    \n    \n                        {\n                            /*\n                          \n                          <li className={[\"nav-item\", \"dropdown\"].join(' ')}>\n                          <a  className={[\"nav-link\", \"dropdown-toggle\", \"navLink\"].join(' ')} \n                              href=\"#\" \n                              id=\"navbarDropdownMenuLinkjezyk\" \n                              role=\"button\" \n                              data-toggle=\"dropdown\" \n                              aria-haspopup=\"true\" \n                              aria-expanded=\"false\">\n                              <i className={[\"fas\", \"fa-globe-europe\"].join(' ')}></i> {props.currLn}\n                          </a>\n                          <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLinkjezyk\">\n                              <a className=\"dropdown-item\" onClick={()=> props.changeLn(\"pl\")}>PL</a>\n                              <a className=\"dropdown-item\" onClick={() => props.changeLn(\"en\")}>EN</a>\n                          </div>\n                          </li>\n                              */\n                        }\n    \n                        {\n                            // pomoc \n                        }\n\n                        \n\n                        <li className=\"nav-item\">\n                            <a href={process.env.PUBLIC_URL + '/apidoc/index.html'} \n                                    target=\"_blank\" \n                                    id=\"navbarDropdownMenuLinkpomoc\" \n                                    className={[\"nav-link\", \"navLink\"].join(' ')}>\n                                    <FontAwesomeIcon icon={faTerminal} className=\"faIcon\" /> API doc\n                            </a>\n                        </li>\n    \n                        <li className=\"nav-item\">\n                            {\n                                /*\n                            <Link to=\"/help\" className={[\"nav-link\", \"navLink\"].join(' ')}\n    \n                                id=\"navbarDropdownMenuLinkpomoc\"\n                                role=\"button\"\n                                aria-haspopup=\"true\"\n                                aria-expanded=\"false\">\n    \n                                <i className=\"fas fa-question-circle\"></i>\n    \n                                Pomoc\n    \n                            </Link>\n                                */\n                            }\n                            \n\n                            \n    \n                            <a href={process.env.PUBLIC_URL + '/docs/doc.html'} \n                                target=\"_blank\" \n                                id=\"navbarDropdownMenuLinkpomoc\" \n                                className={[\"nav-link\", \"navLink\"].join(' ')}>\n                                <FontAwesomeIcon icon={faQuestion} className=\"faIcon\" /> Pomoc\n                            </a>\n    \n                  \n                        </li>\n    \n    \n                        {\n                            // konto \n    \n    \n                            /*\n            \n                            { czyInit ? null : (\n                            <li className=\"nav-item\">\n                                <a className={[\"nav-link\", \"navLink\"].join(' ')}\n                                   href=\"#\" \n                                   id=\"navbarDropdownMenuLinkkonto\" \n                                   role=\"button\" \n                                   aria-haspopup=\"true\" \n                                   aria-expanded=\"false\">\n                                   <i className=\"fas fa-user-circle\"></i> \n                                    \n                                   <FormattedMessage\n                                        id=\"TopBar.konto\"\n                                        defaultMessage=\" Konto\"\n                                        />\n                                        \n                                        </a>\n                            </li>\n                            )}\n                                    */\n    \n                        }\n                    </ul>\n    \n                </div>\n    \n            </nav>\n        );\n    }   \n}\n\n\nconst mapStateToProps = state => {\n\treturn {\n        projectName: state.projectR.currentProjectName,\n        token: state.homeR.token,\n        projectID: state.projectR.currentProjectID,\n        userId: state.projectR.currentProjectOwner,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\t // onLoadAudioForPreview: (container, toolType, token) => dispatch(audioEditorActions.loadAudioForPreview(container, toolType, token)),\n         // onLoadBinaryForPreview: (container, toolType, token) => dispatch(audioEditorActions.loadBinaryForPreview(container, toolType, token)),\n\t\t//onOpenModalHandler: () => dispatch(segmentActions.openModalProject()),\n       // onCloseModalHandler: () => dispatch(segmentActions.closeModalProject()),\n       onChangeProjectName: (projectId, newName, userId, token) => dispatch(projectListActions.editName(projectId, newName, userId, token))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(topBar);","import React from 'react';\nimport Jumbotron from './Jumbotron/Jumbotron';\nimport LoginArea from './LoginArea/LoginArea';\nimport DecoIntro from './DecoIntro/DecoIntro';\nimport HomeText from './HomeText/HomeText';\nimport AppFooter from '../../components/AppFooter/AppFooter';\nimport TopBar from '../../components/TopBar/TopBar';\nimport Aux from '../../hoc/Auxiliary';\n\nconst homePage = (props) => {\n    \n    return(\n        <Aux>\n            <TopBar  \n                version=\"init\" \n                wide=\"no\" \n                language=\"pl\" \n                projectTitle=\"\"\n                changeLn = {props.changeLn}\n                currLn = {props.currLn}\n                 />\n            <Jumbotron />\n\n             <LoginArea />\n          \n           \n            <DecoIntro />\n            <HomeText />\n            <AppFooter />\n        </Aux>\n    );\n}\n\n\n\nexport default homePage;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './SettingBar.css';\n\nconst settingBar = (props) => {\n    return(\n        <Aux>\n            <div className={\"SettingBar\"}>\n                <nav className=\"navbar navbar-expand-lg\">\n                    <div className=\" navbar-collapse\">\n                    \n                        {\n                            //TO DO\n                        }\n\n                    </div>\n                </nav>\n            </div>\n        </Aux>\n    );\n}\n\nexport default settingBar;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './FooterTool.css';\nimport moment from 'moment';\n\nconst footerTool = (props) => {\n    return(\n        <Aux>\n            <div className=\"FooterTool\">\n                \n                <div>\n                CLARIN-PL {moment().format('YYYY')}\n                </div>\n                <div className=\"contactInfo\">\n                    Main developers: <br></br>\n                    Danijel Korzinek: danijel@pjwstk.edu.pl<br></br>\n                    Mariusz Kleć: mklec@pjwstk.edu.pl<br></br>\n                </div>\n                \n                \n            </div>\n        </Aux>\n    );\n}\n\nexport default footerTool;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './LeftSiteBar.css';\n\n\nconst leftSiteBar = (props) => {\n\n    return(\n        <Aux>\n\n            <div className=\"LeftSiteBar\" id=\"LeftSiteBar\">\n\t\t\t\t<div className={props.czyTopPart===\"true\" ? \"topPart\" : \"resetTopPart\"}>\n\t\t\t\t\t\n\t\t\t\t</div>\n\n                <div className={props.czyTopPart===\"true\" ? \"hintPanel\" : \"resetHintPanel\"}>\n                            <div className=\"btn-group-vertical btn-block\" id=\"hint-buttons\">\n\n                                {props.children}\n\n                            </div>\n\n                            <div id=\"hint-content\"  data-scrollbar>\n                                <div className=\"container-fluid texts\">\n                                    {props.desc} \n                                </div> \n                            </div>\n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default leftSiteBar;","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport SettingBar from '../SettingBar/SettingBar';\nimport './Dashboard.css';\nimport FooterTool from '../FooterTool/FooterTool';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\nimport { connect } from 'react-redux';\nimport {withRouter, Link } from 'react-router-dom';\n//import {bytesToSize} from '../../../utils/utils';\n\nclass Dashboard extends Component {\n\n      \n\n    render(){\n\n        //let liczbaPlikowRepo = this.props.repoFiles.length;\n        let liczbaPlikowRepo = 0;\n        let miejscePlikowRepo = 0;\n       // this.props.repoFiles.map(file => {\n       //     return miejscePlikowRepo = miejscePlikowRepo + file.size;\n       // });\n\n        return(\n            <Aux>\n    \n                <LeftSiteBar \n                    czyTopPart=\"true\"\n                    desc=\"W tym miejscu znajdują się statystyki aktualnie wykonywanych usług oraz przestrzeni zajmowanej przez wgrane pliki do repozytorium.\" />\n    \n                <SettingBar />\n    \n    \n                <section className={\"Content\"} data-scrollbar>\n    \n                    <div className={[\"container-fluid\", \"Dashboard\"].join(' ')}>\n                    <div className=\"tool-desc\">\n\n                       \n                        \n                    </div>\n    \n                    <div className=\"tool-body\">\n    \n                    \n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"card mb-3\">\n                                    <div className={[\"card-header\", \"cardHeader\"].join(' ')}>Aktualności</div>\n                                    <div className=\"card-body text-dark\">\n                                    <h5 className=\"news-title\">Wersja beta nowego serwisu </h5>\n                                    <div className=\"news-date\">01.07.2020</div>\n                                    <p className=\"news-body\">\n                                        Miło nam przywitać Cię w panelu nowego serwisu. <b>Wszelkie uwagi na temat jego funkcjonowania </b> są mile widziane. Skontaktuj się z nami jeżeli masz jakiekolwiek pytania:\n                                    </p>\n                                    <p>\n                                    Danijel Korzinek: danijel@pjwstk.edu.pl <br></br>\n                                    Mariusz Kleć: mklec@pjwstk.edu.pl\n                                    </p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n\n                                <div className=\"card mb-3\">\n                                    <div className={[\"card-header\", \"cardHeader\"].join(' ')}>Szybkie linki</div>\n                                    <div className=\"card-body text-dark\">\n                                      \n                                      <p> \n                                        <Link to={this.props.location.pathname.replace('dashboard','recognition')}>\n                                            <button type=\"button\" className=\"btn btn-primary btn-block op-btn\">\n                                                <i className=\"fas fa-comments\"></i> Rozpoznawanie mowy\n                                            </button>\n                                        </Link>\n                                      </p>\n                                      <p>\n                                        <Link to={this.props.location.pathname.replace('dashboard','segment')}>\n                                            <button type=\"button\" className=\"btn btn-primary btn-block op-btn\">\n                                                <i className=\"fas fa-cogs\"></i> Segmentacja</button>\n                                        </Link>\n                                      </p>\n                                      <p>\n                                        <Link to=\"/help\"> \n                                             <button type=\"button\" className=\"btn btn-primary btn-block op-btn\"><i className=\"fas fa-question-circle\"></i> Pomoc</button>\n                                        </Link>\n                                     </p>\n                                    </div>\n                                </div>\n\n                                {\n\n                              /*\n                                <div className=\"card mb-3\">\n                                    <div className={[\"card-header\", \"cardHeader\"].join(' ')}>Aktualnie działające procesy</div>\n                                    <div className=\"card-body text-dark\">\n    \n                                    <div className=\"row mb-3\">\n                                        <div className=\"col\">\n                                            <h5 className=\"news-title\">Rozpoznawanie:</h5>\n                                            <p>Całkowita licza plików w kolejce: ({this.props.containersForREC.length})</p>\n                                            \n                                            {\n                                             \n                                            //<p>Procent przetworzonych plików:</p>\n                                            //<div className=\"progress\">\n                                            //    <div className=\"progress-bar\" role=\"progressbar\"  aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">25%</div>\n                                            //</div>\n                                                \n                                            }\n                                            \n                                        </div>\n                                    </div>\n    \n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <h5 className=\"news-title\">Segmentacja:</h5>\n                                            <p>Całkowita licza plików w kolejce: (\n                                                {this.props.containersForSEG.length}))</p>\n                                            {\n                                                \n                                              //  <p>Procent przetworzonych plików:</p>\n                                               // <div className=\"progress\">\n                                               //     <div className=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"15\" aria-valuemin=\"0\" aria-valuemax=\"100\">25%</div>\n                                               // </div>\n                                               \n                                            }\n                                            \n                                        </div>\n                                    </div>\n                                    \n                                        \n                                    </div>\n                                </div>\n*/\n                                        }\n\n                                \n                            </div>\n                        </div>\n    \n    {\n        /*\n   \n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"card mb-3\">\n                                    <div className={[\"card-header\", \"cardHeader\"].join(' ')}>Użycie repozytorium</div>\n                                    <div className=\"card-body text-dark\">\n                                        <p> Liczba plikow w repozytorium: ({liczbaPlikowRepo})</p>\n                                        {\n                                        \n                                        //<p> Zajmowana pamiec: ({bytesToSize(miejscePlikowRepo)})</p>\n\n                                        }\n                                     \n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\">\n                               \n                            </div>\n                        </div>\n\n                        */\n                                    }\n    \n    \n                    </div>\n    \n                \n    \n                    <p> </p>\n                                \n                    </div>\n    \n                    <FooterTool />\n    \n                </section>\n    \n                \n            </Aux>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        containersForREC: state.recR.containersForREC, //pliki do rozpoznawania\n        containersForSEG: state.segR.containersForSEG, //pliko do segmentacji \n        repoFiles: state.repoR.files,\n    }\n  }\n  \n  const mapDispatchToProps = dispatch => {\n    return {\n      //onOpenModalHandler: (actionType,projectId, projectName) => dispatch(projectListActions.openModal(actionType,projectId, projectName)),\n \n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Dashboard));\n\n","import React from 'react';\nimport './ButtonLeftBar.css';\n\nconst buttonLeftBar = (props) => {\n\n   \n    const ifdisabled = props.disabled? true:false;\n    return (\n        <button disabled={ifdisabled} \n            className=\"btn btn-primary btn-lg btn-block ButtonLeftBar\" \n            onClick={props.whenClicked}\n            style={props.customeStyle}>\n            <span className=\"icon\">\n                {props.icon}\n            </span>\n            {props.napis}\n        </button>\n    );\n}\n\nexport default buttonLeftBar;","import React from 'react';\nimport './Backdrop.css';\n\nconst backdrop = (props) => {\n    return props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null;\n}\n\nexport default backdrop;","import React from 'react';\nimport './Modal.css';\nimport Aux from '../../../hoc/Auxiliary';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst modal = (props) => (\n\n    <Aux>\n        <Backdrop show={props.show} clicked={props.modalClosed} />\n\n{\n    props.show? \n\n        <div className=\"Modal\">\n            \n            <div className=\"modalTitle\">\n                <h5>{props.modalTitle}</h5>\n            </div>\n            <div className=\"modal-body\">\n                {props.children}\n            </div>\n        </div>\n\n    :null\n}\n        {\n            /*\n            props.show? \n                <div className=\"Modal\"\n                    style={{\n                        transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    }}>\n                        {props.children}\n                </div>\n                : null\n                */\n        }\n        \n                \n        {/*\n        <div className=\"Modal\"\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0',\n            }}>\n              \n            \n            {props.children}\n        </div>\n          */\n        }\n    </Aux>\n);\n\nexport default modal;","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './ToolItem.css';\n//import * as actionTypes from '../../../store/actions/actionsTypes';\nimport {connect} from 'react-redux';\nimport {withRouter } from 'react-router-dom'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n//import { faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faComment} from '@fortawesome/free-solid-svg-icons';\n//import { faSpinner } from '@fortawesome/free-solid-svg-icons';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\n//import { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nimport {ContextMenu, MenuItem, ContextMenuTrigger} from 'react-contextmenu';\nimport { Tooltip } from '@material-ui/core';\n//import { faFileAudio } from '@fortawesome/free-solid-svg-icons';\nimport { faSurprise } from '@fortawesome/free-solid-svg-icons';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\n//import * as toolItemActions from '../../../store/actions/index';\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport Modal from '../../../components/UI/Modal/Modal';\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nclass ToolItem extends Component {\n\n    state = {\n        modal: false,\n    }\n\n    closeModalHandler = () => {\n        this.setState({\n            modal:false,\n        })\n    }\n\n    componentDidUpdate = (prevProps,prevState) => {\n\n    }\n\n\n    componentDidMount = () => {\n     \n    }\n\n    runPreview = (e) => {\n        this.props.openPreview(this.props.container);\n    }\n\n    runProcess = (e) => {\n        e.preventDefault();\n\n        //this.props.setToolItemStatus(this.props.container._id, this.props.type, 'progress');\n        //this.setState({innerStatus: 'progress'});\n\n        //this.props.setContainerStatus(this.props.container._id, this.props.type, 'progress');\n\n        this.closeModalHandler();\n\n        this.props.runTool(this.props.container, this.props.type, this.props.token)\n\n        /*\n        switch(this.props.type){\n            case \"DIA\":\n                //this.props.runSpeechDiarization(this.props.container._id, this.props.type, this.props.token); \n                break;\n            case \"VAD\":\n                //this.props.runSpeechVoiceActivityDetection(this.props.container._id, this.props.type, this.props.token); \n                this.props.runTool(this.props.container, this.props.type, this.props.token)\n                break;\n            case \"REC\":\n                this.props.runSpeechRecognition(this.props.container._id, this.props.type, this.props.token); \n                break;\n            case \"SEG\":\n                this.props.runSpeechSegmentation(this.props.container._id, this.props.type, this.props.token); \n                break;\n            default:\n                console.log(\"Default\"); //to do\n        }\n        */\n\n\n       \n    }\n\n\n    downloadElement = (action) => {\n        //console.log(\"Pobieram: \" + toolType + \" : \" + action);\n\n\n        const userId = this.props.container.owner;\n        const projectId = this.props.container.project;\n        const sessionId = this.props.container.session;\n        const containerId = this.props.container._id;\n        const fileType = action;\n\n        \n        let linkToDownload = process.env.REACT_APP_API_URL+ \"/repoFiles/\" + userId + \"/\" + projectId+\"/\"+sessionId+\"/\"+containerId+\"/\"+fileType+\"/?api_key=\"+this.props.token;\n\n        window.open(linkToDownload,\"_self\");\n\n       \n    }\n\n    handleClick = (e, data) => {\n\n       //const toolType = data.toolType;\n       const action = data.action;\n\n       switch(action){\n            case 'copyId':\n                const theID = this.props.container._id;\n                this.copyToClipboard(theID);\n                break;\n           case 'usun':\n                this.props.onRemoveItem(this.props.container);\n                break;\n            case 'audio':\n                this.downloadElement( action);\n                break;\n            case 'oryginalAudio':\n                this.downloadElement(action);\n                break;\n            case 'VADctm':\n                this.downloadElement(action);\n                break;\n            case 'VADtextGrid':\n                this.downloadElement(action);\n                break;\n            case 'DIActm':\n                this.downloadElement(action);\n                break;\n            case 'DIAtextGrid':\n                this.downloadElement(action);\n                break;\n            case 'TXTTranscript':\n                this.downloadElement(action);\n                break;\n            case 'JSONTranscript':\n                this.downloadElement(action);\n                break;\n            case 'SEGctm':\n                this.downloadElement(action);\n                break;\n            case 'SEGtextGrid':\n                this.downloadElement(action);\n                break;\n            case 'EMUJSON':\n                this.downloadElement(action);\n                break;\n            default:\n                console.log(\"wrong action\")\n            \n       }\n    }\n\n\n    removeThisItem = () => {\n        this.props.onRemoveItem(this.props.container);\n    }\n\n    runProcessAgain = () => {\n        this.setState({\n            modal:true,\n        })\n    }\n\n    copyToClipboard = (text) => {\n        const str = text;\n        const el = document.createElement('textarea');\n        el.value = str;\n        el.setAttribute('readonly', '');\n        el.style.position = 'absolute';\n        el.style.left = '-9999px';\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n    }\n        \n\n    \n\n    render(){\n\n        let iconType = faFileAlt;\n\n        //do wskazywania czy obecnie jest edytowany\n        let czyEdytowany = '';\n\n        let modalTitle = '';\n        let modalContent = '';\n\n        switch(this.props.type){\n            case \"DIA\":\n                iconType = faComment;\n                if(this.props.container._id==this.props.DIAcontainerInPreview._id){\n                    czyEdytowany='editing';\n                }\n                break;\n            case \"VAD\":\n                iconType = faSurprise;\n                if(this.props.container._id==this.props.VADcontainerInPreview._id){\n                    czyEdytowany='editing';\n                }\n                break;\n            case \"REC\":\n                iconType = faFileAlt;\n                if(this.props.container._id==this.props.RECcontainerInPreview._id){\n                    czyEdytowany='editing';\n                }\n                break;\n            case \"SEG\":\n                iconType = faClock;\n                if(this.props.container._id==this.props.SEGcontainerInPreview._id){\n                    czyEdytowany='editing';\n                }\n                break;\n            default:\n                console.log(\"Default\"); //to do\n        }\n\n        // naprawianie wyświetlania wielkości pliku\n        let nBytes = this.props.container.size;\n        let filesize = nBytes + \" bytes\";\n        for (let aMultiples = [\"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"], nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {\n            filesize = nApprox.toFixed(1) + \" \" + aMultiples[nMultiple];\n        }\n\n        let previewIconAlpha = 1;\n\n        let statusIcon = null;\n        let progressBar = null;\n        let runProcessIcon = (\n            <Tooltip title={\"Uruchom \" + this.props.type}>\n                <a href=\"#\" role=\"button\" onClick={this.runProcess}>\n                    <FontAwesomeIcon icon={iconType} className=\"faIcon\"/>\n                </a>\n            </Tooltip>\n        );\n\n        \n                       \n\n        switch (this.props.status) {\n            case 'ready':\n                statusIcon = null;\n                previewIconAlpha = 1;\n                break;\n            case 'error':\n                statusIcon = (<Tooltip title={this.props.errorMessage}>\n                                    <a href=\"#\">\n                                        <FontAwesomeIcon icon={faExclamationCircle} className=\"faIcon\" style={{color: 'red'}} /> \n                                    </a>\n                            </Tooltip>)\n                \n                \n                break;\n            case 'progress':\n                //statusIcon = <FontAwesomeIcon icon={faSpinner} className=\"faIcon\" /> ;\n                statusIcon = <RingLoader\n                    css={override}\n                    size={'25px'}\n                    color={\"rgb(52, 152, 219)\"}\n                    loading={true}\n                />\n                progressBar = (\n                    <div className=\"progress\">\n                        <div className=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuenow=\"100\" aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width:'100%'}}></div>\n                    </div>\n                );\n\n                previewIconAlpha = 0.5;\n                runProcessIcon = <FontAwesomeIcon icon={iconType} className=\"faIcon\" style={{opacity: 0.5, color: '#3498db'}}/>\n\n                break;\n            case 'done':\n\n                previewIconAlpha = 1;\n                statusIcon = <FontAwesomeIcon icon={faCheck} className=\"faIcon\" /> ;\n                progressBar = null;\n\n                modalTitle = 'Czy na pewno chcesz ponownie uruchomić usługę automatyczną?';\n                modalContent = (\n                    <div>\n                        <p>Wszystkie Twoje ręczne korekty zostaną nadpisane</p>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.runProcess}>TAK</button>\n                        <button type=\"button\" className=\"btn btn-outline-primary\" onClick={this.closeModalHandler}>NIE</button>\n                    </div>\n\n                    );\n\n                \n\n                \n\n                runProcessIcon = (\n                    <Tooltip title={\"Uruchom \" + this.props.type}>\n                        <a href=\"#\" role=\"button\" onClick={this.runProcessAgain}>\n                              <FontAwesomeIcon icon={iconType} className=\"faIcon\" style={{opacity: 1, color: '#1cce44'}}/>\n                        </a>\n                    </Tooltip>\n                );\n\n            default:\n                statusIcon = null;\n        }\n\n\n        let previewIcon = (\n            <Tooltip title={\"Podgląd \" + this.props.type}>\n                <a href=\"#\" role=\"button\" onClick={previewIconAlpha===1? this.runPreview: null}>\n                    <FontAwesomeIcon icon={faEye} className=\"faIcon\" style={{opacity: previewIconAlpha, color: '#3498db'}} />\n                </a>\n            </Tooltip>\n        )\n\n        \n\n\n\n       \n        return(\n\n            <Aux>\n\n                <Modal \n                    show={this.state.modal}\n\t\t\t\t\tmodalClosed={this.closeModalHandler}\n                    modalTitle={modalTitle}\n                >\n                    {modalContent}\n                </Modal> \n\n\n                <ContextMenuTrigger id={\"ToolItemId\"+this.props.container._id}>\n                <a href=\"#\" role=\"button\" onClick={previewIconAlpha===1? this.runPreview: null}>\n                    <div className={\"ToolItem \" + czyEdytowany}>\n                        <div className={[\"row\", \"toolItem\"].join(' ')}>\n                            <div className=\"col-sm-6 file-info align-self-center pr-1\">\n                                <span className={\"fileName\"}>{this.props.container.containerName}</span>\n                            </div>\n                            <div className=\"col-sm-2 filesize align-self-center pl-1 pr-1 pl-1\">\n                                {filesize}\n                            </div>\n                            <div className=\"col-sm-1 status align-self-center pl-1 pr-1\">\n                                {statusIcon}\n                            </div>\n                            <div className=\"col-sm-3 actionIcons align-self-center pl-1 pr-1\">\n                                {//playIcon\n                                }\n                                {\n                                //previewIcon\n                                 }\n                                {runProcessIcon} \n                            </div>\n                        </div>\n                        {progressBar}\n                    </div>  \n                    </a>    \n\n\n                </ContextMenuTrigger>\n\n\n                <ContextMenu id={\"ToolItemId\"+this.props.container._id}>\n                    <MenuItem disabled={false} data={{toolType: this.props.type, action: 'copyId'}} onClick={this.handleClick}>\n                         Kopiuj ID: {this.props.container._id}\n                    </MenuItem>\n                    <MenuItem divider />\n                    <MenuItem disabled={false} data={{toolType: this.props.type, action: 'usun'}} onClick={this.handleClick}>\n                         Usuń element z listy\n                    </MenuItem>\n                    <MenuItem divider />\n                    <MenuItem disabled={false} data={{toolType: this.props.type, action: 'audio'}} onClick={this.handleClick}>\n                         Pobierz plik audio WAV 16000Hz, 16bit\n                    </MenuItem>\n                    <MenuItem disabled={false} data={{toolType: this.props.type, action: 'oryginalAudio'}} onClick={this.handleClick}>\n                         Pobierz oryginalny plik audio\n                    </MenuItem>\n                    <MenuItem divider />\n                    <MenuItem disabled={this.props.container.ifVAD? false: true} data={{toolType: this.props.type, action: 'VADctm'}} onClick={this.handleClick}>\n                         Pobierz plik detekcji mowy w formacie CTM\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifVAD? false: true} data={{toolType: this.props.type, action: 'VADtextGrid'}} onClick={this.handleClick}>\n                         Pobierz plik detekcji mowy w formacie TextGrid\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifDIA? false: true} data={{toolType: this.props.type, action: 'DIActm'}} onClick={this.handleClick}>\n                         Pobierz plik diaryzacji w formacie CTM\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifDIA? false: true} data={{toolType: this.props.type, action: 'DIAtextGrid'}} onClick={this.handleClick}>\n                         Pobierz plik diaryzacji mowy w formacie TextGrid\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifREC? false: true} data={{toolType: this.props.type, action: 'TXTTranscript'}} onClick={this.handleClick}>\n                         Pobierz transkrypcje w formacie txt\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifREC? false: true} data={{toolType: this.props.type, action: 'JSONTranscript'}} onClick={this.handleClick}>\n                          Pobierz transkrypcje w formacie json\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifSEG? false: true} data={{toolType: this.props.type, action: 'SEGctm'}} onClick={this.handleClick}>\n                         Pobierz segmentacje w formacie ctm\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifSEG? false: true} data={{toolType: this.props.type, action: 'SEGtextGrid'}} onClick={this.handleClick}>\n                         Pobierz segmentacje w formacie TextGrid\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifSEG? false: true} data={{toolType: this.props.type, action: 'EMUJSON'}} onClick={this.handleClick}>\n                        Pobierz segmentacje w formacie json\n                    </MenuItem>\n                </ContextMenu>\n\n            </Aux>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        userId: state.projectR.currentProjectOwner,\n        projectId: state.projectR.currentProjectID,\n        token: state.homeR.token,\n\n        RECcontainerInPreview: state.recR.recoContainerForPreview,\n        VADcontainerInPreview: state.vadR.vadContainerForPreview,\n        DIAcontainerInPreview: state.diaR.diaContainerForPreview,\n        SEGcontainerInPreview: state.segR.alignContainerForPreview,\n\n        //containersForRECO: state.recR.filesToUpload,\n        //containersFor\n        \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n       // runSpeechRecognition: (containerId, toolType, token) => dispatch(toolItemActions.runSpeechRecognition(containerId, toolType, token)),\n       // runSpeechSegmentation: (containerId, toolType, token) => dispatch(toolItemActions.runSpeechSegmentation(containerId, toolType, token)),\n       // runSpeechDiarization: (containerId, toolType, token) => dispatch(toolItemActions.runSpeechDiarization(containerId, toolType, token)),\n        //runSpeechVoiceActivityDetection: (containerId, toolType, token) => dispatch(toolItemActions.runSpeechVoiceActivityDetection(containerId, toolType, token)),\n\n        \n       // setContainerStatus:  (containerId, toolType, status) => dispatch(toolItemActions.setContainerStatus(containerId, toolType, status)),\n       // setToolItemStatus: (containerId, toolType, status) => dispatch(toolItemActions.setToolItemStatus(containerId, toolType, status)),\n       // updateFileState: (fileID, status,percLoaded) => dispatch(toolItemActions.updateFileState(fileID, status,percLoaded)),\n     //     openContainerInPreview: (container, openIn) => dispatch(toolItemActions.openContainerInPreview(container, openIn)),\n     \n    //    onGetProjectFilesForUser: (userId, projectId, token) => dispatch(recognitionActions.getProjectFilesForUser(userId,projectId, token)),\n    //    onFileRecognition: (file, entryId,userId, projectId, audioFrom) => dispatch(recognitionActions.initFileRecognition(file, entryId, userId, projectId, audioFrom)),\n    //    onRemoveItem:(fileId) => dispatch(recognitionActions.removeRecognitionItem(fileId)),\n    //    onOpenRecognitionAudioPreview:(entryId) => dispatch(recognitionActions.openRecognitionAudioPreview(entryId))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ToolItem));","import React, { Component } from 'react';\nimport Aux from '../../../../hoc/Auxiliary';\nimport './TextEditor.css';\nimport { connect } from 'react-redux';\n//import uuid from 'uuid';\n//import { faAlignJustify} from '@fortawesome/free-solid-svg-icons';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport ButtonLeftBar from '../../../../components/UI/ButtonLeftBar/ButtonLeftBar';\n//import * as audioEditorActions from '../../../../store/actions/index';\n//import EditorJs from 'react-editor-js';\n\n//import List from \"@editorjs/list\";\n//import Warning from \"@editorjs/warning\";\n//import Header from \"@editorjs/header\";\n//import Quote from \"@editorjs/quote\";\n//import Marker from \"@editorjs/marker\";\n//import Delimiter from \"@editorjs/delimiter\";\n//import SimpleImage from \"@editorjs/simple-image\";\n\n/*\nexport const EDITOR_JS_TOOLS = {\n  marker: Marker,\n  //list: List,\n  //warning: Warning,\n  //header: Header,\n  //quote: Quote,\n  delimiter: Delimiter,\n  simpleImage: SimpleImage\n};\n*/\n\n\nclass TextEditor extends Component {\n    \n    constructor(props){\n        super(props)\n        \n        this.state = {\n           // text:  this.props.transcriptionData.blocks[0].data.text,\n           // text: '',\n            editorisready: false,\n            transcriptHasChanged: false,\n        }\n\n       \n        \n        //this.state = {\n        //    data: \"\",\n        //};\n        \n        //let editor = null;  //text editor instance\n        let container = null;\n    }\n\n \n\n\n    componentDidUpdate = (prevProps, prevState) => {\n\n  \n \n      \n    }\n\n       \n    componentDidMount = () => {\n\n        this.setState({\n            editorisready: true,\n        })\n\n        this.props.onLoadTranscription();\n\n\n    }\n\n\n    loadNextForTranscript = () => {\n        this.props.onLoadNextElement();\n    }\n       \n\trender() {\n\n        let loadTranscriptBtnDisabled = false;\n        let loadTranscriptBtnText = \"Załaduj transkrypcje z serwera\";\n        let loadTranscriptBtnStyle = {backgroundColor: '#3498db'};\n\n        let saveTranscriptBtnDisabled = false;\n        let saveTranscriptBtnText = \"Zapisz transkrypcję na serwerze\";\n        let saveTranscriptBtnStyle = {backgroundColor: '#3498db'};\n\n        //jeżeli element nie miał zrobionej jeszcze transkrypcji to\n        if(!this.props.container.ifREC){\n            loadTranscriptBtnDisabled = true;\n            loadTranscriptBtnText = \"Rozpocznij transkrypcje\";\n            loadTranscriptBtnStyle = {backgroundColor: '#3498db', textAlign: 'center'};\n\n            saveTranscriptBtnDisabled = false;\n            saveTranscriptBtnText = \"Plik niezmieniony\";\n            saveTranscriptBtnStyle = {backgroundColor: '#c7d5da', textAlign: 'center'};\n        }\n\n        //jeżeli element nie miał zrobionej transkrypcji ale jest już edytowany przez użytkownika\n        if(!this.props.container.ifREC && this.props.transcriptHasChanged){\n\n            saveTranscriptBtnDisabled = false;\n            saveTranscriptBtnText = \"Zapisz zmiany na serwerze\";\n            saveTranscriptBtnStyle = {backgroundColor: '#3498db', textAlign: 'center'};\n        }\n\n        //jeżeli jest transkrypcja i jest świeżo załadowana z serwera to przycisk jest nieaktywny\n        if(this.props.container.ifREC && !this.props.transcriptHasChanged){\n            loadTranscriptBtnDisabled = true;\n            loadTranscriptBtnText = \"Transkrypcja załadowana pomyślnie\";\n            loadTranscriptBtnStyle = {backgroundColor: '#46d363', textAlign: 'center'};\n\n            saveTranscriptBtnDisabled = true;\n            saveTranscriptBtnText = \"Plik niezmieniony\";\n            saveTranscriptBtnStyle = {backgroundColor: '#c7d5da', textAlign: 'center'};\n        }\n\n        // jeżeli coś user zmienił i jeszcze nie zapisał\n        if(this.props.container.ifREC && this.props.transcriptHasChanged){\n            loadTranscriptBtnDisabled = false;\n            loadTranscriptBtnText = \"Załaduj poprzednią wersję z serwera\";\n            loadTranscriptBtnStyle = {backgroundColor: '#efb710', textAlign: 'center'};\n\n            saveTranscriptBtnDisabled = false;\n            saveTranscriptBtnText = \"Zapisz zmiany na serwerze\";\n            saveTranscriptBtnStyle = {backgroundColor: '#3498db', textAlign: 'center'};\n        }\n\n        // jeżeli user po zmianach zapisał\n        if(this.props.transcriptionSaved && this.props.text != ''){\n            loadTranscriptBtnDisabled = true;\n            loadTranscriptBtnText = \"Transkrypcja została zapisana pomyślnie\";\n            loadTranscriptBtnStyle = {backgroundColor: '#46d363', textAlign: 'center'};\n\n            saveTranscriptBtnDisabled = true;\n            saveTranscriptBtnText = \"Plik niezmieniony\";\n            saveTranscriptBtnStyle = {backgroundColor: '#c7d5da', textAlign: 'center'};\n        }\n\n       \n       \n\t\treturn (\n\t\t\t<Aux>\n                <div className=\"TextEditor\">\n\n                    {\n                       // this.props.transcriptionSaved? <div>Zapisano transcrypcje</div>: null\n\n                        // <TextareaAutosize maxRows={1000} minRows={5} className=\"textEditor\" onChange={this.textChanged} value={this.state.transcription}/>\n\n                    }\n\n\n                    <ButtonLeftBar \n                        napis={loadTranscriptBtnText}\n                        iconType=\"file\"\n                        icon={null}\n                        customeStyle={loadTranscriptBtnStyle}\n                        disabled={loadTranscriptBtnDisabled}\n                        whenClicked={this.props.onLoadTranscription}/>\n\n\n                    <TextareaAutosize \n                        maxRows={1000} \n                        minRows={5} \n                        className=\"textEditor\"\n                        onChange={this.props.onTextChanged} \n                        value={this.props.text}\n                        inputRef={tag => (this.textarea = tag)}\n                        autoFocus />\n\n                    {\n                    /*\n                    <EditorJs \n                        tools={EDITOR_JS_TOOLS}\n                        instanceRef={instance => this.editorInstance = instance}\n                        placeholder={\"transkrybuj tutaj\"}\n                        onReady={this.setEditorReady}\n                        onChange={this.textEditorChange}\n                        data={this.props.transcriptionData} />\n\n                    */\n                    }\n                    \n                   \n                    <ButtonLeftBar \n                        napis={saveTranscriptBtnText}\n                        iconType=\"file\"\n                        icon={null}\n                        customeStyle={saveTranscriptBtnStyle}\n                        disabled={saveTranscriptBtnDisabled}\n                        whenClicked={this.props.onSaveChanges}/>\n\n                    <ButtonLeftBar \n                        napis={\"Załaduj kolejny na liście\"}\n                        iconType=\"file\"\n                        icon={null}\n                        customeStyle={{backgroundColor: '#3498db', textAlign: 'center'}}\n                        disabled={false}\n                        whenClicked={this.loadNextForTranscript}/>\n                </div>\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\n\t\t// DIAItems: state.diaR.filesToUpload,\n\t\t//\tmodalDisplay: state.projectR.modal,\n\t\t//\tifRefusedAudio: state.segR.ifRefusedAudio,\n         token: state.homeR.token,\n         transcriptionSaved: state.projectR.transcriptionSaved,\n         transcriptionData: state.recR.transcriptionData,\n\n\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\n       // onSaveTranscription: (container, toolType, token, transcription) => dispatch(audioEditorActions.saveTranscription(container, toolType, token, transcription)),\n       // onTranscriptionChanged: () => dispatch(audioEditorActions.transcriptionChanged()),\n       // onLoadExistingTranscription: (container, toolType, token) => dispatch(audioEditorActions.loadTranscription(container, toolType, token)),\n\n\t}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextEditor);","import React, { Component } from 'react';\nimport Aux from '../../../../../hoc/Auxiliary';\nimport './Segment.css';\nimport { connect } from 'react-redux';\n//import { faTrash, faPlay } from '@fortawesome/free-solid-svg-icons';\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\nclass Segment extends Component {\n    \n    constructor(props){\n        super(props)\n        /*\n        this.state = {\n                labelText: '',\n                startTime: 0,\n                endTime: 1,\n                segmentId: '',\n        }\n        */\n       \n    }\n\n    componentDidMount() {\n        /*\n        this.setState({\n            labelText: this.props.labelText,\n            startTime: this.props.startTime,\n            endTime: this.props.endTime,\n            segmentId: this.props.segmentId,\n        })\n        */\n    }\n\n\n    componentDidUpdate = (prevProps, prevState) => {\n       \n    }\n\n    updateStartTimeSegment = (e) => {\n        let element = e.target;\n        if(element){\n            let startTime = parseFloat(element.value);\n\n            if (startTime < 0) {\n\t\t\t\tstartTime = 0;\n            }\n            \n            if (startTime >= this.props.endTime) {\n\t\t\t\tstartTime = this.props.endTime - 0.1;\n            }\n\n            this.props.onUpdateStartTime(this.props.segmentId, parseFloat(startTime) );\n           // this.props.onUpdateStartTime(this.state.segmentId, parseFloat(startTime) );\n            \n          //  this.setState({\n          //      startTime: parseFloat(startTime),\n          //  })\n        }\n    }\n\n\n    updateEndTimeSegment = (e) => {\n\n        let element = e.target;\n        if(element){\n            let endTime = parseFloat(element.value);\n\n            if (endTime < 0) {\n\t\t\t\tendTime = 0.1;\n\t\t\t}\n\n\t\t\tif (endTime <= this.props.startTime) {\n\t\t\t\tendTime = this.props.startTime + 0.1;\n            }\n\n            this.props.onUpdateEndTime(this.props.segmentId, parseFloat(endTime) );\n            \n        //    this.props.onUpdateEndTime(this.state.segmentId, parseFloat(endTime) );\n            \n          //  this.setState({\n          //      endTime: parseFloat(endTime),\n          //  })\n        }\n    }\n\n    updateSegmentLabel = (e) => {\n\n        let element = e.target;\n     \n        if(element){\n            var labelText = element.value;\n\n            this.props.onUpdateLabel(this.props.segmentId, labelText );\n          //  this.props.onUpdateLabel(this.state.segmentId, labelText );\n\n          //  this.setState({\n          //      labelText: labelText,\n          //  })\n  \n        }\n    }\n\n\n    playSegment = () => {\n        this.props.onPlaySegment(this.props.segmentId);\n    }\n\n    removeSegment = () => {\n        this.props.onRemoveSegment(this.props.segmentId);\n    }\n\n       \n\trender() {\n\n\n        //console.log(this.props.startTime);\n       \n\n\t\treturn (\n\t\t\t<Aux>\n                <tr className=\"Segment\">\n                   {\n                       /*\n                            <td>{this.props.segmentId}</td>\n                       */\n                   } \n                    <td><input className=\"szerzej\" data-action=\"update-segment-label\" onChange={this.updateSegmentLabel} type=\"text\" value={this.props.labelText} data-id={this.props.segmentId}/></td>\n                    <td><input data-action=\"update-segment-start-time\" onChange={this.updateStartTimeSegment} type=\"number\" value={this.props.startTime} data-id={this.props.segmentId}/></td>\n                    <td><input data-action=\"update-segment-end-time\" onChange={this.updateEndTimeSegment} type=\"number\" value={this.props.endTime} data-id={this.props.segmentId}/></td>\n                    <td><a href={'#'+this.props.segmentId} id=\"playBtn\" data-action=\"play-segment\" data-id={this.props.segmentId}>Play</a></td>\n                    <td><a href={'#'+this.props.segmentId} id=\"removeBtn\" data-action=\"remove-segment\" data-id={this.props.segmentId}>Usuń</a></td>\n                    \n                    \n                    {\n                      //    <td><a href={'#'+this.props.segmentId} data-action=\"play-segment\" data-id={this.props.segmentId}>Play</a></td>\n                  //      <td><FontAwesomeIcon icon={faTrash} className=\"faIcon\" onClick={this.removeSegment} /></td>\n                  //       <td><FontAwesomeIcon icon={faPlay} className=\"faIcon\" onClick={this.playSegment}/></td>\n                  //  <td><a href={'#'+this.props.segmentId} data-action=\"play-segment\" data-id={this.props.segmentId}><button><FontAwesomeIcon icon={faPlay} className=\"faIcon\" /></button></a></td>\n                  //  <td><a href={'#'+this.props.segmentId} data-action=\"remove-segment\" data-id={this.props.segmentId}><button><FontAwesomeIcon icon={faTrash} className=\"faIcon\" /></button></a></td>\n                    \n                    }\n                    \n                    </tr>\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\n\n\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\n       // onSaveTranscription: (container, toolType, token, transcription) => dispatch(audioEditorActions.saveTranscription(container, toolType, token, transcription)),\n\n\t}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Segment);","import React, { Component } from 'react';\nimport Aux from '../../../../hoc/Auxiliary';\nimport './SegmentsEditor.css';\nimport { connect } from 'react-redux';\n\nimport Segment from \"./Segment/Segment\";\nimport ButtonLeftBar from '../../../../components/UI/ButtonLeftBar/ButtonLeftBar';\n\n\nclass SegmentsEditor extends Component {\n    \n    constructor(props){\n        super(props)\n        \n \n       \n    }\n\n\n\n    updateLabel = (id, newLabel) => {\n        this.props.onUpdateSegmentLabel(id, newLabel);\n\n    }\n\n    updateStartTime = (id, newValue) => {\n        this.props.onUpdateSegmentStartTime(id, newValue);\n    }\n\n    updateEndTime = (id, newValue) => {\n        this.props.onUpdateSegmentEndTime(id, newValue);\n\n    }\n\n\n    componentWillMount = () => {\n\n    }\n\n    componentDidUpdate = () => {\n       \n    }\n\n    playSegment = (id) => {\n        this.props.onPlaySegment(id);\n    }\n\n    removeSegment = (id) => {\n        this.props.onRemoveSegment(id);\n \n    }\n\n\n\n\n    renderSegments = () => {\n\n        //tutaj musze je posortować względem czasu\n        this.props.segments.sort((s1,s2)=>{\n            return s1.startTime - s2.startTime;\n        });\n\n\t\tlet segmentList = this.props.segments.map((segment,i) => {\n            return <Segment \n                labelText={segment.labelText} \n                startTime={parseFloat(segment.startTime.toFixed(2))}\n                endTime={parseFloat(segment.endTime.toFixed(2))}\n                segmentId={segment.id}\n                key={segment.id}\n                onUpdateLabel={(id, newLabel)=>this.updateLabel(id, newLabel)}\n                onUpdateStartTime={(id, newValue)=>this.updateStartTime(id, newValue)}\n                onUpdateEndTime={(id, newValue)=>this.updateEndTime(id, newValue)}\n                onPlaySegment={(id)=>this.playSegment(id)}\n                onRemoveSegment={(id)=>this.removeSegment(id)}/>\n        });\n\n        return segmentList;\n    };\n    \n    saveSegments = () => {\n        this.props.onSaveSegmentChanges();\n    }\n\n       \n\trender() {\n\n        let segments = this.renderSegments();\n\n        let czyDisabled = !this.props.czyZmieniono; \n        \n\t\treturn (\n\t\t\t<Aux>\n\n                <div className=\"SegmentsEditor\">\n                    <div className=\"log\">\n                        <div id=\"segments\">\n                            <h3>Segmenty</h3>\n                            <table>\n                            <thead>\n                                <tr>\n                                <th>Etykieta</th>\n                                <th>Początek</th>\n                                <th>Koniec</th>\n                                <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {segments}\n                            </tbody>\n                            </table>\n                        </div>\n                    </div>\n\n                    {\n                        this.props.czyZmieniono? <ButtonLeftBar \n                        napis={\"Zapisz zmiany segmentów\"}\n                        iconType=\"file\"\n                        icon={null}\n                        customeStyle={{textAlign:'center', marginBottom: '20px'}}\n                        disabled={czyDisabled}\n                        whenClicked={this.saveSegments}/> : null\n                    }\n                    \n                </div>\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\n\n\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\n       // onSaveSegments: (container, toolType, token, segments) => dispatch(audioEditorActions.saveTranscription(container, toolType, token, transcription)),\n\n\t}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SegmentsEditor);","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './AudioEditor.css';\nimport { connect } from 'react-redux';\n//import uuid from 'uuid';\n//import Modal from '../../../components/UI/Modal/Modal';\n//import { extensionMapping } from '../../../utils/fileTypes';\nimport { faMapMarker, faPlay } from '@fortawesome/free-solid-svg-icons';\n//import { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { faGripLinesVertical } from '@fortawesome/free-solid-svg-icons';\nimport { faSearchMinus } from '@fortawesome/free-solid-svg-icons';\nimport { faExpand } from '@fortawesome/free-solid-svg-icons';\nimport { faSearchPlus} from '@fortawesome/free-solid-svg-icons';\nimport { faHistory} from '@fortawesome/free-solid-svg-icons';\nimport { faPause} from '@fortawesome/free-solid-svg-icons';\nimport { faLongArrowAltDown} from '@fortawesome/free-solid-svg-icons';\nimport { faLongArrowAltUp} from '@fortawesome/free-solid-svg-icons';\n//import { faAlignJustify} from '@fortawesome/free-solid-svg-icons';\nimport { faClock} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import {getFileNameWithNoExt, getExt, getFilenameFromURL } from '../../../utils/utils';\n//import ToolItem from '../ToolItem/ToolItem';\n//import WaveformData from 'waveform-data';\n//import TextareaAutosize from 'react-textarea-autosize';\nimport * as audioEditorActions from '../../../store/actions/index';\nimport Peaks from 'peaks.js';\n//import Konva from 'konva';\n//import CustomSegmentMarker from './CustomSegmentMarker';\n//import CustomPointMarker from './CustomPointMarker';\n//import SimplePointMarker from './SimplePointMarker';\n\n//import TOLdemo from '../../../utils/TOL_6min_720p_download.json';\nimport ReactTooltip from \"react-tooltip\";\n//import {ContextMenu, MenuItem, ContextMenuTrigger} from 'react-contextmenu';\nimport {withRouter } from 'react-router-dom';\nimport ButtonLeftBar from '../../../components/UI/ButtonLeftBar/ButtonLeftBar';\n\n\nimport TextEditor from './TextEditor/TextEditor';\nimport SegmentEditor from './SegmentsEditor/SegmentsEditor';\nimport Hotkeys from 'react-hot-keys';\n\nimport {createNotification, loader} from '../../../index';\n\n\nclass AudioEditor extends Component {\n\n\tconstructor(props) {\n\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\taudioPath: '',\n\t\t\tdatPath: '',\n\t\t\tsegments: [],\n\t\t\ttext: '',\n\t\t\ttranscriptHasChanged: false,\n\t\t\tisPlaying: false,\n\t\t\tspeedFactor: 1,\n\t\t\todliczanie: null,\n\t\t\tisLoading: false,\n\t\t\tczyZmienionoSegmenty: false,\n\t\t\tcurrentSegments: [], //w przyjaznej formie\n\t\t\tsegmentCounter: 1,\n\t\t\tcurrentZoom: 1,\n\t\t}\n\n\t\tthis.audioPlayer = React.createRef();\n\n\t\tthis.peaks = null;\n\n\t  }\n\n\t\n\n\n\tonKeyDown(keyName, e, handle) {\n\t\t//console.log(\"test:onKeyDown\", e, handle)\n\n\t\tswitch (handle.key) {\n\t\t\tcase 'alt+l': \n\t\t\t  this.togglePlaying();\n\t\t\t  break;\n\t\t\tcase 'alt+k': \n\t\t\t  this.rewind3secBack();\n\t\t\t  break;\n\t\t\tcase 'alt+j': \n\t\t\t  this.rewind5secBack();\n\t\t\t  break;\n\t\t\tcase 'alt+i': \n\t\t\t  this.increasePlaybackSpeed();\n\t\t\t  break;\n\t\t\tcase 'alt+o': \n\t\t\t  this.decreasePlaybackSpeed();\n\t\t\t  break;\n\t\t\tcase 'alt+n':\n\t\t\t  this.loadNextElement();\n\t\t\t  break;\n\t\t\tcase 'alt+m':\n\t\t\t  this.saveChanges();\n\t\t\t  break;\n\t\t\tdefault: console.log(e);\n\t\t}\n\t }\n\n\t saveChanges = () => {\n\n\t\tswitch(this.props.toolType){\n\t\t\tcase(\"VAD\"):\n\t\t\t\tconsole.log('VAD')\n\t\t\t\tbreak;\n\t\t\tcase(\"DIA\"):\n\t\t\t\tconsole.log('DIA')\n\t\t\t\tbreak;\n\t\t\tcase(\"REC\"):\n\t\t\t    this.props.onSaveTranscription(this.props.containerForPreview, this.props.toolType, this.props.token, this.state.text);\n\t\t\t\tbreak;\n\t\t\tcase(\"SEG\"):\n\t\t\t\tconsole.log('SEG')\n\t\t\t\tbreak;\n\t\t}\n\t\t\n\t }\n\n\t increasePlaybackSpeed = () => {\n\t\tlet player = document.getElementById(\"audio\");\n\t\tif(this.state.speedFactor < 3){\n\t\t\tplayer.playbackRate = this.state.speedFactor + 0.5;\n\t\t\tthis.setState({\n\t\t\t\tspeedFactor: this.state.speedFactor + 0.5,\n\t\t\t})\n\t\t}\n\t }\n\n\t decreasePlaybackSpeed = () => {\n\t\tlet player = document.getElementById(\"audio\");\n\t\tif(this.state.speedFactor > 0){\n\t\t\tplayer.playbackRate = this.state.speedFactor - 0.5;\n\t\t\tthis.setState({\n\t\t\t\tspeedFactor: this.state.speedFactor - 0.5,\n\t\t\t})\n\t\t}\n\t }\n\n\t togglePlaying = () => {\n\t\t\tif(this.state.isPlaying){\n\t\t\t\tthis.peaks.player.pause();\n\t\t\t\tthis.setState({\n\t\t\t\t\tisPlaying: false\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.peaks.player.play();\n\t\t\t\tthis.setState({\n\t\t\t\t\tisPlaying: true\n\t\t\t\t})\n\t\t\t}\n\t }\n\n\t rewind3secBack = () => {\n\t\tthis.playBack(3);\n\t }\n\n\t rewind5secBack = () => {\n\t\tthis.playBack(5);\n\t }\n\n\n\t playBack = (seconds) => {\n\n\t\t\tlet currentTime = this.peaks.player.getCurrentTime();\n\t\t\tlet timeBack = currentTime - seconds;\n\t\t\tif(timeBack<0){\n\t\t\t\ttimeBack = 0;\n\t\t\t}\n\t\t\tthis.peaks.player.seek(timeBack);\n\t\t\tthis.peaks.player.play();\n\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tisPlaying: true,\n\t\t\t})\n\n\t\t\tif(this.state.odliczanie){\n\t\t\t\tclearTimeout(this.state.odliczanie);\n\t\t\t\tthis.setState({\n\t\t\t\t\todliczanie: null,\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\tlet odliczanieTemp = this.state.odliczanie;\n\t\t\todliczanieTemp = setTimeout(()=>{\n\t\t\t\tthis.peaks.player.pause();\n\t\t\t\tthis.setState({\n\t\t\t\t\tisPlaying: false,\n\t\t\t\t\todliczanie: null,\n\t\t\t\t})\n\t\t\t},((seconds*1000)+100)/this.state.speedFactor)\n\n\t\t\tthis.setState({\n\t\t\t\todliczanie: odliczanieTemp,\n\t\t\t})\n\t }\n\n\n\n\n\tcreatePeaksInstance = (options) => {\n\t\t\n\t\treturn new Promise((resolve, reject) => {\n\t\t  Peaks.init(options, (err, peaksInstance) => {\n\n\t\t\tif (err) {\n\t\t\t  console.log(\"Problem with Peaks initialization\")\n\t\t\t  reject(err);\n\t\t\t}\n\t\t\telse {\n\t\t\t  console.log('Peaks instance ready');\n\n\t\t\t\t  \n\t\t\t  return resolve(peaksInstance);\n\t\t\t}\n\t\t  });\n\t\t});\n\t  }\n\n\n\t  bindEventHandlers = (peaksInstance, options) => {\n\n\n\t\t\n\n\t\tdocument.querySelector('body').addEventListener('click', (event) => {\n\t\t\tvar element = event.target;\n\t\t\tvar action  = element.getAttribute('data-action');\n\t\t\tvar id      = element.getAttribute('data-id');\n\n\t\t\tif (action === 'play-segment') {\n\t\t\t  var segment = peaksInstance.segments.getSegment(id);\n\t\t\t  peaksInstance.player.playSegment(segment);\n\t\t\t}\n\t\t\telse if (action === 'remove-point') {\n\t\t\t  peaksInstance.points.removeById(id);\n\t\t\t}\n\t\t\telse if (action === 'remove-segment') {\n\t\t\t  peaksInstance.segments.removeById(id);\n\n\t\t\t  this.setState({\n\t\t\t\t  czyZmienionoSegmenty: true,\n\t\t\t  })\n\n\t\t\t}\n\t\t  });\n\n\n\t\tdocument.querySelector('[data-action=\"zoom-in\"]').addEventListener('click', () =>{\n\t\t\tpeaksInstance.zoom.zoomIn();\n\t\t\tthis.setState({\n\t\t\t\tcurrentZoom: peaksInstance.zoom.getZoom(),\n\t\t\t})\n\t\t\tconsole.log(this.state.currentZoom)\n\t\t});\n\n\t\tdocument.querySelector('[data-action=\"zoom-out\"]').addEventListener('click', () =>{\n\t\t\tpeaksInstance.zoom.zoomOut();\n\t\t\tthis.setState({\n\t\t\t\tcurrentZoom: peaksInstance.zoom.getZoom(),\n\t\t\t})\n\t\t\tconsole.log(this.state.currentZoom)\n\t\t});\n\n\t\tdocument.querySelector('[data-action=\"resize\"]').addEventListener('click', () =>{\n\t\t\t\n\t\n\t\t\tthis.props.editorFullWidth();\n\n\t\t\tconsole.log(this.props.ifFullScreen)\n\t\t\n\t\t\tlet zoomview = peaksInstance.views.getView('zoomview');\n\t\t\tif (zoomview) {\n\t\t\t\tzoomview.fitToContainer();\n\t\t\t}\n\n\t\t\tlet overview = peaksInstance.views.getView('overview');\n\t\t\tif (overview) {\n\t\t\t\toverview.fitToContainer();\n\t\t\t}\n\n\t\t\t\n\t\t });\n\n\t\t document.querySelector('[data-action=\"play\"]').addEventListener('click', () =>{\n\t\t\tthis.togglePlaying();\n\t\t });\n\n\t\t peaksInstance.on('segments.dragend', (segment, startMarker) => {\n\t\t\t\n\t\t\tthis.updateSegment(segment);\n\t\t\tconsole.log('segments.dragend:', segment, startMarker);\n\t\t  });\n\n\t  }\n\n\n\tconvertPeaksSegments = () => {\n\t\tlet segmenty = this.peaks.segments.getSegments().map(segment=>{\n\t\t\treturn {\n\t\t\t\tstartTime: segment.startTime,\n\t\t\t\tendTime: segment.endTime,\n\t\t\t\tcolor: segment.color,\n\t\t\t\tlabelText: segment.labelText,\n\t\t\t\tid: segment.id,\n\t\t\t\teditable: segment.editable,\n\t\t\t}\n\t\t})\n\n\t\treturn segmenty;\n\t}\n\n\n\tstartPeaksLeaving = (audioPathok, datPathok, segments) => {\n\n\t\t//arraybuffer: \"http://localhost:1234/repoFiles/5e4b09e086f4ed663259fae9/5e9e175af4192d661ebf49dd/5e9e175af4192d661ebf49de/kleska.dat?api_key=\"+this.props.token,\n\t\t\n\t\tlet options = {\n\t\t\tcontainers: {\n\t\t\t\tzoomview: document.getElementById('zoomview-container'),\n\t\t\t\toverview: document.getElementById('overview-container')\n\t\t\t},\n\t\t\tmediaElement: document.querySelector('audio'),\n\t\t\tdataUri: {\n\t\t\t  arraybuffer: datPathok,\n\t\t\t},\n\n\t\t\tmediaUrl: audioPathok,\n\n\t\t\tzoomWaveformColor: 'rgba(52, 152, 219, 1)',\n\t\t\toverviewWaveformColor: 'rgba(52, 152, 219, 0.3)',\n\t\t\toverviewHighlightColor: 'rgba(52, 152, 219, 0.4)',\n\t\t\tsegmentColor: 'rgba(57, 75, 85, 1)',\n\t\t\trandomizeSegmentColor: false,\n  \t\t\tsegmentStartMarkerColor: 'rgba(255, 87, 34, 1)',\n  \t\t\tsegmentEndMarkerColor: 'rgba(255, 152, 0, 1)',\n\t\t\tkeyboard: true,\n\t\t\tnudgeIncrement: 0.1,\n\t\t\tzoomLevels: [128, 256, 512, 1024, 2048, 4096],\n\t\t\tshowPlayheadTime: true,\n\t\t\temitCueEvents: true,\n\t\t\tshowPlayheadTime: false,\n\t\t\tsegments: segments,\n\t\t  };\n\n\n\t\t  this.createPeaksInstance(options)\n          .then(peaksInstance => {\n\n\t\t\t//ładuje tutaj audio\n\t\t\tpeaksInstance.setSource(options, error => {\n\t\t\t\tif (error) {\n\t\t\t\tconsole.error('setSource error', error);\n\t\t\t\t}\n\n\n\t\t\t\tthis.peaks = peaksInstance;\n\n\t\t\t\tlet segmenty = this.convertPeaksSegments();\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tcurrentSegments: segmenty,\n\t\t\t\t})\n\n\t\t\t\t\n\t\t\t\t\n\n\t\t\t\tthis.bindEventHandlers(this.peaks, options);\n\t\t\t});\n\t\t\n\n\t\t  }, this.errorHandler);\n\t}\n\n\n\n\t//wydobywa ścieżkę do metadanych, pliku audio i segmentów\n\tgetDataFromContainer = (container) => {\n\t\tconst userId = container.owner;\n\t\tconst projectId = container.project;\n\t\tconst sessionId = container.session;\n\t\tconst fileName = container.fileName;\n\t\tconst containerId = container._id;\n\t\tconst token = this.props.token;\n\n\t\t//pobieram segmenty\n\t\tlet segments = [];\n\t\tswitch(this.props.toolType){\n\t\t\tcase(\"VAD\"):\n\t\t\t\tsegments = container.VADUserSegments;\n\t\t\t\tbreak;\n\t\t\tcase(\"DIA\"):\n\t\t\t\tsegments = container.DIAUserSegments;\n\t\t\t\tbreak;\n\t\t\tcase(\"REC\"):\n\t\t\t\tsegments = container.RECUserSegments;\n\t\t\t\tbreak;\n\t\t\tcase(\"SEG\"):\n\t\t\t\tsegments = container.RECUserSegments;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif(segments==undefined) segments = [];\n\t\t\n\n\t\t//plik audio\n\t\t//let audioPath = process.env.REACT_APP_API_URL+ \"/repoFiles/\" + userId + \"/\" + projectId + \"/\"+sessionId+\"/\"+containerId+\"/audio?api_key=\"+token;\n\t\t\n\t\tlet audioPath = process.env.REACT_APP_API_URL+ \"/repoFiles/download/\"+containerId+\"/audio?api_key=\"+token;\n\t\t\n\t\t//meta data do renderingu waveform\n\t\t//let datPath = process.env.REACT_APP_API_URL + \"/repoFiles/\" + userId + \"/\" + projectId + \"/\"+sessionId+\"/\"+containerId+\"/dat?api_key=\"+token;\n\t\t\n\t\tlet datPath = process.env.REACT_APP_API_URL + \"/repoFiles/download/\"+containerId+\"/dat?api_key=\"+token;\n\n\n\t\treturn {\n\t\t\taudioPath: audioPath,\n\t\t\tdatPath: datPath,\n\t\t\tsegments: segments,\n\t\t}\n\t}\n\n\n\n\t// ładuje nowy plik do edytora\n\tloadNewAudioToEditor = (container) => {\n\n\t\tif(container !== undefined){\n\n\t\t\tlet data = this.getDataFromContainer(container);\n\t\t\tconsole.log(data.audioPath);\n\t\t\tconsole.log(data.datPath);\n\t\t\tconsole.log(data.segments);\n\t\t\tthis.startPeaksLeaving(data.audioPath, data.datPath, data.segments)\n\n\t\t}\n\t}\n\n\n\terrorHandler = (err) => {\n\t\tconsole.error(err.message);\n\t}\n\n\n\trequestWaveformData = (url) => {\n\t\treturn fetch(url)\n\t\t  .then((response) => {\n\t\t\treturn response.arrayBuffer();\n\t\t  });\n\t  }\n\n\n\n\t//gdy mamy już instancje zrobioną i tylko aktualizujemy dane\n\tupdateSource = (container) => {\n\t\tif(this.peaks){\n\n\t\t\tlet data = this.getDataFromContainer(container);\n\n\t\t\t//pytam serwer o nowe dane do wyrenderowania - tutaj można uruchomić preloader\n\n\t\t\tthis.setState({\n\t\t\t\tisLoading: true,\n\t\t\t})\n\t\t\tthis.requestWaveformData(data.datPath)\n\t\t\t\t.then(waveformData => {\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t})\n\n\t\t\t\t\tthis.peaks.segments.removeAll();\n\t\t\t\t\t\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttitle: container.containerName,\n\t\t\t\t\t\tmediaUrl: data.audioPath,\n\t\t\t\t\t\twaveformData: {\n\t\t\t\t\t\t  arraybuffer: waveformData,\n\t\t\t\t\t\t},\n\t\t\t\t\t  };\n\t\t\t\t})\n\t\t\t\t.then(source => {\n\t\t\t\t\t\n\t\t\t\t\tthis.peaks.setSource(source, error => {\n\t\t\t\t\t\tif(error){\n\t\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.peaks.segments.add(data.segments);\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tcurrentSegments: [...data.segments],\n\t\t\t\t\t\t})\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.peaks.zoom.setZoom(this.state.currentZoom);\n\n\t\t\t\t})\n\n\t\t\t\n\t\t}\n\t}\n\n\t\n\tcomponentDidUpdate = (prevProps, prevState) => {\n\n\t\t//kiedy tylko zmieni się container, wtedy ładuje audio i binary data z serwera i uruchamiam podgląd\n\t\tif(prevProps.containerForPreview !== this.props.containerForPreview){\n\t\t\t\n\t\t\t//tutaj robie jedynie update po tym jak peaks jest już zainicjowany\n\n\t\t\tthis.setState({\n\t\t\t\tczyZmienionoSegmenty: false,\n\t\t\t\tisPlaying: false,\n\t\t\t\tspeedFactor: 1,\n\t\t\t\tisLoading: false,\n\t\t\t})\n\n\t\t\tthis.updateSource(this.props.containerForPreview);\n\n\t\t\tswitch(this.props.toolType){\n\t\t\t\tcase(\"VAD\"):\n\t\t\t\t\tconsole.log('VAD')\n\t\t\t\t\tbreak;\n\t\t\t\tcase(\"DIA\"):\n\t\t\t\t\tconsole.log('DIA')\n\t\t\t\t\tbreak;\n\t\t\t\tcase(\"REC\"):\n\t\t\t\t    this.loadTranscription();\n\t\t\t\t\tbreak;\n\t\t\t\tcase(\"SEG\"):\n\t\t\t\t\tconsole.log('SEG')\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\n\t\t// jeżeli zmieniła się transkrypcja\n\t\tif(this.props.transcriptionData){\n\t\t\tif(prevProps.transcriptionData !== this.props.transcriptionData){\n\t\t\t\t\t\tif(this.props.containerForPreview.ifREC){\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\ttext: this.props.transcriptionData.blocks[0].data.text,\n\t\t\t\t\t\t\t\ttranscriptHasChanged: false,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\ttext: '',\n\t\t\t\ttranscriptHasChanged: false,\n\t\t\t})\n\t\t}\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.loadNewAudioToEditor(this.props.containerForPreview);\n\t}\n\n\n\tupdateSegment = (newSegment) => {\n\n\n\t\t//tutaj sprawdzam czy jakiś segment nie nachodzi już na istniejący.\n\t\t\n\t\t//iteruje po obecnie istniejących segmentach\n\t\tlet allsegments = this.peaks.segments.getSegments();\n\n\t\t//iteruje po wszyskich istniejących i porównuje obecny z wszystkimi istniejącymi\n\n\t\t/*\n\t\t\twstawilem\n\t\t\t{\n\t\t\t\tstartTime: 1.26,\n\t\t\t\tendTime: 4.08,\n\t\t\t\tid: peaks.segment.3\n\t\t\t}\n\n\t\t\twszystkie inne\n\n\t\t\t{\n\t\t\t\tstartTime: 11.14\n\t\t\t\tendTime: 13.01,\n\t\t\t\tid: peaks.segment.1\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartTime: 13.392\n\t\t\t\tendTime: 18.77,\n\t\t\t\tid: peaks.segment.2\n\t\t\t},\n\t\t\t{\n\t\t\t\tstartTime: 1.256 \n\t\t\t\tendTime: 4.088,\n\t\t\t\tid: peaks.segment.3\n\t\t\t}\n\t\t*/\n\n\n\t\t//rozpoznaje ktore leza w obrebie modyfikowanego\n\t\tlet ktoreIstniejaceWModified = [];\n\n\n\t\t//wyłuskuje to segmenty które nachodzą się ze zmodyfikowany\n\t\tfor(let currentseg of allsegments){\n\n\t\t   //jeżeli obecny to przeskakuje\n\t\t   if(currentseg.id == newSegment.id) continue;\n\n\t\t   if((currentseg.startTime >= newSegment.startTime) && (currentseg.startTime <= newSegment.endTime)){\n\t\t\t   //startTime tego segmentu lezy w zmodyfikownym segmencie\n\t\t\t   ktoreIstniejaceWModified.push({\n\t\t\t\tstartTime: currentseg.startTime,\n\t\t\t\tendTime: currentseg.endTime,\n\t\t\t\tlabelText: currentseg.labelText,\n\t\t\t\tid: currentseg.id,\n\t\t\t   });\n\t\t   }\n\n\n\t\t   if(((currentseg.startTime <= newSegment.startTime) && (currentseg.startTime <= newSegment.endTime)) && (currentseg.endTime >= newSegment.startTime && currentseg.endTime >= newSegment.endTime)){\n\t\t\t//startTime tego segmentu lezy w zmodyfikownym segmencie\n\t\t\tktoreIstniejaceWModified.push({\n\t\t\t startTime: currentseg.startTime,\n\t\t\t endTime: currentseg.endTime,\n\t\t\t labelText: currentseg.labelText,\n\t\t\t id: currentseg.id,\n\t\t\t});\n\t\t}\n\n\t\t \n\n\t\t   if((currentseg.endTime >= newSegment.startTime) && (currentseg.endTime <= newSegment.endTime)){\n\t\t\t//endTime tego segmentu lezy w zmodyfikownym segmencie\n\t\t\t  ktoreIstniejaceWModified.push({\n\t\t\t\tstartTime: currentseg.startTime,\n\t\t\t\tendTime: currentseg.endTime,\n\t\t\t\tlabelText: currentseg.labelText,\n\t\t\t\tid: currentseg.id,\n\t\t\t   });\n\t\t   }\n\n\t\t}\n\n\t\t//teraz usuwam wszystkie (łącznie z nowo dodanym) i tworze nowy ktory nachodzi odpowiednio na granice nachodzacych\n\n\t\tif(ktoreIstniejaceWModified.length > 0){\n\n\t\t\t\t\t\t\t\t\n\t\t\tlet minTime = 999999999999;\n\t\t\tlet maxTime = 0;\n\n\t\t\tlet nowyLabel = \"Custom\";\n\t\t\tfor(let nachodzacy of ktoreIstniejaceWModified){\n\t\t\t\tif(nachodzacy.startTime <= minTime) minTime = nachodzacy.startTime;\n\t\t\t\tif(nachodzacy.endTime >= maxTime) maxTime = nachodzacy.endTime;\n\n\t\t\t\t//let numerekFromId = nachodzacy.id.substr(nachodzacy.id.lastIndexOf('.')+1,nachodzacy.id.length);\n\t\t\t\tnowyLabel = \"Custom \" +this.state.segmentCounter;\n\t\t\t\tthis.peaks.segments.removeById(nachodzacy.id);\n\t\t\t}\n\n\t\t\t//teraz zajmuje sie modyfikowanym\n\t\t\tif(newSegment.startTime <= minTime) minTime = newSegment.startTime;\n\t\t\tif(newSegment.endTime >= maxTime) maxTime = newSegment.endTime;\n\t\t\tthis.peaks.segments.removeById(newSegment.id);\n\n\t\t\t//dodaje nowy wlasny\n\t\t\tthis.peaks.segments.add({\n\t\t\t\tstartTime: minTime,\n\t\t\t\tendTime: maxTime,\n\t\t\t\teditable: true,\n\t\t\t\tcolor: '#394b55',\n\t\t\t\tlabelText: nowyLabel,\n\t\t\t})\n\t\t}\n\n\t\tlet segmenty = this.convertPeaksSegments();\n\n\t\tthis.setState({\n\t\t\tsegments: [...segmenty],\n\t\t\tczyZmienionoSegmenty: true,\n\t\t})\n\t\n\t\t\n\t};\n\n\n\n\tupdateSegmentLabel = (id, label) => {\n\t\tlet segment = this.peaks.segments.getSegment(id);\n\t\tsegment.update({labelText: label})\n\n\t\tthis.setState({\n\t\t\tczyZmienionoSegmenty: true,\n\t\t})\n\n\n\t\tconsole.log(\"update Segment Label \" + id + \" \" + label);\n\t}\n\n\tupdateSegmentStartTime = (id, newValue) => {\n\t\tlet segment = this.peaks.segments.getSegment(id);\n\t\tsegment.update({startTime: parseFloat(newValue)})\n\n\t\tthis.setState({\n\t\t\tczyZmienionoSegmenty: true,\n\t\t})\n\n\n\t\tconsole.log(\"update Segment Start Time  \" + id + \" \" + newValue);\n\t}\n\n\tupdateSegmentEndTime = (id, newValue) => {\n\t\tlet segment = this.peaks.segments.getSegment(id);\n\t\tsegment.update({endTime: parseFloat(newValue)})\n\n\t\tthis.setState({\n\t\t\tczyZmienionoSegmenty: true,\n\t\t})\n\n\t\tconsole.log(\"update Segment End Time \" + id + \" \" + newValue);\n\t}\n\n\n\tsaveSegmentChanges = () => {\n\n\t\t//konwertuje segmenty z peaks js na bardziej uzyteczne\n\t\tlet simplerSegments = this.convertPeaksSegments();\n\n\n\t\tswitch(this.props.toolType){\n\t\t\tcase(\"VAD\"):\n\t\t\t\tthis.props.onSaveVADSegments(this.props.containerForPreview, this.props.toolType, this.props.token, simplerSegments);\n\t\t\t\tbreak;\n\t\t\tcase(\"DIA\"):\n\t\t\t\tthis.props.onSaveDIASegments(this.props.containerForPreview, this.props.toolType, this.props.token, simplerSegments);\n\t\t\t\tbreak;\n\t\t\tcase(\"REC\"):\n\t\t\tconsole.log('REC')\n\t\t\t\tbreak;\n\t\t\tcase(\"SEG\"):\n\t\t\t\tconsole.log('SEG')\n\t\t\t\tbreak;\n\t\t}\n\n\n\t}\n\n\taddSegment = () => {\n\t\tif(this.peaks){\n\n\t\t\tlet newSegment = {\n\t\t\t\tstartTime: this.peaks.player.getCurrentTime(),\n\t\t\t\tendTime: this.peaks.player.getCurrentTime() + 3,\n\t\t\t\tlabelText: 'Segment ' + this.state.segmentCounter,\n\t\t\t\teditable: true,\n\t\t\t};\n\n\n\t\t\tthis.peaks.segments.add(newSegment);\n\n\t\t\tlet segmenty = this.convertPeaksSegments();\n\n\t\t\tthis.updateSegment(newSegment);\n\t\t\t\n\t\t\tthis.setState({\n\t\t\t\tsegmentCounter: this.state.segmentCounter+1,\n\t\t\t\t//czyZmienionoSegmenty: true,\n\t\t\t\t//currentSegments: [...segmenty],\n\t\t\t})\n\n\t\t\t\n\t\t}\n\t}\n\n\n\t//ładuje kolejny element z listy\n\tloadNextElement = () => {\n\t\tthis.props.onLoadNextElement();\n\t}\n\n\ttextChanged = (evt) => {\n\t\t// console.log(evt.target.value)\n\t   // console.log(this.state.transcriptionData)\n\t\t this.setState({\n\t\t\t text: evt.target.value,\n\t\t\t transcriptHasChanged: true,\n\t\t })\n\t\t this.props.onTranscriptionChanged();\n\t }\n\n\n\t loadTranscription = () => {\n        if(this.props.containerForPreview.ifREC){\n            this.props.onLoadExistingTranscription(this.props.containerForPreview, this.props.toolType, this.props.token);\n        }  else {\n            this.setState({\n                text: \"\",\n                transcriptHasChanged: false,\n            })\n        }\n        \n        if(this.props.containerForPreview.ifDIA){\n            //this.props.onLoadExistingTranscription(this.props.container, this.props.toolType, this.props.token);\n        } else  if(this.props.containerForPreview.ifSEG){\n           // this.props.onLoadExistingTranscription(this.props.container, this.props.toolType, this.props.token);\n        } else  if(this.props.containerForPreview.ifVAD){\n           // this.props.onLoadExistingTranscription(this.props.container, this.props.toolType, this.props.token);\n        }  \n\t}\n\t\n\n\topenPreviewInEMU = () => {\n\t\t//this.props.openPreviewInEMU(this.props.containerForPreview, this.props.token);\n\n\t\t//musze skonstruować coś takiego\n\t\t//https://ips-lmu.github.io/EMU-webApp/?audioGetUrl=https:%2F%2Fmowa.clarin-pl.eu%2Ftools%2Fdownload%2F5ee14ac666eca6f9d593b059&labelGetUrl=https:%2F%2Fmowa.clarin-pl.eu%2Ftools%2Fannot%2F5ef6186e66eca66f0d79e978&labelType=annotJSON\n\t\n\t\tlet container = this.props.containerForPreview;\n\t\tconst userId = container.owner;\n\t\tconst projectId = container.project;\n\t\tconst sessionId = container.session;\n\t\tconst fileName = container.fileName;\n\t\tconst containerId = container._id;\n\t\tconst token = this.props.token;\n\n\t\tlet audioGetUrl = process.env.REACT_APP_API_URL+ \"/repoFiles/download/\"+containerId+\"/audio?api_key=\"+token;\n\t\tlet labelGetUrl = process.env.REACT_APP_API_URL+ \"/repoFiles/download/\"+containerId+\"/SEGtextGrid?api_key=\"+token;\n\t\tlet labelType='TEXTGRID';\n\n\t\tlet finalPathToEMU = encodeURI('https://ips-lmu.github.io/EMU-webApp/?audioGetUrl=' + audioGetUrl + '&labelGetUrl=' + labelGetUrl + '&labelType=' + labelType);\n\n\t\twindow.open(finalPathToEMU, \"_blank\");\n\t\n\t}\n\n\n\n\trender() {\n\n\t\t//przycisk przycisku podglądu w EMU\n\t\tlet previewInEMUBtn = null;\n\t\tif(this.props.containerForPreview.ifSEG){\n\t\t\tpreviewInEMUBtn = <ButtonLeftBar \n                        napis={\"Otwórz w EMU\"}\n                        iconType=\"file\"\n                        icon={null}\n                        customeStyle={{textAlign:'center', marginBottom: '20px'}}\n                        disabled={false}\n                        whenClicked={this.openPreviewInEMU}/>\n\t\t}\n\n\n\t\t\n\n\t\t// widok edytora tekstowego\n\t\tlet transcriptWindow = null;\n\t\tif(this.props.toolType == \"REC\"){\n\t\t\ttranscriptWindow = <TextEditor \n\t\t\ttoolType={this.props.toolType} \n\t\t\tcontainer={this.props.containerForPreview}\n\t\t\tonLoadNextElement={this.loadNextElement}\n\t\t\ttext = {this.state.text}\n\t\t\tonTextChanged = {this.textChanged}\n\t\t\tonLoadTranscription ={this.loadTranscription}\n\t\t\tonSaveChanges={this.saveChanges}\n\t\t\ttranscriptHasChanged = {this.state.transcriptHasChanged}\n\t\t\t/>\t\t\n\t\t}\n\n\t\t// widok segment edytora\n\t\tlet segmentEditor = null;\n\t\tif(this.peaks && (this.props.toolType=='VAD' || this.props.toolType=='DIA')){\n\t\t\tif(this.state.currentSegments.length > 0){\n\t\t\t\tconsole.log(\"UPDATE\")\n\t\t\t\tsegmentEditor = <SegmentEditor \n\t\t\t\tczyZmieniono={this.state.czyZmienionoSegmenty}\n\t\t\t\tsegments={this.peaks.segments.getSegments()}\n\t\t\t\tonUpdateSegmentLabel={(id, label)=>this.updateSegmentLabel(id, label)} \n\t\t\t\tonUpdateSegmentStartTime={(id, newValue)=>this.updateSegmentStartTime(id, newValue)}\n\t\t\t\tonUpdateSegmentEndTime={(id, newValue)=>this.updateSegmentEndTime(id, newValue)}\n\t\t\t\tonSaveSegmentChanges={this.saveSegmentChanges}\n\t\t\t\t/>\n\t\t\t}\t\n\t\t}\n\n\n\n\t\t//jaką ikonkę wyświetlić na przycisku play\n\t\tlet playPauseicon = null;\n\t\tif(this.state.isPlaying){\n\t\t\tplayPauseicon = <FontAwesomeIcon icon={faPause} className=\"faIcon\" />\n\t\t} else {\n\t\t\tplayPauseicon = <FontAwesomeIcon icon={faPlay} className=\"faIcon\" />\n\t\t}\n\n\n\t\t// widok podglądu audio\n\t\tlet audioPreview = null;\n\t\tif(this.props.containerForPreview == \"\"){\n\t\t\taudioPreview = null\n\t\t} else {\n\t\t\taudioPreview = (\n\t\t\t\t<>\n\t\t\t\t\t\n\t\t\t\t\t<div id=\"demo-controls\">\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t\t\t<div id=\"controls\">\n\n\t\t\t\t\t\t\t\t\t\t<button data-tip data-for='fullscreen' data-action=\"resize\"><FontAwesomeIcon icon={faExpand} className=\"faIcon\" /></button>\n\t\t\t\t\t\t\t\t\t\t<ReactTooltip id=\"fullscreen\" delayShow={500}>\n\t\t\t\t\t\t\t\t\t\t\t<span>Full screen</span>\n\t\t\t\t\t\t\t\t\t\t</ReactTooltip>\n\n\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t\t\t<button data-tip data-for='playpause' data-action=\"play\" >{playPauseicon}</button>\n\t\t\t\t\t\t\t\t\t\t<ReactTooltip id=\"playpause\" delayShow={500}>\n\t\t\t\t\t\t\t\t\t\t\t<span>Play/pause (Alt+l)</span>\n\t\t\t\t\t\t\t\t\t\t</ReactTooltip>\n\n\n\t\t\t\t\t\t\t\t\t\t<button data-tip data-for='rewind3' data-action=\"back-3\" onClick={this.rewind3secBack}><FontAwesomeIcon icon={faHistory} className=\"faIcon\" /> 3 sec.</button>\n\t\t\t\t\t\t\t\t\t\t<ReactTooltip id=\"rewind3\" delayShow={500}>\n\t\t\t\t\t\t\t\t\t\t\t<span>Powtórz ostatnie 3 sek. (Alt+k)</span>\n\t\t\t\t\t\t\t\t\t\t</ReactTooltip>\n\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<button data-tip data-for='rewind5' data-action=\"back-5\" onClick={this.rewind5secBack}><FontAwesomeIcon icon={faHistory} className=\"faIcon\" /> 5 sec.</button>\n\t\t\t\t\t\t\t\t\t\t<ReactTooltip id=\"rewind5\" delayShow={500}>\n\t\t\t\t\t\t\t\t\t\t\t<span>Powtórz ostatnie 5 sek. (Alt+j)</span>\n\t\t\t\t\t\t\t\t\t\t</ReactTooltip>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<button data-tip data-for='increaseSpeed' data-action=\"speed-up\" onClick={this.increasePlaybackSpeed}><FontAwesomeIcon icon={faClock} className=\"faIcon\" /> <FontAwesomeIcon icon={faLongArrowAltUp} className=\"faIcon\" /> <span style={{fontSize:'0.7em', width:'25px', display: 'inline-block'}}>x {this.state.speedFactor}</span></button>\n\t\t\t\t\t\t\t\t\t\t<ReactTooltip id=\"increaseSpeed\" delayShow={500}>\n\t\t\t\t\t\t\t\t\t\t\t<span>Szybciej (Alt+i)</span>\n\t\t\t\t\t\t\t\t\t\t</ReactTooltip>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<button data-tip data-for='decreaseSpeed' data-action=\"slow-down\" onClick={this.decreasePlaybackSpeed}><FontAwesomeIcon icon={faClock} className=\"faIcon\" /> <FontAwesomeIcon icon={faLongArrowAltDown} className=\"faIcon\" /><span style={{fontSize:'0.7em', width:'25px', display: 'inline-block'}}> x {this.state.speedFactor}</span></button>\n\t\t\t\t\t\t\t\t\t\t<ReactTooltip id=\"decreaseSpeed\" delayShow={500}>\n\t\t\t\t\t\t\t\t\t\t\t<span>Wolniej (Alt+o)</span>\n\t\t\t\t\t\t\t\t\t\t</ReactTooltip>\n\n\t\t\t\t\t\t\t\t\t\t<button data-tip data-for='zoomin' data-action=\"zoom-in\"><FontAwesomeIcon icon={faSearchPlus} className=\"faIcon\" /> </button>\n\t\t\t\t\t\t\t\t\t\t<ReactTooltip id=\"zoomin\" delayShow={500}>\n\t\t\t\t\t\t\t\t\t\t\t<span>Przybliż</span>\n\t\t\t\t\t\t\t\t\t\t</ReactTooltip>\n\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<button data-tip data-for='zoomout' data-action=\"zoom-out\"><FontAwesomeIcon icon={faSearchMinus} className=\"faIcon\" /> </button>\n\t\t\t\t\t\t\t\t\t\t<ReactTooltip id=\"zoomout\" delayShow={500}>\n\t\t\t\t\t\t\t\t\t\t\t<span>Oddal</span>\n\t\t\t\t\t\t\t\t\t\t</ReactTooltip>\n\n\t\t\t\t\t\t\t\t\t\t<button data-tip data-for='addSegment' data-action=\"add-segment\" onClick={this.addSegment}><FontAwesomeIcon icon={faGripLinesVertical} className=\"faIcon\" /></button>\n\t\t\t\t\t\t\t\t\t\t<ReactTooltip id=\"addSegment\" delayShow={500}>\n\t\t\t\t\t\t\t\t\t\t\t<span>Dodaj segment</span>\n\t\t\t\t\t\t\t\t\t\t</ReactTooltip>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<h3><b>{this.props.containerForPreview.containerName}</b></h3>\n\t\t\t\t\t\t\t\t\t<p style={{fontSize: '11px'}}>{this.props.containerForPreview._id}</p>\n\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<audio id=\"audio\" controls={false} ref={this.audioPlayer}>\n\t\t\t\t\t\t\t\t\t<source src={this.state.audioPath} />\n\t\t\t\t\t\t\t\t\t\tYour browser does not support the audio element.\n\t\t\t\t\t\t\t\t\t</audio>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div id=\"waveform-container\">\n\t\t\t\t\t\t<div id=\"overview-container\"></div>\n\t\t\t\t\t\t<div id=\"zoomview-container\"></div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\n\n\n\t\treturn (\n\t\t\t<Hotkeys \n\t\t\t\t\tkeyName=\" alt+j, alt+k, alt+l, alt+i, alt+o,alt+n,alt+m\" \n\t\t\t\t\tonKeyDown={this.onKeyDown.bind(this)}\n\t\t\t\t\tfilter={(event) => {\n\t\t\t\t\t//\tconsole.log(event)\n\t\t\t\t\t   return true;\n\t\t\t\t\t }}\n\t\t\t\t>\n\t\t\t\t\t<Aux>\n\t\t\t\t\t\t{this.state.isLoading ? loader(): null}\n\t\t\t\t\t\t<div className=\"AudioEditor\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t\taudioPreview\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpreviewInEMUBtn\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsegmentEditor\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttranscriptWindow\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Aux>\n\t\t\t</Hotkeys>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\n\t\t// DIAItems: state.diaR.filesToUpload,\n\t\t//\tmodalDisplay: state.projectR.modal,\n\t\t//\tifRefusedAudio: state.segR.ifRefusedAudio,\n\t\ttoken: state.homeR.token,\n\n\t\ttranscriptionSaved: state.projectR.transcriptionSaved,\n        transcriptionData: state.recR.transcriptionData,\n\n\n\t\tcontainerBinaryPreviewREC:state.repoR.containerBinaryPreviewREC,\n\t\tcontainerBinaryPreviewVAD:state.repoR.containerBinaryPreviewVAD,\n\t\tcontainerBinaryPreviewDIA:state.repoR.containerBinaryPreviewDIA,\n\t\tcontainerBinaryPreviewSEG:state.repoR.containerBinaryPreviewSEG,\n\n\t\taudioFileREC:state.repoR.containerAudioFileREC,\n\t\taudioFileVAD:state.repoR.containerAudioFileVAD,\n\t\taudioFileDIA:state.repoR.containerAudioFileDIA,\n\t\taudioFileSEG:state.repoR.containerAudioFileSEG,\n\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\n\t\topenPreviewInEMU: (container, token) => dispatch(audioEditorActions.openContainerInEMU(container, token)),\n\n\t\tonSaveVADSegments: (container, toolType, token, segments) => dispatch(audioEditorActions.saveVADSegments(container, toolType, token, segments)),\n\t\tonSaveDIASegments: (container, toolType, token, segments) => dispatch(audioEditorActions.saveDIASegments(container, toolType, token, segments)),\n\n\t\tonSaveTranscription: (container, toolType, token, transcription) => dispatch(audioEditorActions.saveTranscription(container, toolType, token, transcription)),\n\t\tonTranscriptionChanged: () => dispatch(audioEditorActions.transcriptionChanged()),\n\t\tonLoadExistingTranscription: (container, toolType, token) => dispatch(audioEditorActions.loadTranscription(container, toolType, token)),\n\t\t// onLoadAudioForPreview: (container, toolType, token) => dispatch(audioEditorActions.loadAudioForPreview(container, toolType, token)),\n         // onLoadBinaryForPreview: (container, toolType, token) => dispatch(audioEditorActions.loadBinaryForPreview(container, toolType, token)),\n\t\t//onOpenModalHandler: () => dispatch(segmentActions.openModalProject()),\n       // onCloseModalHandler: () => dispatch(segmentActions.closeModalProject()),\n\t}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AudioEditor));","import * as actionTypes from '../actionsTypes';\nimport axios from 'axios';\n\n// ###################################################################\n// ######## otwieram podgląd contanera w EMU ##########\n// ###################################################################\n\nexport const openContainerInEMUSuccess = (dataForEMU) => {\n    return {\n        type: actionTypes.OPEN_CONTAINER_IN_EMU_SUCCESS,\n        dataForEMU: dataForEMU,\n    }\n}\n\nexport const openContainerInEMUFailed = (error) => {\n    return {\n        type: actionTypes.OPEN_CONTAINER_IN_EMU_FAILED,\n        error: error,\n    }\n}\n\nexport const openContainerInEMU = (container,token) => {\n    return dispatch => {\n        axios.get('/seg/openInEMU'+\"/\"+container._id,\n            {\n                headers: {\n                    Authorization: 'Bearer ' + token\n                }\n            })\n            .then(dataForEMU => {\n                dispatch(openContainerInEMUSuccess(dataForEMU));\n            })\n            .catch(error =>  {\n                dispatch(openContainerInEMUFailed(error));\n            })\n    }\n}\n\n// ###################################################################\n// ######## jeżeli tuż po zapisaniu zmieniłem coś w polu txt ##########\n// ###################################################################\n\nexport const transcriptionChanged = () => {\n    return {\n        type: actionTypes.TRANSCRIPTION_CHANGED,\n    }\n}\n\n\n// ###################################################################\n// ######## ładowanie transkrypcji do edytora ##########\n// ###################################################################\n\nexport const loadTranscriptionSuccess = (transcriptData) => {\n    return {\n        type: actionTypes.LOAD_TRANSCRIPTION,\n        transcriptData: transcriptData,\n    }\n}\n\nexport const loadTranscriptionFailed = (error) => {\n    return {\n        type: actionTypes.LOAD_TRANSCRIPTION_FAILED,\n        error: error,\n    }\n}\n\nexport const loadTranscription = (container, toolType, token) => {\nreturn dispatch => {\n\n    axios.get('/recognition/loadTranscription'+\"/\"+container._id,\n        {\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        })\n        .then(transcriptData => {\n            dispatch(loadTranscriptionSuccess(transcriptData));\n        })\n        .catch(error =>  {\n            dispatch(loadTranscriptionFailed(error));\n        })\n\n}\n}\n\n\n// ###################################################################\n// ######## zapisywanie segmentów DIA ##########\n// ###################################################################\n\nexport const saveDIASegmentsSuccess = (message, updatedSegments, containerId, toolType) => {\n    return {\n        type: actionTypes.SAVE_DIA_SEGMENTS_SUCCESS,\n        message: message,\n        containerId: containerId,\n        updatedSegments: updatedSegments,\n        toolType: toolType,\n    }\n}\n\nexport const saveDIASegmentsFailed = (error, containerId, toolType) => {\n    return {\n        type: actionTypes.SAVE_DIA_SEGMENTS_FAILED,\n        error: error,\n        containerId: containerId,\n        toolType: toolType,\n    }\n}\n\nexport const saveDIASegments = (container, toolType, token, segments) => {\nreturn dispatch => {\n\n    console.log(\"zapisuje DIA segmenty\")\n    axios.put('/dia/saveSegments', {\n        segments: segments,\n        toolType: toolType,\n        container: container,\n    },{\n        headers: {\n            Authorization: 'Bearer ' + token\n        }\n    })\n    .then(response => {\n        console.log(response)\n        dispatch(saveDIASegmentsSuccess(response.data.message, response.data.updatedSegments, container._id, toolType));\n      //  dispatch(closeModal());\n    })\n    .catch(error => {\n        console.log(error)\n       dispatch(saveDIASegmentsFailed(error, container._id, toolType));\n    });\n}\n}\n\n\n// ###################################################################\n// ######## zapisywanie segmentów VAD ##########\n// ###################################################################\n\nexport const saveVADSegmentsSuccess = (message, updatedSegments, containerId, toolType) => {\n    return {\n        type: actionTypes.SAVE_VAD_SEGMENTS_SUCCESS,\n        message: message,\n        containerId: containerId,\n        updatedSegments: updatedSegments,\n        toolType: toolType,\n    }\n}\n\nexport const saveVADSegmentsFailed = (error, containerId, toolType) => {\n    return {\n        type: actionTypes.SAVE_VAD_SEGMENTS_FAILED,\n        error: error,\n        containerId: containerId,\n        toolType: toolType,\n    }\n}\n\nexport const saveVADSegments = (container, toolType, token, segments) => {\nreturn dispatch => {\n\n    console.log(\"zapisuje VAD segmenty\")\n    axios.put('/vad/saveSegments', {\n        segments: segments,\n        toolType: toolType,\n        container: container,\n    },{\n        headers: {\n            Authorization: 'Bearer ' + token\n        }\n    })\n    .then(response => {\n        console.log(response)\n        dispatch(saveVADSegmentsSuccess(response.data.message, response.data.updatedSegments, container._id, toolType));\n      //  dispatch(closeModal());\n    })\n    .catch(error => {\n        console.log(error)\n       dispatch(saveVADSegmentsFailed(error, container._id, toolType));\n    });\n}\n}\n\n\n// ###################################################################\n// ######## zapisywanie transkrypcji ##########\n// ###################################################################\n\nexport const saveTranscriptionSuccess = (message, containerId, toolType) => {\n        return {\n            type: actionTypes.SAVE_TRANSCRIPTION_SUCCESS,\n            message: message,\n            containerId: containerId,\n            toolType: toolType,\n        }\n}\n\nexport const saveTranscriptionFailed = (error, containerId, toolType) => {\n        return {\n            type: actionTypes.SAVE_TRANSCRIPTION_FAILED,\n            error: error,\n            containerId: containerId,\n            toolType: toolType,\n        }\n}\n\nexport const saveTranscription = (container, toolType, token, transcription) => {\n    return dispatch => {\n\n        axios.put('/recognition/saveTranscription', {\n            transcription: transcription,\n            toolType: toolType,\n            container: container,\n        },{\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        })\n        .then(response => {\n            //console.log(\"from action:\")\n            console.log(response)\n            dispatch(saveTranscriptionSuccess(response.data.message, container._id, toolType));\n          //  dispatch(closeModal());\n        })\n        .catch(error => {\n          //  console.log(error)\n           dispatch(saveTranscriptionFailed(error, container._id, toolType));\n        });\n    }\n}\n\n// ###################################################################\n// ######## ładowanie pliku audio do edytora audio ##########\n// ###################################################################\n\nexport const loadAudioForPreviewSuccess = (audioFile, toolType) => {\n    return {\n        type: actionTypes.LOAD_AUDIO_FOR_PREVIEW,\n        containerAudioFile: audioFile,\n        toolType: toolType,\n    }\n}\n\nexport const loadAudioForPreviewFailed = (error) => {\n    return {\n        type: actionTypes.LOAD_AUDIO_FOR_PREVIEW_FAILED,\n        error: error,\n    }\n}\n\nexport const loadAudioForPreview = (container, toolType, token) => {\n    return dispatch => {\n\n        \n        axios.get('/repoFiles/loadAudioFile/'+toolType+\"/\"+container._id,\n        {\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        })\n        .then( audioFile => {\n            dispatch(loadAudioForPreviewSuccess(audioFile, toolType));\n        })\n        .catch(error =>  {\n            dispatch(loadAudioForPreviewFailed(error));\n        })\n\n        \n    }\n}\n\n\n\n// ###################################################################\n// ######## ładowanie binary DAT do edytora audio ##########\n// ###################################################################\n\nexport const loadBinaryForPreviewSuccess = (containerBinaryData, toolType) => {\n    return {\n        type: actionTypes.LOAD_BINARY_FOR_PREVIEW,\n        containerBinaryData: containerBinaryData,\n        toolType: toolType,\n    }\n}\n\nexport const loadBinaryForPreviewFailed = (error) => {\n    return {\n        type: actionTypes.LOAD_BINARY_FOR_PREVIEW_FAILED,\n        error: error,\n    }\n}\n\nexport const loadBinaryForPreview = (container, toolType, token) => {\n    return dispatch => {\n\n        \n        axios.get('/repoFiles/loadBinaryAudio/'+toolType+\"/\"+container._id,\n        {\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        })\n        .then( containerBinaryData => {\n            dispatch(loadBinaryForPreviewSuccess(containerBinaryData, toolType));\n        })\n        .catch(error =>  {\n            dispatch(loadBinaryForPreviewFailed(error));\n        })\n\n        \n    }\n}\n\n\n","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './RecognitionTool.css';\nimport SettingBar from '../SettingBar/SettingBar';\nimport FooterTool from '../FooterTool/FooterTool';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\nimport ButtonLeftBar from '../../../components/UI/ButtonLeftBar/ButtonLeftBar';\nimport { connect } from 'react-redux';\nimport * as recognitionActions from '../../../store/actions/index';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ToolItem from '../ToolItem/ToolItem';\n\n\nimport AudioEditor from '../AudioEditor/AudioEditor';\n\nclass RecognitionTool extends Component {\n\n    state = {\n        modal: false,\n        editorFullWidth: false,\n    }\n\n\n    //otwiera okno modalne\n    openModalHandler = () => {\n        this.props.onOpenModalHandler();\n    }\n\n    //zamyka okno modalne\n    closeModalHandler = () => {\n        //this.props.onCloseModalHandler();\n        this.setState({\n            modal: false,\n        })\n    }\n\n    //rozpoczynam rozpoznawanie \n    startBatchRecognition = () => {\n\n        //wydobywam sama tablica plikow z entry \n        //bo entry to moja struktura danych\n        const audioFilesArray = this.props.containersForREC.map(entry => {\n            return entry.file;\n        })\n\n        const audioFilesIds = this.props.containersForREC.map(entry => {\n            return entry.id;\n        })\n\n        //console.log(audioFilesArray)\n\n        this.props.onStartBatchRecognition(audioFilesArray, audioFilesIds);\n        this.closeModalHandler();\n    }\n\n    //opens given container in preview window\n    openContainerInPreview = (container) => {\n        //console.log(e)\n        this.props.openContainerInRecoPreview(container);\n    }\n\n    makeEditorFullWidth = () => {\n        if(this.state.editorFullWidth == false){\n            this.setState({editorFullWidth: true});\n        } else {\n            this.setState({editorFullWidth: false});\n        }\n    }\n\n    runRECinBatch = () => {\n\n\t\tfor(let i = 0; i < this.props.containersForREC.length; i++){\n            let container = this.props.containersForREC[i];\n            if(container.ifREC == false){\n                this.runSpeechRecognition(container, \"REC\", this.props.token); \n            }\n\t\t}\n\t}\n\n    runSpeechRecognition = (container, toolType, token) => {\n        this.props.setContainerStatus(container._id, toolType, 'progress');\n\t\tthis.props.runSpeechRecognition(container, token); \n    }\n    \n\n    loadNextElement = () => {\n        //przegladam liste dodanych do rozpoznawania i ładuje kolejny o ile nie jest to ostatni\n        let foundIdx = 0;\n        for(let i=0;i<this.props.containersForREC.length;i++){\n            \n            let current = this.props.containersForREC[i];\n           // console.log(current)\n            //sprawdzam ktory obecnie jest edytowany\n            if(current._id == this.props.containerForPreview._id){\n                foundIdx = i;\n            }\n        }\n\n        if(foundIdx < this.props.containersForREC.length-1){\n            this.openContainerInPreview(this.props.containersForREC[foundIdx+1]);\n        } \n\n    }\n\n    removeToolItem = (container) => {\n        this.props.onRemoveElementFromRECList(container);\n    }\n\n    render() {\n\n        let szer1col = \"6 order-1\";\n        let szer2col = \"6 order-2\";\n\n        if(this.state.editorFullWidth == true) {\n            szer1col = \"12 order-2\";\n            szer2col = \"12 order-1\";\n        } else {\n            szer1col = \"6 order-1\";\n            szer2col = \"6 order-2\";\n        }\n\n\n        let recoIcon = <FontAwesomeIcon icon={faFileAlt} /> ;\n\n        let filelist = null;\n\n        if (this.props.containersForREC.length > 0) {\n\n                filelist = this.props.containersForREC.map((file, i) => {\n\n                    return (\n                        <ToolItem \n                            key={\"key\" + i} \n                            container={file}\n                            type=\"REC\"\n                            status={file.statusREC}\n                            openPreview = {this.openContainerInPreview}\n                            runTool={(container, toolType, token) => this.runSpeechRecognition(container, toolType, token)}\n                            onRemoveItem={this.removeToolItem}\n                            errorMessage={file.errorMessage}\n                        />\n                    )\n                }  \n            )\n        }\n\n\n        return (\n            <Aux>\n\n                <LeftSiteBar\n                    czyTopPart=\"true\"\n                    desc={(<div>\n                        <div>Przydatne skróty klawiaturowe podczas tworzenia transkrypcji to: </div>\n                        <div> <b>[Alt+l]</b> - play/pausa </div>\n                        <div> <b>[Alt+k]</b> - powtórz 3 sek.</div>\n                        <div> <b>[Alt+j]</b> - powtórz 5 sek.</div>\n                        <div> <b>[Alt+i]</b> - przyśpiesz.</div>\n                        <div> <b>[Alt+o]</b> - zwolnij.</div>\n                        <div> <b>[Alt+m]</b> - zapisz transkrypcje.</div>\n                        <div> <b>[Alt+n]</b> - załaduj kolejny plik.</div>\n                        <div>Możesz transkrybować nie odrywając rąk od pola tekstowego!</div>\n                        </div>)\n                    } >\n\n                    <ButtonLeftBar \n                        napis=\"Uruchom rozpoznawanie dla wszystkich\"\n                        iconType=\"file\"\n                        icon={recoIcon}\n                        customeStyle={null}\n                        disabled={false}\n                        whenClicked={this.runRECinBatch}/>\n\n\n                </LeftSiteBar>\n\n                <SettingBar />\n\n                <section className=\"Content\" data-scrollbar>\n\n                    <div className={[\"container-fluid\", \"RecognitionTool\"].join(' ')}>\n                        <div className=\"tool-desc\">\n                            <h2>Transkrypcje</h2>\n                            <p>Zamiana nagrania mowy na zapis ortograficzny.</p>\n                            \n\n                        </div>\n\n                        <div className=\"tool-body\">\n                     \n\n                            <div className=\"row\">\n                                <div className={\"col-md-\"+szer1col}>\n                                    {\n                                        //<h3>Lista plików do przetworzenia</h3>\n                                    }\n                                   \n                                    <div className=\"file-list\">\n                                \n                                        {filelist}\n\n                                    </div>\n                                </div>\n\n                                <div className={\"col-md-\"+szer2col}>\n\n                                    {\n\t\t\t\t\t\t\t\t\t\tthis.props.containerForPreview != \"\" ? <AudioEditor\n\t\t\t\t\t\t\t\t\t\tcontainerForPreview={this.props.containerForPreview}\n                                        editorFullWidth = {this.makeEditorFullWidth}\n                                        onLoadNextElement = {this.loadNextElement}\n\t\t\t\t\t\t\t\t\t\ttoolType=\"REC\" /> : null\n\t\t\t\t\t\t\t\t\t}\n\n\n                                \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <FooterTool />\n\n                </section>\n            </Aux>\n        );\n    }\n\n\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        containersForREC: state.recR.containersForREC,\n        modalDisplay: state.projectR.modal,\n        refusedFileList: state.recR.refusedFileList,\n        containerForPreview: state.recR.recoContainerForPreview,\n\n        token: state.homeR.token,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n        openContainerInRecoPreview: (container) => dispatch(recognitionActions.openContainerInRecoPreview(container)),\n        onDrop: (files) => dispatch(recognitionActions.dropFiles(files)),\n        onOpenModalHandler: () => dispatch(recognitionActions.openModalProject()),\n        onCloseModalHandler: () => dispatch(recognitionActions.closeModalProject()),\n        onStartBatchRecognition: (audioFilesArray, audioFilesIds) => dispatch(recognitionActions.initBatchRecognition(audioFilesArray, audioFilesIds)),\n        onSetRefusionFiles: (refusedFiles) => dispatch(recognitionActions.setRefusedFiles(refusedFiles)),\n        setContainerStatus:  (containerId, toolType, status) => dispatch(recognitionActions.setContainerStatus(containerId, toolType, status)),\n        runSpeechRecognition: (container, token) => dispatch(recognitionActions.runSpeechRecognition(container, token)),\n        onRemoveElementFromRECList: (container) => dispatch(recognitionActions.removeRecognitionItem(container)),\n    \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecognitionTool);","import * as actionTypes from '../actionsTypes';\nimport axios from 'axios';\n\n\n\n\n\n\n// ###################################################################\n// ######## dodawanie contanera z podglądu w reco ##########\n// ###################################################################\n\nexport const openContainerInRecoPreview = (container) => {\n    return {\n        type: actionTypes.ADD_CONTAINER_TO_PREVIEW_RECO,\n        containerForPreview: container,\n    }\n}\n\n\n// ###################################################################\n// ######## dodawanie contanera z repo do panelu rozpoznawania ##########\n// ###################################################################\n\nexport const addContainerToReco = (container) => {\n    return {\n        type: actionTypes.ADD_CONTAINER_TO_RECO,\n        container: container,\n    }\n}\n\n\nexport const dropFiles = (files) => {\n    return {\n        type: actionTypes.DROP_FILES,\n        files: files\n    }\n}\n\n//################# removing item #################\nexport const removeRecognitionItem = (container) => {\n    //console.log('REMOVING: ' + fileId)\n    return {\n        type: actionTypes.REMOVE_RECOGNITION_ITEM,\n        container: container,\n    }\n}\n\n//################# updating file state ###########\nexport const updateFileState = (containerId, status, percLoaded) => {\n    return {\n        type: actionTypes.UPDATE_FILE_STATE,\n        containerId: containerId,\n        status: status,\n        percLoaded: percLoaded,\n    }\n}\n\n\n//########################################\n//####### SINGLE FILE RECOGNITION ########\n//#########################################\n\nexport const finishFileRecognitionAction = (message, entryId) => {\n    return updateFileState(entryId, 'done', 100);\n\n}\n\nexport const finishFileRecognitionActionFailed = (message, entryId) => {\n    return updateFileState(entryId, 'error', 0);\n}\n\nexport const initFileRecognition = (file, entryId, userId, projectId, audioFrom) => {\n    return dispatch => {\n\n        const data = new FormData();\n\n        console.log(file)\n\n        data.append('audioFiles', file);\n        data.append('audioFilesIds', entryId);\n        data.append('projectId', projectId);\n        data.append('userId', userId);\n        data.append('audioFrom', audioFrom);\n\n        let config = null;\n        if(audioFrom==\"repo\"){\n            config = {\n                headers: {\n                    'content-type': 'multipart/form-data'\n                },\n            }\n        } else {\n            config = {\n                headers: {\n                    'content-type': 'multipart/form-data'\n                },\n                onUploadProgress: ProgressEvent => {\n                    let percent = ProgressEvent.loaded / ProgressEvent.total*100;\n    \n                    console.log('wysłano: ' + percent + '%');\n                    \n                    //dispatch(changeUploadProgress(percent));\n    \n                    if(percent==100){\n                        //dispatch(uploadFilesFinish());\n                    }\n                }\n            }\n        }\n        \n\n        axios.post('/recognition/singleFile', data, config)\n            .then(response => {\n                const message = response.data.message;\n                const entryId = response.data.sentEntryId.sentEntryId;\n                //console.log(message)\n                // console.log(entryId)\n                dispatch(finishFileRecognitionAction(message, entryId));\n                //console.log(response);\n            })\n            .catch(error => {\n                dispatch(finishFileRecognitionActionFailed('Recognition error', entryId));\n                // console.log(error);\n            })\n    }\n}\n\n//######### opening file recognition to preview #####\nexport const openRecognitionAudioPreview = (entryId) => {\n    return {\n        type: actionTypes.OPEN_AUDIO_RECOGNITION_PREVIEW,\n        fileID: entryId,\n    }\n}\n\n\n//####### BATCH RECOGNITION ########\nexport const initBatchRecognition = (audioFilesArray, audioFilesIds) => {\n    return dispatch => {\n\n        let data = new FormData();\n\n        for (var i = 0; i < audioFilesArray.length; i++) {\n            data.append('audioFiles', audioFilesArray[i]);\n        }\n\n        data.append('audioFilesIds', audioFilesIds);\n\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n\n        axios.post('/recognition/multipleFiles', data, config)\n            .then(response => {\n\n                // console.log(response);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n}\n\nexport const setRefusedFiles = (refusedFiled) => {\n    return {\n        type: actionTypes.REFUSE_RECO_FILES,\n        refusedFileList: refusedFiled,\n    }\n}\n\n\n\n//export const INIT_BATCH_RECOGNITION = 'INIT_BATCH_RECOGNITION';\n//export const INIT_FILE_RECOGNITION = 'INIT_BATCH_RECOGNITION';\n//export const DROP_FILES = 'DROP_FILES';\n//export const UPDATE_FILE_STATE = 'UPDATE_FILE_STATE';","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport SettingBar from '../SettingBar/SettingBar';\nimport FooterTool from '../FooterTool/FooterTool';\nimport './SegmentTool.css';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\nimport ButtonLeftBar from '../../../components/UI/ButtonLeftBar/ButtonLeftBar';\nimport { connect } from 'react-redux';\nimport * as segmentActions from '../../../store/actions/index';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ToolItem from '../ToolItem/ToolItem';\nimport AudioEditor from '../AudioEditor/AudioEditor';\n\nclass SegmentTool extends Component {\n\n\n\tstate = {\n        modal: false,\n        editorFullWidth: false,\n\t}\n\n\t//opens given container in preview window\n\topenContainerInPreview = (container) => {\n\t\t//console.log(e)\n\t\tthis.props.openContainerInAlignPreview(container);\n\t}\n\n\tmakeEditorFullWidth = () => {\n        if(this.state.editorFullWidth == false){\n            this.setState({editorFullWidth: true});\n        } else {\n            this.setState({editorFullWidth: false});\n        }\n\t}\n\n\trunSEGinBatch = () => {\n\t\tfor(let i = 0; i < this.props.containersForSEG.length; i++){\n\t\t\tlet container = this.props.containersForSEG[i];\n\t\t\tif(container.ifSEG == false){\n\t\t\t\tthis.runSpeechSegmentation(container, \"SEG\", this.props.token); \n\t\t\t}\n\t\t}\n\t}\n\t\n\trunSpeechSegmentation = (container, toolType, token) => {\n\t\tthis.props.setContainerStatus(container._id, toolType, 'progress');\n\t\tthis.props.runSpeechSegmentation(container, token); \n\t}\n\n\tloadNextElement = () => {\n        //przegladam liste dodanych do rozpoznawania i ładuje kolejny o ile nie jest to ostatni\n        let foundIdx = 0;\n        for(let i=0;i<this.props.containersForSEG.length;i++){\n            \n            let current = this.props.containersForSEG[i];\n           // console.log(current)\n            //sprawdzam ktory obecnie jest edytowany\n            if(current._id == this.props.containerForPreview._id){\n                foundIdx = i;\n            }\n        }\n\n       // console.log(foundIdx)\n\n        if(foundIdx < this.props.containersForSEG.length-1){\n            this.openContainerInPreview(this.props.containersForSEG[foundIdx+1]);\n        } \n\n\t}\n\n\tremoveToolItem = (container) => {\n        this.props.onRemoveSegmentationItem(container);\n    }\n\t\n\t\n\n\trender() {\n\n\t\tlet szer1col = \"6 order-1\";\n        let szer2col = \"6 order-2\";\n\n        if(this.state.editorFullWidth == true) {\n            szer1col = \"12 order-2\";\n            szer2col = \"12 order-1\";\n        } else {\n            szer1col = \"6 order-1\";\n            szer2col = \"6 order-2\";\n        }\n\n\n\t\tlet alignIcon = <FontAwesomeIcon icon={faClock} /> ;\n\n\n\t\tlet filelist = this.props.containersForSEG.map((container, i)=> {\n\n\t\t\treturn (\n                    <ToolItem \n                        key={\"key\" + i} \n\t\t\t\t\t\tcontainer={container}\n\t\t\t\t\t\ttype=\"SEG\"\n\t\t\t\t\t\tstatus={container.statusSEG}\n\t\t\t\t\t\topenPreview = {this.openContainerInPreview}\n\t\t\t\t\t\trunTool={(container, toolType, token) => this.runSpeechSegmentation(container, toolType, token)}\n\t\t\t\t\t\tonRemoveItem={this.removeToolItem}\n\t\t\t\t\t\terrorMessage={container.errorMessage}\n                    />\n\t\t\t)\n\t\t})\n\n\n\n\n\t\treturn (\n\t\t\t<Aux>\n\n\t\t\t\t<LeftSiteBar\n\t\t\t\t\tczyTopPart=\"true\"\n\t\t\t\t\tdesc={(<div>\n                        <div>Przydatne skróty klawiaturowe: </div>\n                        <div> <b>[Alt+l]</b> - play/pausa </div>\n                        <div> <b>[Alt+k]</b> - powtórz 3 sek.</div>\n                        <div> <b>[Alt+j]</b> - powtórz 5 sek.</div>\n                        <div> <b>[Alt+i]</b> - przyśpiesz.</div>\n                        <div> <b>[Alt+o]</b> - zwolnij.</div>\n                        <div> <b>[Alt+n]</b> - załaduj kolejny plik.</div>\n                        </div>)\n                    } >\n\t\t\t\t\t\t <ButtonLeftBar \n\t\t\t\t\t\t\tnapis=\"Uruchom segmentacje dla wszystkich\"\n\t\t\t\t\t\t\ticon={alignIcon}\n\t\t\t\t\t\t\tcustomeStyle={null}\n\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\twhenClicked={this.runSEGinBatch}/>\n\t\t\t\t</LeftSiteBar>\n\n\t\t\t\t<SettingBar />\n\n\t\t\t\t<section className=\"Content\" data-scrollbar>\n\n\t\t\t\t\t<div className={[\"container-fluid\", \"SegmentTool\"].join(' ')}>\n\t\t\t\t\t\t<div className=\"tool-desc\">\n\n\t\t\t\t\t\t\t<h2>Segmentacja plików audio</h2>\n\t\t\t\t\t\t\t<p>Dopasowanie czasowe tekstu do nagrania. Podział nagrania na segmenty (wyrazy i fonemy).</p>\n\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"tool-body\">\n\n\t\t\t\t\t\t\t<div className=\"row\">\n                                <div className={\"col-md-\"+szer1col}>\n                                    <div className=\"file-list\">\n                                        {filelist}\n                                    </div>\n                                </div>\n\n                                <div className={\"col-md-\"+szer2col}>\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.props.containerForPreview != \"\" ? <AudioEditor\n\t\t\t\t\t\t\t\t\t\tcontainerForPreview={this.props.containerForPreview}\n\t\t\t\t\t\t\t\t\t\teditorFullWidth = {this.makeEditorFullWidth}\n\t\t\t\t\t\t\t\t\t\tonLoadNextElement = {this.loadNextElement}\n\t\t\t\t\t\t\t\t\t\ttoolType=\"SEG\" /> : null\n\t\t\t\t\t\t\t\t\t}\n\n\n                                </div>\n                            </div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<FooterTool />\n\n\t\t\t\t</section>\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\n\t\tcontainersForSEG: state.segR.containersForSEG,\n\t\taudioList: state.segR.audioList,\n\t\ttxtList: state.segR.txtList,\n\t\trefusedAudioFileList: state.segR.refusedAudioFileList,\n\t\trefusedTxtFileList: state.segR.refusedTxtFileList,\n\t\tmodalDisplay: state.projectR.modal,\n\t\tifRefusedAudio: state.segR.ifRefusedAudio,\n\t\tcontainerForPreview: state.segR.alignContainerForPreview,\n\t\ttoken: state.homeR.token,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\trunSpeechSegmentation: (container, token) => dispatch(segmentActions.runSpeechSegmentation(container, token)),\n\t\tsetContainerStatus:  (containerId, toolType, status) => dispatch(segmentActions.setContainerStatus(containerId, toolType, status)),\n\t\topenContainerInAlignPreview: (container) => dispatch(segmentActions.openContainerInAlignPreview(container)),\n\t\tonRemoveSegmentationItem: (container) => dispatch(segmentActions.removeSegmentationItem(container)),\n\t}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SegmentTool);","import * as actionTypes from '../actionsTypes';\nimport axios from 'axios';\n\n\n\n// ###################################################################\n// ######## usuwanie z listy seg ##########\n// ###################################################################\nexport const removeSegmentationItem = (container) => {\n    return {\n        type: actionTypes.REMOVE_SEGMENTATION_ITEM,\n        container: container,\n    }\n}\n\n// ###################################################################\n// ######## dodawanie contanera z podglądu w dia ##########\n// ###################################################################\n\nexport const openContainerInAlignPreview = (container) => {\n    return {\n        type: actionTypes.ADD_CONTAINER_TO_PREVIEW_ALIGN,\n        containerForPreview: container,\n    }\n}\n\n\nexport const addContainerToAlign = (container) => {\n    return {\n        type: actionTypes.ADD_CONTAINER_TO_ALIGN,\n        container: container,\n    }\n}\n\n//action creator for dropping audio files\nexport const dropAudioFiles = (audioFiles) => {\n    return {\n        type: actionTypes.DROP_AUDIO_FILES,\n        audioFiles: audioFiles\n    }\n}\n\n//for refusing audio files in segmentation\nexport const setRefusedSegmentAudioFiles = (refusedFiled) => {\n    //console.log(refusedFiled)\n    return {\n        type: actionTypes.REFUSE_SEGMENT_AUDIO_FILES, \n        refusedFileList: refusedFiled, \n    }\n}\n\n//for refusing audio files in segmentation\nexport const setRefusedSegmentTxtFiles = (refusedFiled) => {\n    //console.log(refusedFiled)\n    return {\n        type: actionTypes.REFUSE_SEGMENT_TXT_FILES, \n        refusedFileList: refusedFiled, \n    }\n}\n\n\n//action creator to dropping txt files\nexport const dropTxtFiles = (txtFiles) => {\n    return {\n        type: actionTypes.DROP_TXT_FILES,\n        txtFiles: txtFiles\n    }\n}\n\n\n//action creatore for changing the order of audio files\nexport const changeAudioListOrder = (audioIdsOrder) => {\n    return {\n        type: actionTypes.CHANGE_AUDIO_LIST_ORDER,\n        audioIdsOrder: audioIdsOrder\n    }\n}\n\n\n//action creators for changing the order of txt files\nexport const changeTxtListOrder = (txtIdsOrder) => {\n    return {\n        type: actionTypes.CHANGE_TXT_LIST_ORDER,\n        txtIdsOrder: txtIdsOrder\n    }\n}\n\nexport const removeSegmentItem = (entryId) => {\n    return {\n        type: actionTypes.REMOVE_SEGMENT_ENTRY,\n        entryId: entryId\n    }\n}\n\n//############### start segmentation entry ############\n//#################################################\n\nexport const initSegmentProcessing = (entryId) => {\n    return {\n        type: actionTypes.INIT_FILE_SEGMENTATION,\n        entryId: entryId\n    }\n}\n\nexport const finishFileSegmentationSuccess = (entryId) =>{\n    return {\n        type: actionTypes.FILE_SEGMENTATION_SUCCESS,\n        entryId: entryId\n    }\n}\n\nexport const finishFileSegmentationFailed = (error, entryId) =>{\n    return {\n        type: actionTypes.FILE_SEGMENTATION_FAILED,\n        error: error.toString(),\n        entryId: entryId,\n    }\n}\n\nexport const startSegmentItem = (entryId, userId, projectId, audioFile, txtFile, token, audioFrom, txtFrom) => {\n    //(segmentId, userId, projectId, audioFile, txtFile, token)\n    return dispatch => {\n\n        const data = new FormData();\n        data.append('entryId',entryId);\n        data.append('userId',userId);\n        data.append('projectId',projectId);\n        data.append('audioFiles',audioFile);\n        data.append('txtFiles',txtFile);\n        data.append('audioFrom',audioFrom); //from repo or local\n        data.append('txtFrom',txtFrom); //from repo or local\n        //data.append('txtFile',txtFile);\n        //data.append('token', entryId);\n\n        console.log(\"WYSYLAM\")\n        console.log(entryId)\n        console.log(userId)\n        console.log(projectId)\n        console.log(audioFile)\n        console.log(txtFile)\n        console.log(audioFrom)\n        console.log(txtFrom)\n       \n        \n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            },\n            onUploadProgress: ProgressEvent => {\n                let percent = ProgressEvent.loaded / ProgressEvent.total*100;\n\n                console.log('wysłano: ' + percent + '%');\n                //dispatch(changeUploadProgress(percent));\n\n                if(percent==100){\n                    //dispatch(uploadFilesFinish());\n                }\n            }\n        }\n\n        //dispatch(startSegmentItemAction(entryId));\n        \n        axios.post('/segmentation/singleFile',data, config)\n            .then(response => {\n                console.log(response);\n                //const message = response.data.message;\n                //const entryId = response.data.sentEntryId.sentEntryId;\n                //console.log(message)\n                //console.log(entryId)\n                dispatch(finishFileSegmentationSuccess(entryId));\n               \n                //console.log(response);\n            })\n            .catch(error => {\n                dispatch(finishFileSegmentationFailed(error, entryId));\n                console.log(error);\n            })\n    }\n}\n\n\n\n","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport SettingBar from '../SettingBar/SettingBar';\nimport FooterTool from '../FooterTool/FooterTool';\nimport './VADTool.css';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\nimport ButtonLeftBar from '../../../components/UI/ButtonLeftBar/ButtonLeftBar';\n//import DragAndDrop from '../../../components/UI/DragAndDrop/DragAndDrop';\n//import DropFilesArea from '../../../components/UI/DropFilesArea/DropFilesArea';\nimport { connect } from 'react-redux';\n//import uuid from 'uuid';\n//import * as segmentActions from '../../../store/actions/index';\n//import Modal from '../../../components/UI/Modal/Modal';\n//import { extensionMapping } from '../../../utils/fileTypes';\n//import { faClock } from '@fortawesome/free-solid-svg-icons';\n//import { faComment} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import { getExt, getFilenameFromURL } from '../../../utils/utils';\nimport ToolItem from '../ToolItem/ToolItem';\n//import TextareaAutosize from 'react-textarea-autosize';\nimport { faSurprise } from '@fortawesome/free-solid-svg-icons';\nimport * as vadActions from '../../../store/actions/index';\nimport AudioEditor from '../AudioEditor/AudioEditor';\n\nclass VADTool extends Component {\n\n\tstate = {\n        modal: false,\n        editorFullWidth: false,\n    }\n\n\t//opens given container in preview window\n    openContainerInPreview = (container) => {\n\t\t//console.log(e)\n\t\t\n\t\t//uruchomienie full screen\n\t\t//if(this.state.editorFullWidth == false){\n       //     this.setState({editorFullWidth: true});\n\t\t//} \n\t\t\n        this.props.openContainerInVADPreview(container);\n\t}\n\t\n\tmakeEditorFullWidth = () => {\n        if(this.state.editorFullWidth == false){\n            this.setState({editorFullWidth: true});\n        } else {\n            this.setState({editorFullWidth: false});\n        }\n\t}\n\t\n\trunVADinBatch = () => {\n\n\t\tfor(let i = 0; i < this.props.VADItems.length; i++){\n\t\t\tlet container = this.props.VADItems[i];\n\t\t\tif(container.ifVAD==false){\n\t\t\t\tthis.runSpeechVoiceActivityDetection(container, \"VAD\", this.props.token); \n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t//this.props.runVADInBatch(this.props.VADItems);\n\t}\n\n\trunSpeechVoiceActivityDetection = (container, toolType, token) => {\n\t\tthis.props.setContainerStatus(container._id, toolType, 'progress');\n\t\t//this.props.runSpeechVoiceActivityDetection(container, toolType, token); \n\t\tthis.props.runSpeechVoiceActivityDetection(container, token); \n\t}\n\n\n\tloadNextElement = () => {\n        //przegladam liste dodanych do rozpoznawania i ładuje kolejny o ile nie jest to ostatni\n        let foundIdx = 0;\n        for(let i=0;i<this.props.VADItems.length;i++){\n            \n            let current = this.props.VADItems[i];\n           // console.log(current)\n            //sprawdzam ktory obecnie jest edytowany\n            if(current._id == this.props.containerForPreview._id){\n                foundIdx = i;\n            }\n        }\n\n       // console.log(foundIdx)\n\n        if(foundIdx < this.props.VADItems.length-1){\n            this.openContainerInPreview(this.props.VADItems[foundIdx+1]);\n        } \n\n\t}\n\t\n\tremoveToolItem = (container) => {\n        this.props.onRemoveElementFromVADList(container);\n    }\n\n\trender() {\n\n\t\tlet szer1col = \"6 order-1\";\n        let szer2col = \"6 order-2\";\n\n        if(this.state.editorFullWidth == true) {\n            szer1col = \"12 order-2\";\n            szer2col = \"12 order-1\";\n        } else {\n            szer1col = \"6 order-1\";\n            szer2col = \"6 order-2\";\n        }\n\n\t\tlet vadIcon = <FontAwesomeIcon icon={faSurprise} /> ;\n\n\n\t\tlet filelist = this.props.VADItems.map((container, i)=> {\n\n\t\t\treturn (\n                    <ToolItem \n                        key={\"key\" + i} \n                        container={container}\n\t\t\t\t\t\ttype=\"VAD\"\n\t\t\t\t\t\tstatus={container.statusVAD}\n\t\t\t\t\t\topenPreview = {this.openContainerInPreview}\n\t\t\t\t\t\trunTool={(container, toolType, token) => this.runSpeechVoiceActivityDetection(container, toolType, token)}\n\t\t\t\t\t\tonRemoveItem={this.removeToolItem}\n\t\t\t\t\t\terrorMessage={container.errorMessage}\n                    />\n\t\t\t)\n\t\t\t\n\t\t})\n\n\t\treturn (\n\t\t\t<Aux>\n\n\t\t\t\t{/* <Modal\n                    show={this.state.modal}\n                    modalClosed={this.closeModalHandler}\n                    >\n\n                        {modalContent}\n                    \n                    <button type=\"button\" \n                        className=\"btn btn-outline-secondary\"\n                        onClick={this.closeModalHandler}>OK</button>\n                </Modal> */}\n\n\n\t\t\t\t<LeftSiteBar\n\t\t\t\t\tczyTopPart=\"true\"\n\t\t\t\t\tdesc={(<div>\n                        <div>Przydatne skróty klawiaturowe: </div>\n                        <div> <b>[Alt+l]</b> - play/pausa </div>\n                        <div> <b>[Alt+k]</b> - powtórz 3 sek.</div>\n                        <div> <b>[Alt+j]</b> - powtórz 5 sek.</div>\n                        <div> <b>[Alt+i]</b> - przyśpiesz.</div>\n                        <div> <b>[Alt+o]</b> - zwolnij.</div>\n                        <div> <b>[Alt+n]</b> - załaduj kolejny plik.</div>\n                        </div>)\n                    } >\n\t\t\t\t\t\t <ButtonLeftBar \n\t\t\t\t\t\t\tnapis=\"Uruchom detekcje mowy dla wszystkich\"\n\t\t\t\t\t\t\ticon={vadIcon}\n\t\t\t\t\t\t\tcustomeStyle={null}\n\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\twhenClicked={this.runVADinBatch}/>\n\t\t\t\t</LeftSiteBar>\n\n\t\t\t\t<SettingBar />\n\n\t\t\t\t<section className=\"Content\" data-scrollbar>\n\n\t\t\t\t\t<div className={[\"container-fluid\", \"SegmentTool\"].join(' ')}>\n\t\t\t\t\t\t<div className=\"tool-desc\">\n\n\t\t\t\t\t\t\t<h2>Detekcja mowy</h2>\n\t\t\t\t\t\t\t<p>Narzędzie zaznacza w sygnale segmenty zawierające mowę.</p>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t//<div className=\"alert alert-info\" role=\"alert\">\n\t\t\t\t\t\t\t\t//\t<p>Narzędzie zaznacza w sygnale segmenty zawierające mowę.</p>\n\t\t\t\t\t\t\t\t//</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"tool-body\">\n\n\t\t\t\t\t\t\t<div className=\"row\">\n                                <div className={\"col-md-\"+szer1col}>\n                                   {\n\t\t\t\t\t\t\t\t\t//<h3>Lista plików do przetworzenia</h3>\n\t\t\t\t\t\t\t\t   } \n                                    <div className=\"file-list\">\n                                        {filelist}\n                                    </div>\n                                </div>\n\n                                <div className={\"col-md-\"+szer2col}>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.props.containerForPreview != \"\" ? <AudioEditor\n\t\t\t\t\t\t\t\t\t\tcontainerForPreview={this.props.containerForPreview}\n\t\t\t\t\t\t\t\t\t\teditorFullWidth = {this.makeEditorFullWidth}\n\t\t\t\t\t\t\t\t\t\tonLoadNextElement = {this.loadNextElement}\n\t\t\t\t\t\t\t\t\t\ttoolType=\"VAD\" /> : null\n\t\t\t\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\t\t\t\t\n                                </div>\n                            </div>\t\t\t\t\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<FooterTool />\n\n\t\t\t\t</section>\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\n\n        VADItems: state.vadR.containersForVAD,\n\t\tmodalDisplay: state.projectR.modal,\n\t\tifRefusedAudio: state.segR.ifRefusedAudio,\n\t\tcontainerForPreview: state.vadR.vadContainerForPreview,\n\n\t\ttoken: state.homeR.token,\n\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\topenContainerInVADPreview: (container) => dispatch(vadActions.openContainerInVADPreview(container)),\n\t\t//runVADInBatch: (VADItems) => dispatch(vadActions.runVADInBatch(VADItems)),\n\t\t//runSpeechVoiceActivityDetection: (container, toolType, token) => dispatch(vadActions.runSpeechVoiceActivityDetection(container, toolType, token)),\n\t\trunSpeechVoiceActivityDetection: (container, token) => dispatch(vadActions.runSpeechVoiceActivityDetection(container, token)),\n\t\tsetContainerStatus:  (containerId, toolType, status) => dispatch(vadActions.setContainerStatus(containerId, toolType, status)),\n\t\t\n\t\tonRemoveElementFromVADList: (container) => dispatch(vadActions.removeElementFromVADList(container)),\n\t\t//onOpenModalHandler: () => dispatch(segmentActions.openModalProject()),\n       // onCloseModalHandler: () => dispatch(segmentActions.closeModalProject()),\n\t}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VADTool);","import * as actionTypes from '../actionsTypes';\n\n\n\n\n// ###################################################################\n// ######## usuwanie z listy ##########\n// ###################################################################\n\nexport const removeElementFromVADList = (container) => {\n    return {\n        type: actionTypes.REMOVE_VAD_ITEM,\n        container: container,\n    }\n}\n\n\n// ###################################################################\n// ######## urucamianie wszystkich items w batchu ##########\n// ###################################################################\n\nexport const runVADInBatch = (VADItems) => {\n    return {\n        type: actionTypes.RUN_VAD_IN_BATCH,\n        items: VADItems,\n    }\n}\n\n// ###################################################################\n// ######## dodawanie contanera z podglądu w vad ##########\n// ###################################################################\n\nexport const openContainerInVADPreview = (container) => {\n    return {\n        type: actionTypes.ADD_CONTAINER_TO_PREVIEW_VAD,\n        containerForPreview: container,\n    }\n}\n\n\n// ###################################################################\n// ######## dodawanie contanera z repo do panelu VAD ##########\n// ###################################################################\n\nexport const addContainerToVAD = (container) => {\n    return {\n        type: actionTypes.ADD_CONTAINER_TO_VAD,\n        container: container,\n    }\n}","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport SettingBar from '../SettingBar/SettingBar';\nimport FooterTool from '../FooterTool/FooterTool';\nimport './DIATool.css';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\nimport ButtonLeftBar from '../../../components/UI/ButtonLeftBar/ButtonLeftBar';\n//import DragAndDrop from '../../../components/UI/DragAndDrop/DragAndDrop';\n//import DropFilesArea from '../../../components/UI/DropFilesArea/DropFilesArea';\nimport { connect } from 'react-redux';\n//import uuid from 'uuid';\n//import * as segmentActions from '../../../store/actions/index';\n//import Modal from '../../../components/UI/Modal/Modal';\n//import { extensionMapping } from '../../../utils/fileTypes';\n//import { faClock } from '@fortawesome/free-solid-svg-icons';\nimport { faComment} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import { getExt, getFilenameFromURL } from '../../../utils/utils';\nimport ToolItem from '../ToolItem/ToolItem';\n//import TextareaAutosize from 'react-textarea-autosize';\nimport * as diaActions from '../../../store/actions/index';\n\nimport AudioEditor from '../AudioEditor/AudioEditor';\n\nclass DIATool extends Component {\n\n\n\tstate = {\n        modal: false,\n        editorFullWidth: false,\n    }\n\t\n\n\t//opens given container in preview window\n    openContainerInPreview = (container) => {\n        //console.log(e)\n        this.props.openContainerInDIAPreview(container);\n\t}\n\n\n\tmakeEditorFullWidth = () => {\n        if(this.state.editorFullWidth == false){\n            this.setState({editorFullWidth: true});\n        } else {\n            this.setState({editorFullWidth: false});\n        }\n\t}\n\n\trunDIAinBatch = () => {\n\n\t\tfor(let i = 0; i < this.props.containersForDIA.length; i++){\n\t\t\tlet container = this.props.containersForDIA[i];\n\t\t\tif(container.ifDIA==false){\n\t\t\t\tthis.runSpeechDiarization(container, \"DIA\",this.props.token); \n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t//this.props.runVADInBatch(this.props.VADItems);\n\t}\n\t\n\trunSpeechDiarization = (container, toolType, token) => {\n\t\tthis.props.setContainerStatus(container._id, toolType, 'progress');\n\t\tthis.props.runSpeechDiarization(container, token); \n\t}\n\n\tloadNextElement = () => {\n        //przegladam liste dodanych do rozpoznawania i ładuje kolejny o ile nie jest to ostatni\n        let foundIdx = 0;\n        for(let i=0;i<this.props.containersForDIA.length;i++){\n            \n            let current = this.props.containersForDIA[i];\n           // console.log(current)\n            //sprawdzam ktory obecnie jest edytowany\n            if(current._id == this.props.containerForPreview._id){\n                foundIdx = i;\n            }\n        }\n\n       // console.log(foundIdx)\n\n        if(foundIdx < this.props.containersForDIA.length-1){\n            this.openContainerInPreview(this.props.containersForDIA[foundIdx+1]);\n        } \n\n\t}\n\t\n\tremoveToolItem = (container) => {\n        this.props.onRemoveElementFromDIAList(container);\n    }\n\n\trender() {\n\n\t\tlet szer1col = \"6 order-1\";\n        let szer2col = \"6 order-2\";\n\n        if(this.state.editorFullWidth == true) {\n            szer1col = \"12 order-2\";\n            szer2col = \"12 order-1\";\n        } else {\n            szer1col = \"6 order-1\";\n            szer2col = \"6 order-2\";\n        }\n\n\t\tlet diaIcon = <FontAwesomeIcon icon={faComment} /> ;\n\n\n\t\tlet filelist = this.props.containersForDIA.map((container, i)=> {\n\n\t\t\treturn (\n\t\t\t\t<ToolItem \n                        key={\"key\" + i} \n                        container={container}\n\t\t\t\t\t\ttype=\"DIA\"\n\t\t\t\t\t\tstatus={container.statusDIA}\n\t\t\t\t\t\topenPreview = {this.openContainerInPreview}\n\t\t\t\t\t\trunTool={(container, toolType, token) => this.runSpeechDiarization(container, toolType, token)}\n\t\t\t\t\t\tonRemoveItem={this.removeToolItem}\n\t\t\t\t\t\terrorMessage={container.errorMessage}\n                    />\n\t\t\t)\n\t\t\t\n\t\t})\n\n\t\treturn (\n\t\t\t<Aux>\n\n\t\t\t\t{/* <Modal\n                    show={this.state.modal}\n                    modalClosed={this.closeModalHandler}\n                    >\n\n                        {modalContent}\n                    \n                    <button type=\"button\" \n                        className=\"btn btn-outline-secondary\"\n                        onClick={this.closeModalHandler}>OK</button>\n                </Modal> */}\n\n\n\t\t\t\t<LeftSiteBar\n\t\t\t\t\tczyTopPart=\"true\"\n\t\t\t\t\tdesc={(<div>\n                        <div>Przydatne skróty klawiaturowe: </div>\n                        <div> <b>[Alt+l]</b> - play/pausa </div>\n                        <div> <b>[Alt+k]</b> - powtórz 3 sek.</div>\n                        <div> <b>[Alt+j]</b> - powtórz 5 sek.</div>\n                        <div> <b>[Alt+i]</b> - przyśpiesz.</div>\n                        <div> <b>[Alt+o]</b> - zwolnij.</div>\n                        <div> <b>[Alt+n]</b> - załaduj kolejny plik.</div>\n                        </div>)\n                    } >\n\t\t\t\t\t\t <ButtonLeftBar \n\t\t\t\t\t\t\tnapis=\"Uruchom diaryzację dla wszystkich\"\n\t\t\t\t\t\t\ticon={diaIcon}\n\t\t\t\t\t\t\tcustomeStyle={null}\n\t\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\t\twhenClicked={this.runDIAinBatch}/>\n\t\t\t\t</LeftSiteBar>\n\n\t\t\t\t<SettingBar />\n\n\t\t\t\t<section className=\"Content\" data-scrollbar>\n\n\t\t\t\t\t<div className={[\"container-fluid\", \"SegmentTool\"].join(' ')}>\n\t\t\t\t\t\t<div className=\"tool-desc\">\n\n\t\t\t\t\t\t\t<h2>Diaryzacja</h2>\n\t\t\t\t\t\t\t<p>Narzędzie dzieli sygnał na segmenty mówione przez poszczególnych mówców. Mówcy nie są identyfikowani, jedynie numerowani po kolei.</p>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t//<div className=\"alert alert-info\" role=\"alert\">\n\t\t\t\t\t\t\t\t//\t<p>W przypadku wgrania większej ilości plików, pliki audio należy dopasować z plikami tekstowymi</p>\n\t\t\t\t\t\t\t\t//\t<p>Narzędzie umożliwia wgranie wielu plików jednocześnie i uruchomienie usługi na wszystkich jednocześnie. W trakcie wykonywania usługi nie należy odświeżać strony.</p>\n\t\t\t\t\t\t\t\t//</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"tool-body\">\n\n\t\t\t\t\t\t\t<div className=\"row\">\n                                <div className={\"col-md-\"+szer1col}>\n                                    {\n\t\t\t\t\t\t\t\t\t\t//<h3>Lista plików do przetworzenia</h3>\n\t\t\t\t\t\t\t\t\t}\n                                    <div className=\"file-list\">\n                                        {filelist}\n                                    </div>\n                                </div>\n\n                                <div className={\"col-md-\"+szer2col}>\n\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.props.containerForPreview != \"\" ? <AudioEditor\n\t\t\t\t\t\t\t\t\t\tcontainerForPreview={this.props.containerForPreview}\n\t\t\t\t\t\t\t\t\t\teditorFullWidth = {this.makeEditorFullWidth}\n\t\t\t\t\t\t\t\t\t\tonLoadNextElement = {this.loadNextElement}\n\t\t\t\t\t\t\t\t\t\ttoolType=\"DIA\" /> : null\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\n                                </div>\n                            </div>\t\t\t\t\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<FooterTool />\n\n\t\t\t\t</section>\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\n        containersForDIA: state.diaR.containersForDIA,\n\t\tmodalDisplay: state.projectR.modal,\n\t\tifRefusedAudio: state.segR.ifRefusedAudio,\n\t\tcontainerForPreview: state.diaR.diaContainerForPreview,\n\n\t\ttoken: state.homeR.token,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\topenContainerInDIAPreview: (container) => dispatch(diaActions.openContainerInDIAPreview(container)),\n\t\t//runDIAInBatch: (DIAItems) => dispatch(diaActions.runDIAInBatch(DIAItems)),\n\t\t//runSpeechDiarization: (container, toolType, token) => dispatch(diaActions.runSpeechDiarization(container, toolType, token)),\n\t\trunSpeechDiarization: (container, token) => dispatch(diaActions.runSpeechDiarization(container, token)),\n\t\tsetContainerStatus:  (containerId, toolType, status) => dispatch(diaActions.setContainerStatus(containerId, toolType, status)),\n\n\t\tonRemoveElementFromDIAList: (container) => dispatch(diaActions.removeFromDIAList(container)),\n\n\t\t//onOpenModalHandler: () => dispatch(segmentActions.openModalProject()),\n       // onCloseModalHandler: () => dispatch(segmentActions.closeModalProject()),\n\t}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DIATool);","import * as actionTypes from '../actionsTypes';\n\n\n\n// ###################################################################\n// ######## usuwanie z listy dia ##########\n// ###################################################################\n\nexport const removeFromDIAList = (container) => {\n    return {\n        type: actionTypes.REMOVE_DIA_ITEM,\n        container: container,\n    }\n}\n\n\n// ###################################################################\n// ######## dodawanie contanera z podglądu w dia ##########\n// ###################################################################\n\nexport const openContainerInDIAPreview = (container) => {\n    return {\n        type: actionTypes.ADD_CONTAINER_TO_PREVIEW_DIA,\n        containerForPreview: container,\n    }\n}\n\n// ###################################################################\n// ######## dodawanie contanera z repo do panelu DIA ##########\n// ###################################################################\n\nexport const addContainerToDIA = (container) => {\n    return {\n        type: actionTypes.ADD_CONTAINER_TO_DIA,\n        container: container,\n    }\n}","import React, { Component } from 'react';\nimport './DragAndDrop.css';\n//import { DropTarget } from 'react-dnd'\n//import { NativeTypes } from 'react-dnd-html5-backend'\n  \n\nconst dragAndDropStyles = {\n  position: 'relative',\n};\n\nconst dropIndicationStyles = {\n  position: 'absolute',\n  top: '0px',\n  left: '0px',\n  right: '0px',\n  bottom: '0px',\n  width: '100%',\n  height: '100%',\n  color: '#3498db',\n  backgroundColor: 'rgba(255,255,255,0.9)',\n  border: '4px dotted #3498db',\n  borderRadius: '10px',\n  display:'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\n\nclass DragAndDrop extends Component {\n  state = {\n    drag: false\n  }\n\n  dropRef = React.createRef();\n \n  handleDrag = (e) => {\n    console.log(\"handleDrag\")\n    e.preventDefault()\n    e.stopPropagation()\n  }\n  handleDragIn = (e) => {\n    console.log(\"handleDragIn \" + this.dragCounter)\n    //console.log(e)\n    e.preventDefault()\n    e.stopPropagation()\n    this.dragCounter++\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      this.setState({drag: true})\n    }\n  }\n  handleDragOut = (e) => {\n    console.log(\"handleDragOut \" + this.dragCounter)\n    e.preventDefault()\n    e.stopPropagation()\n    this.dragCounter--\n    if (this.dragCounter === 0) {\n      this.setState({drag: false})\n    }\n  }\n  handleDrop = (e) => {\n    console.log(\"handleDrop\")\n    //console.log(e.dataTransfer.getData(\"fileURL\"))\n    \n    e.preventDefault()\n    e.stopPropagation()\n    this.setState({drag: false})\n    //checking if files are from local storage\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      this.props.whenDropped(e.dataTransfer.files)\n      e.dataTransfer.clearData()\n      this.dragCounter = 0    \n    } \n    \n    //checking if files come from repo\n    if(e.dataTransfer.getData(\"fileId\").length > 0){\n\n      //składam obiekt z danymi pobranymi z repo\n      const draggedFile = {\n        \"fileURL\": e.dataTransfer.getData(\"fileURL\"),\n        \"fileSize\": e.dataTransfer.getData(\"fileSize\"),\n        \"fileId\": e.dataTransfer.getData(\"fileId\"),\n      }\n\n      this.props.whenDropped(draggedFile)\n      e.dataTransfer.clearData();\n      //console.log(e.dataTransfer.getData(\"fileURL\"))\n    }\n  }\n  componentDidMount() {\n    let div = this.dropRef.current;\n    this.dragCounter = 0  \n    div.addEventListener('dragenter', this.handleDragIn)\n    div.addEventListener('dragleave', this.handleDragOut)\n    div.addEventListener('dragover', this.handleDrag)\n    div.addEventListener('drop', this.handleDrop)\n  }\n  componentWillUnmount() {\n    let div = this.dropRef.current\n    div.removeEventListener('dragenter', this.handleDragIn)\n    div.removeEventListener('dragleave', this.handleDragOut)\n    div.removeEventListener('dragover', this.handleDrag)\n    div.removeEventListener('drop', this.handleDrop)\n  }\n  render() {\n\n\n    return (\n\n      <div className=\"DragAndDrop folder\" style={dragAndDropStyles} ref={this.dropRef} >\n      \n\n        {\n            this.state.drag?\n              <div className=\"dropIndication\" style={dropIndicationStyles}>\n                  <h2>Upuść pliki tutaj</h2>\n              </div> \n              : \n              null\n        }\n\n\n        {this.props.children}\n\n      \n      </div>\n\n    )\n  }\n}\nexport default DragAndDrop;","import React, {Component} from 'react';\nimport './DropFilesArea.css';\n\nclass DropFilesArea extends Component {\n\n      \n      render() {\n\n        return (\n        <div className=\"DropFilesArea\">\n          <div id=\"react-file-drop\">\n                    <div className=\"uploadFromDiskArea\">\n                        <h2>{this.props.mainTitle}</h2>\n                        <p>{this.props.desc}</p>\n                \n                      {\n                        this.props.allowUploadLocalFiles?\n                          <div> \n                            <input \n                              id=\"file-input\" \n                              type=\"file\"\n                              multiple = {this.props.multipleFiles}\n                              onChange={this.props.whenFilesChose}\n                              />\n                            <i className=\"fas fa-upload\"></i>\n                          </div>\n                          :null\n                        }\n                    </div>\n            </div>\n         </div>\n        );\n      }\n}\n\nexport default DropFilesArea;","\nimport React, { Component } from 'react';\nimport './MultimediaPreview.css';\n\nimport 'video.js/dist/video-js.css';\nimport videojs from 'video.js';\n\nimport WaveSurfer from 'wavesurfer.js';\n\n/*\n// the following imports are only needed when you're using \n// the microphone plugin\nimport 'webrtc-adapter';\n\nimport MicrophonePlugin from 'wavesurfer.js/dist/plugin/wavesurfer.microphone.js';\nWaveSurfer.microphone = MicrophonePlugin;\n*/\n\n// register videojs-wavesurfer plugin with this import\nimport 'videojs-wavesurfer/dist/css/videojs.wavesurfer.css';\nimport Wavesurfer from 'videojs-wavesurfer/dist/videojs.wavesurfer.js';\n\nconst videoJsOptions = {\n    controls: true,\n    aspectRatio: \"32:9\",\n    fluid: true,\n    responsive: true,\n    liveui: true,\n    scrubbing: true,\n    controlBar: {\n        // hide fullscreen control\n        fullscreenToggle: false,\n        currentTimeDisplay: true,\n        timeDivider: true,\n        durationDisplay: true,\n        remainingTimeDisplay: true,\n        volumePanel: true\n    },\n    plugins: {\n        wavesurfer: {\n            src: '',\n            msDisplayMax: 10,\n            debug: false,\n            waveColor: '#6f8796',\n            progressColor: '#394b55',\n            cursorColor: '#394b55',\n            hideScrollbar: true,\n            audioRate: 1,\n            partialRender: true,\n            responsive: true,\n        }\n    }\n};\n\nclass MultimediaPreview extends Component {\n\n    state ={\n        fileToPreviewURL: this.props.fileToPreview,\n        blokada: false,\n    }\n\n    initializePreview = (fileURL) => {\n         // instantiate Video.js\n         videoJsOptions.plugins.wavesurfer.src =  fileURL;\n\n         this.player = videojs(this.audioNode, { ...videoJsOptions }, () => {\n             // print version information at startup\n             var version_info = 'Using video.js ' + videojs.VERSION +\n                 ' with videojs-wavesurfer ' + videojs.getPluginVersion('wavesurfer') +\n                 ' and wavesurfer.js ' + WaveSurfer.VERSION;\n             videojs.log(version_info);\n         });\n\n         \n \n         this.player.on('waveReady', (event) => {\n             console.log('waveform: ready!');\n         });\n \n         this.player.on('ratechange', (event) => {\n             console.log('zmienilem speed!');\n          \n         });\n \n         this.player.on('playbackFinish', (event) => {\n             console.log('playback finished.');\n         });\n \n         // error handling\n         this.player.on('error', (element, error) => {\n             console.error(error);\n         }); \n    }\n\n\n    componentDidMount() {\n        console.log(\"Component Did Mount\")\n        this.initializePreview(this.state.fileToPreviewURL);\n    }\n\n    // destroy player on unmount\n    componentWillUnmount() {\n        if (this.player) {\n            this.player.wavesurfer().destroy();\n            this.player.dispose();\n        }\n    }\n\n    componentWillReceiveProps(props) {\n        \n      }\n\n    setFileToPreview = (fileURL) => {\n        if (this.player) {\n\n            console.log(\"laduje nowy plik\")\n            //this.player.wavesurfer().destroy();\n            \n            this.player.wavesurfer().load(fileURL);\n\n            \n            // update src url\n\n             // restore the audio element\n            // this.player.wavesurfer().destroy();\n            // ReactDOM.unmountComponentAtNode(container),\n            //$('body').prepend('<audio id=\"myAudio_html5_api\" class=\"vjs-tech\" tabindex=\"-1\"></audio>');\n\n            //this.setState({ state: this.state });\n           // this.initializePreview(fileURL);\n\n\n            //player = videojs(\"myAudio\", settings);\n           //this.player.wavesurfer().surfer.load(fileURL);\n            //this.player.load(fileURL)\n        }\n\n      \n    }\n\n    render() {\n\n        if (this.player != undefined) {\n            this.setFileToPreview (this.state.fileToPreviewURL)\n        }\n    \n        return (\n        <div data-vjs-player>\n            <audio id=\"myAudio\" ref={node => this.audioNode = node} className=\"video-js vjs-default-skin\"></audio>\n        </div>\n        );\n    }\n}\n\nexport default MultimediaPreview;","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './TranscriptionTool.css';\nimport SettingBar from '../SettingBar/SettingBar';\nimport FooterTool from '../FooterTool/FooterTool';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as previewActions from '../../../store/actions/index';\nimport DragAndDrop from '../../../components/UI/DragAndDrop/DragAndDrop';\nimport DropFilesArea from '../../../components/UI/DropFilesArea/DropFilesArea';\n\nimport MultimediaPreview from '../MultimediaPreview/MultimediaPreview';\n\nlet multimediaPlayer = null;\n\nclass TranscriptionTool extends Component {\n\n    state = {\n        audioFileURL: null,\n        txtFileURL: null,\n    }\n\n    componentDidMount = () => { \n       \n    }\n\n    componentWillUnmount = () => {\n\n    }\n\n    getExt = (path) => {\n        return (path.match(/(?:.+..+[^\\/]+$)/ig) != null) ? path.split('.').slice(-1)[0] : 'null';\n    }\n\n    txtAreaChangedHandler = (e) => {\n        // console.log(e.currentTarget.value);\n        this.props.onUpdateTxtArea(e.currentTarget.value, null);\n    }\n\n    handleDropAudio = (audioFile) => {\n        let audioFileURL = audioFile.fileURL;\n        console.log(audioFileURL)\n        let audioFileId = audioFile.fileId;\n        this.setState({\n            audioFileURL: audioFileURL\n        })\n    }\n\n    handleDropTxt = (txtFile) => {\n        let txtFileURL = txtFile.fileURL;\n        let txtFileId = txtFile.fileId;\n\n        this.setState({\n            txtFileURL: txtFileURL\n        })\n    }\n\n    shouldComponentUpdate(nextProps, nextState){\n        //multimediaPlayer = <MultimediaPreview fileToPreview={this.state.audioFileURL}/>;\n        return true;\n    }\n\n\n    render() {\n        console.log(\"RENDER TRANSCRIPTION TOOL\");\n        multimediaPlayer = <MultimediaPreview fileToPreview={this.state.audioFileURL}/>;\n\n        let headerTxtField = (\n            <p style={{ fontWeight: 'bold' }}>\n                Podgld pliku txt<span style={{ fontSize: 'bigger' }}>\n                    {this.props.txtfileName}\n                </span>\n            </p>\n        );\n\n        let headerAudioField = (\n            <p style={{ fontWeight: 'bold' }}>\n                Podgld pliku audio <span style={{ fontSize: 'bigger' }}>\n                    {this.props.audiofileName}\n                </span>\n            </p>\n        );\n\n        return (\n            <Aux>\n\n                <LeftSiteBar\n                    czyTopPart=\"true\"\n                    desc=\"W tym miejscu istnieje możliwość podglądu wyniku wykonywanych usług oraz odłuchania plików dźwiękowych z repozytorium\" />\n\n                <SettingBar />\n\n                <section className=\"Content\" data-scrollbar>\n\n                    <div className={[\"container-fluid\", \"TranscriptTool\"].join(' ')}>\n                        <div className=\"tool-desc\">\n\n                        </div>\n\n                        <div className=\"tool-body\">\n\n                            <DragAndDrop whenDropped={this.handleDropAudio}>\n\n                                {\n                                    this.state.audioFileURL != null?\n                                    multimediaPlayer\n                                    : \n                                   \n\n                                    <DropFilesArea\n                                    whenFilesChose={this.handleDropAudio}\n                                    mainTitle=\"Przeciągnij plik audio z Repozytorium\"\n                                    multipleFiles = {false}\n                                    allowUploadLocalFiles = {false}\n                                    desc=\"aby wyświetlić jego podgląd\" />\n                                }\n                                \n                            </DragAndDrop>\n                            <hr />\n\n                            <DragAndDrop whenDropped={this.handleDropTxt}>\n\n                            {\n                                    this.state.txtFileURL != null ?\n                                    <div className=\"form-group\">\n                                        <textarea\n                                            className=\"form-control\"\n                                            className=\"TranskriptInput\"\n                                            placeholder=\"Przeciągnij i upuść plik tekstowy\"\n                                            value={this.props.txtContent}\n                                            onChange={this.txtAreaChangedHandler}\n                                        >\n                                        </textarea>\n                                    </div>\n                                    :\n                                    <DropFilesArea\n                                    whenFilesChose={this.handleDropTxt}\n                                    mainTitle=\"Przeciągnij plik txt z Repozytorium\"\n                                    multipleFiles = {false}\n                                    allowUploadLocalFiles = {false}\n                                    desc=\"aby go edytować\" />\n                            }\n                                \n\n                            </DragAndDrop>\n\n                           \n\n                        </div>\n\n                    </div>\n\n                    <FooterTool />\n\n\n                </section>\n\n\n\n            </Aux>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        txtContent: state.previewR.txtContent,\n        txtDisplayed: state.previewR.txtDisplayed,\n        txtfileName: state.previewR.txtfileName,\n        txtFileUrl: state.previewR.txtFileUrl,\n\n        audiofileName: state.previewR.audiofileName,\n        audioDisplayed: state.previewR.audioDisplayed,\n        audioFileUrl:  state.previewR.audioFileUrl,\n        waveSurferInitialized: state.previewR.waveSurferInitialized,\n        playing: state.previewR.playing,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onUpdateTxtArea: (newValue, fileKey) => dispatch(previewActions.updateTxtPreview(newValue, fileKey)),\n        onUpdateAudioArea: (fileKey) => dispatch(previewActions.updateAudioPreview(fileKey)),\n        onWeveSurferInitialized: (ifyes) => dispatch(previewActions.weveSurferInitialized(ifyes)),\n        onTooglePlaying: () => dispatch(previewActions.togglePlaying()),\n        onAudioDisplayed: (ifYes) => dispatch(previewActions.changeAudioDisplayed(ifYes))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TranscriptionTool));","import * as actionTypes from '../actionsTypes';\n//import axios from 'axios';\n\nexport const updateTxtPreview = (newContent, fileName) => {\n    return {\n        type: actionTypes.UPDATE_TXT_PREVIEW,\n        newContent: newContent,\n        fileName: fileName,\n    }\n}\n\nexport const updateAudioPreview = (fileKey) => {\n    return {\n        type: actionTypes.UPDATE_AUDIO_PREVIEW,\n        fileKey: fileKey,\n    }\n}\n\nexport const changeAudioDisplayed = (ifyes) => {\n    return {\n        type: actionTypes.CHANGE_AUDIO_DISPLAYED,\n        ifYes: ifyes,\n    }\n}\n\n\nexport const weveSurferInitialized = (ifyes) => {\n    return {\n        type: actionTypes.WAVESURFER_INITIALIZED,\n        ifYes: ifyes,\n    }\n}\n\nexport const togglePlaying = () => {\n    return {\n        type: actionTypes.TOGGLE_PLAYING_PREVIEW,\n    }\n}\n\n\n//############### Txt File Preview ##############\n\nexport const openTxtFileToPreviewAction = (key, url, content) => {\n    return {\n        type: actionTypes.OPEN_TXT_FILE_PREVIEW,\n        fileUrl: url,\n        fileContent: content,\n        fileKey: key,\n    }\n}\n\n\nexport const openTxtFileToPreview = (file) => {\n    return dispatch => {\n        fetch(file.url)\n            .then(response => {\n                response.text().then(content => {\n                    dispatch(openTxtFileToPreviewAction(file.key, file.url, content));\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }\n}\n\n//############### Audio File Preview ##############\n\nexport const openAudioFileToPreviewAction = (key, url, waveSurferInitialized) => {\n    return {\n        type: actionTypes.OPEN_AUDIO_FILE_PREVIEW,\n        fileUrl: url,\n        fileKey: key,\n        waveSurferInitialized: waveSurferInitialized,\n    }\n}\n\n\nexport const openAudioFileToPreview = (file, waveSurferInitialized) => {\n\n    return dispatch => {\n\n        dispatch(openAudioFileToPreviewAction(file.key, file.url, waveSurferInitialized));\n\n        // const ctx = new AudioContext();\n        // let audio;\n\n        // fetch(file.url)\n        // .then(response => {\n        //     response.arrayBuffer().then(arrayBuffer => {\n        //         ctx.decodeAudioData(arrayBuffer).then(decodedAudio => {\n        //             audio = decodedAudio;\n        //             dispatch(openAudioFileToPreviewAction(file.key, file.url, audio));\n        //         })\n        //     })\n        // })\n        // .catch(error => {\n        //     console.log(error)\n        // })\n    }\n\n}\n\n","export function bytesToSize(bytes){\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    if (bytes === 0) return 'no files';\n    const i = parseInt(Math.floor(Math.log(Math.abs(bytes)) / Math.log(1024)), 10);\n    if (i === 0) return `${bytes} ${sizes[i]})`;\n    return `${(bytes / (1024 ** i)).toFixed(1)} ${sizes[i]}`;\n}\n\nexport function getExt(path){\n    console.log(path)\n    return (path.match(/(?:.+..+[^\\/]+$)/ig) != null) ? path.split('.').slice(-1): 'null';\n  // return  path.split('.').slice(-1);\n}\n\nexport function getFileNameWithNoExt(fileName){\n    let gdziedot = fileName.lastIndexOf('.');\n    let nazwaplikubezext = fileName.substring(0,gdziedot);\n    return nazwaplikubezext;\n}\n\nexport function getFilenameFromURL(url){\n    let filename = url.substring(url.lastIndexOf('/')+1);\n    return filename;\n}\n\nexport function getFileKeyFromURL(url){\n    //uwaga. troche nieelegancko ale tymczasowo\n    //http://localhost:1234/5d1db8a1ceb24447d9cdda0c/5d5e91a7a7cb9852fe79e55c/demo_files/test.txt\n    //zaczynam od 5 znalezionego backslasha\n    var a=[],i=-1;\n    while((i=url.indexOf('/',i+1)) >= 0) a.push(i);\n    let fileKey = url.substring(a[4]+1);\n    return fileKey;\n}\n\nexport function isObjectEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}","const FILETYPE_EXTENSIONS = {\n  Audio: [\n    'mp3','MP3',\n    'ogg', 'OGG',\n    'wav','WAV',\n    'flac','FLAC',\n  ]\n}\n\nlet extensionMapping = {}\n\nfor (const [type, extensions] of Object.entries(FILETYPE_EXTENSIONS)) {\n  for (const extension of extensions) {\n    extensionMapping[extension] = type\n  }\n}\n\nexport { extensionMapping }\n","import React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliary';\n//import { extensionMapping } from '../../utils/fileTypes';\nimport './TextEdit.css'\nimport { connect } from 'react-redux';\nimport * as repoActions from '../../store/actions/index'\nimport {getFileKeyFromURL} from '../../utils/utils';\n\nclass TextEdit extends Component {\n\n    state = {\n        url: null,\n        fileKey: null,\n        txtContent: '',\n        txtLoaded: false,\n    }\n\n    load = url => {\n        let fileKey = getFileKeyFromURL(url);\n        this.setState({\n            url: url,\n            fileKey: fileKey,\n        }, () => {\n            fetch(this.state.url)\n            .then(response => {\n                response.text().then(content => {\n                    \n                    this.setState({\n                        txtContent: content,\n                        txtLoaded: true,\n                    });\n                    \n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        })\n    }\n\n\n    componentDidMount = () => {\n        this.load(this.props.textURL)\n    }\n    \n    txtAreaChangedHandler = (e) => {\n        // console.log(e.currentTarget.value);\n        this.setState({\n            txtContent: e.currentTarget.value\n        })\n        \n    }\n\n    saveEditedFile = () => {\n        this.props.onSaveEditedFileHandler(this.props.userId, this.props.projectId, this.props.token,this.state.fileKey, this.state.txtContent )\n    }\n\n    \n\n   \n\n    render(){\n\n        let przyciskSaveDisabled = true;\n        if(this.state.txtLoaded){\n            przyciskSaveDisabled = false;\n        }\n\n        let potwierdzenieZapisania;\n\n        if(this.props.editTxtFileOK){\n            potwierdzenieZapisania = (\n                <button type=\"button\" disabled={przyciskSaveDisabled} className=\"btn btn-success\" onClick={this.props.whenClose}>Success</button>\n            )\n        }\n\n        return(\n            <Aux>\n                <textarea\n                    className=\"textEditPreview\"\n                    placeholder=\"Zaznacz plik txt w repozytorium\"\n                    value={this.state.txtContent}\n                    onChange={this.txtAreaChangedHandler}\n                >\n                </textarea>\n\n                <button type=\"button\" disabled={przyciskSaveDisabled} className=\"btn btn-primary\" onClick={this.saveEditedFile}>Save</button>\n\n                {potwierdzenieZapisania}\n            </Aux>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n      //currentProjectID: state.prolistR.chosenProjectID,\n      editTxtFileOK: state.repoR.editTxtFileOK,\n      userId: state.homeR.userId,\n      projectId: state.projectR.currentProjectID,\n      token: state.homeR.token,\n    }\n  }\n  \n  const mapDispatchToProps = dispatch => {\n    return {\n      // onInitProjectHandler: (projectId, projectTitle, projectOwner) => dispatch(projectActions.initProject(projectId, projectTitle, projectOwner)),\n        onSaveEditedFileHandler: (userId, projectId, token, filekey, newConent) => dispatch(repoActions.handleUpdateTxtFile(userId, projectId, token, filekey, newConent)),\n      }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextEdit);\n","import React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliary';\nimport { getExt } from '../../utils/utils';\nimport { extensionMapping } from '../../utils/fileTypes';\n//import AudioPlayer from '../../components/AudioPlayer/AudioPlayer'\nimport TextEdit from '../../components/TextEdit/TextEdit'\nimport {getFileKeyFromURL} from '../../utils/utils';\nimport MultimediaPreview from '../../containers/ProjectPage/MultimediaPreview/MultimediaPreview';\n\nclass Preview extends Component {\n\n    \n    render(){\n\n        const fileToPreview = this.props.fileToPreview;\n        const ext = getExt(fileToPreview)[0];\n        let typPliku = \"\";\n        const fileKey = getFileKeyFromURL(fileToPreview);\n\n        // stwierdzam czy jest to plik txt czy audio\n        // na tej podstawie renderuje odpowiedni widok\n        let podgladPliku = null;\n        \n\t\tif (extensionMapping[ext] === \"Audio\") {\n            typPliku = \"Audio\";\n\n            \n\n            podgladPliku = (\n                <MultimediaPreview fileToPreview={fileToPreview}/>\n               \n                    // <AudioPlayer audioURL={fileToPreview} />\n             )\n\n        \n\t\t} else if(extensionMapping[ext] === \"Text\") {\n            typPliku = \"Text\";\n\n            podgladPliku = (\n                <TextEdit textURL={fileToPreview} whenClose={this.props.onClose}/>\n             )\n\n        } else {\n            typPliku = \"Unknown\";\n            podgladPliku = (\n                <p>Nieznany typ pliku!</p>\n             )\n        }\n\n        return(\n            <Aux>\n                {podgladPliku}\n            </Aux>\n        )\n    }\n}\n\nexport default Preview;","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './RepoBar.css';\n//import Moment from 'moment';\n//import FileBrowser, { Icons } from 'react-keyed-file-browser-clarin';\nimport { connect } from 'react-redux';\nimport * as repoActions from '../../../store/actions/index';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { getExt } from '../../../utils/utils';\nimport Modal from '../../../components/UI/Modal/Modal';\nimport Preview from '../../../components/Preview/Preview';\nimport {getFileKeyFromURL} from '../../../utils/utils';\nimport DragAndDrop from '../../../components/UI/DragAndDrop/DragAndDrop';\nimport DropFilesArea from '../../../components/UI/DropFilesArea/DropFilesArea';\nimport uuid from 'uuid';\nimport { extensionMapping } from '../../../utils/fileTypes';\nimport {Alert, Progress} from 'reactstrap';\n  \nclass repoBar extends Component {\n\n\tstate = {\n        openPreview: false,\n        modal: false,\n\t\tfileToPreview: '',\n\t\tactionType: null, //która user wykonuje w repo aby rozpoznac co pokazac w modal\n\t\tfolderToUpload: '',\n\t\tfilesToUpload: [],\n\t\trefusedFiles: [],\n\t}\n\n\t\n\tonStartUpload = () => {\n\t\tthis.props.onUploadFiles(this.state.filesToUpload, this.state.folderToUpload, this.props.currentProjectOwner, this.props.currentProjectID, this.props.token);\n\t\t\n\t}\n\n\thandleDrop = (files) => {\n        console.log(\"HANDLE DROP\")\n       // console.log(files)\n\n        let extFiles = [];\n        let fileList = [];\n        let refusedFileList = [];\n\n        //checking if the file/s is from local env\n        if (files instanceof FileList) {\n            console.log(\"rozpoznalem FILELIST\")\n            for (var i = 0; i < files.length; i++) {\n                let file = files[i];\n                let fileExtention = getExt(file.name)[0];\n\n                //rozpoznaje tylko pliki audio\n                if (extensionMapping.hasOwnProperty(fileExtention) &&\n                    (extensionMapping[fileExtention] == \"Audio\")) {\n                    fileList.push(file);\n                } else {\n                    refusedFileList.push(file);\n                }\n            }\n\n           \n        }  else if ( files.currentTarget != null && files.currentTarget instanceof Element){\n            console.log(\"rozpoznalem Element\")\n            \n            const inputControl = files.currentTarget;\n            \n            for (var i = 0; i < inputControl.files.length; i++) {\n                let file = inputControl.files[i];\n                let fileExtention = getExt(file.name)[0];\n    \n                 //rozpoznaje tylko pliki audio\n                 if (extensionMapping.hasOwnProperty(fileExtention) &&\n                        (extensionMapping[fileExtention] == \"Audio\")) {\n                        fileList.push(inputControl.files[i]);\n                    } else {\n                        refusedFileList.push(inputControl.files[i]);\n                    }\n            }\n        }\n\n\n        if (refusedFileList.length > 0) {\n            //this.props.onSetRefusionFiles(refusedFileList);\n            //this.setState({\n            //    modal: true,\n            //});\n        }\n\n        Array.from(fileList).forEach(file => {\n            let newFile = Object.assign({}, file);\n\t\t\tnewFile.file = file;\n\t\t\tnewFile.status = 'toload';\n\t\t\tnewFile.loadedperc = 0;\n\t\t\tnewFile.from = 'local';\n            newFile.id = uuid.v4();\n            extFiles.push(newFile);\n\t\t});\n\t\t\n\t\tconsole.log(fileList);\n\n\t\tthis.setState({\n\t\t\tfilesToUpload: fileList,\n\t\t\trefusedFiles: refusedFileList,\n\t\t})\n\n\t\t//console.log(refusedFileList);\n\t\t//this.props.onUploadFiles(extFiles, this.state.folderToUpload, this.props.userId, this.props.projectId, this.props.token);\n\n    }\n\n\tcomponentDidMount() {\n\t\tthis.refreshRepo();\n\t}\n\n\trefreshRepo() {\n\t\t//wysylam zadanie aby pobrac aktualne pliki w katalogu uzytkownika\n\t\tconst currentProjectID = this.props.currentProjectID;\n\t\tconst currentProjectOwner = this.props.currentProjectOwner; //Owner id\n\t\t//console.log(currentProjectID)\n\t\t//console.log(currentProjectOwner)\n\t\tthis.props.onGetProjectFilesForUser(currentProjectOwner, currentProjectID, this.props.token);\n\t}\n\n\thandleCreateFolder = (key) => {\n\t\tthis.props.onHandleCreateFolder(key, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t}\n\thandleCreateFiles = (files, prefix) => {\n\t\tthis.props.onHandleCreateFiles(files, prefix);\n\t}\n\thandleRenameFolder = (oldKey, newKey) => {\n\t\tthis.props.onHandleRenameFolder(oldKey, newKey, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t}\n\thandleRenameFile = (oldKey, newKey) => {\n\t\tthis.props.onHandleRenameFile(oldKey, newKey, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t}\n\thandleDeleteFolder = (folderKey) => {\n\t\tthis.props.onHandleDeleteFolder(folderKey, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t}\n\thandleDeleteFile = (fileKey) => {\n\t\tthis.props.onHandleDeleteFile(fileKey, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t}\n\n\thandleDownloadFile = (fileKey) => {\n\t\tthis.props.onHandleDownloadFile(fileKey, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t}\n\n\thandleUploadFiles = (folderKey) => {\n\n\t\tthis.props.onOpenModalHandler();\n\t\tthis.setState({\n\t\t\tactionType: \"Upload\",\n\t\t\tfolderToUpload: folderKey,\n\t\t});\n\t\t\n\t\tthis.props.onUploadFilesModalOpen();\n\t}\n\n\thandleSelect = (key) => {\n\t\tconsole.log(\"handleSelect\")\n\t\tconsole.log(key)\n\t}\n\n\t// Called after onSelect, only on file selection\n\thandleSelectFile = (file) => {\n\t\tconsole.log(\"handleSelectFile\")\n\t\tconsole.log(file)\n\t}\n\n\t// Called after onSelect, only on folder selection\n\thandleSelectFolder = (folder) => {\n\t\tconsole.log(\"handleSelectFolder\")\n\t\tconsole.log(folder)\n\t}\n\n\t//dwukrotne klikniecie powoduje uruchomienie w podgladzie\n\thandlePreviewOpen = (file) => {\n\n\t\t//sprawdzam czy juz jestem na stronie podgladu.\n\t\t//jak nie to tam przechodze\n\n\t\tlet czyjestem = true;\n\n\t\tif (!this.props.location.pathname.includes('preview')) {\n\t\t\n\t\t\tlet toURL = this.props.match.url + '/preview';\n\t\t\tczyjestem = false;\n\t\t\tthis.props.history.push({\n\t\t\t\tpathname: toURL,\n\t\t\t});\n\t\t}\n\n\t\t//czytam rozszerzenie pliku\n\t\tconst ext = getExt(file.url)[0];\n\n\t\t//wtedy jest to plik txt\n\t\tif (ext === 'txt' || ext === 'ctm' || ext === 'zip' || ext === 'json' ||\n\t\text === 'TXT' || ext === 'CTM' || ext === 'ZIP' || ext === 'JSON') {\n\n\t\t\tif(file.url !== this.props.txtFileUrl){\n\t\t\t\tthis.props.onOpenTxtFileToPreview(file, czyjestem);\n\t\t\t}\n\n\t\t} else if (ext === 'wav' || ext === 'mp3' || ext === 'au' ||\n\t\t\text === 'WAV' || ext === 'MP3' || ext === 'AU' ) {\n\n\t\t\t\tif(file.url !== this.props.audioFileUrl){\n\t\t\t\t\tthis.props.onOpenAudioFileToPreview(file, czyjestem);\n\t\t\t\t}\n\n\t\t}\n\n\t}\n\n\thandlePreviewClose = (file) => {\n\t\tconsole.log(\"handlePreviewClose\")\n\t\tconsole.log(file)\n\t}\n\n\thandleRightClickOnFile = (e, data, target) => {\n\t\tlet fileURL = target.getElementsByTagName(\"a\")[0].href;\n\n        if (data.action === 'Preview') {\n            console.log(\"Preview file: \")\n\t\t\tconsole.log(fileURL)\n\t\t\tthis.props.onOpenModalHandler();\n            this.setState({\n\t\t\t\tactionType: \"Preview\",\n                openPreview: true,\n                fileToPreview: fileURL,\n            });\n        }\n\n        if (data.action === 'Remove') {\n            console.log(\"Remove file: \")\n\t\t\tconsole.log(fileURL)\n\t\t\tthis.setState({\n\t\t\t\tactionType: \"Remove\",\n            });\n        }\n\t}\n\n\t\n\n\thandleFolderOpen = (folder) => {\n\t\tconsole.log(\"handleFolderOpen\")\n\t\tconsole.log(folder)\n\t}\n\n\thandleFolderClose = (folder) => {\n\t\tconsole.log(\"handleFolderClose\")\n\t\tconsole.log(folder)\n\t}\n\n\n\tstartResizeRepo = () => {\n\t\twindow.addEventListener('mousemove', this.Resize, false);\n\t\twindow.addEventListener('mouseup', this.stopResize, false);\n\t}\n\n\tcloseModalHandler = () => {\n\t\t\n\t\t//pozwalaj na zamkniecie okna modalnego tylko gdy upload \n\t\t//ukonczy sie\n\n\t\tthis.props.onCloseModalHandler();\n\n\t\tif(this.props.uploadFilesDone==true){\n\t\t\t\n\t\t\tthis.props.onUploadFilesFinish();\n\t\t\tthis.refreshRepo();\n\t\t\tthis.setState({\n\t\t\t\tfilesToUpload: [],\n\t\t\t\trefusedFiles: [],\n\t\t\t})\n\t\t}\n    }\n\n\n\t//resize the element\n\tResize = (e) => {\n\t\tconst repoBar = document.getElementById('RepoBar');\n\t\tconst projectPage = document.getElementById('ProjectPage');\n\t\tconst leftSiteBar = document.getElementById('LeftSiteBar');\n\t\t//console.log(window.innerWidth - e.clientX);\n\t\tlet szerRepo = window.innerWidth - e.clientX;\n\t\tlet szerProject = (window.innerWidth - leftSiteBar.offsetWidth) - szerRepo;\n\t\trepoBar.style.width = szerRepo + 'px';\n\t\tprojectPage.style.width = szerProject + 'px';\n\t\t//element.style.height = (e.clientY - element.offsetTop) + 'px';\n\t}\n\t//on mouseup remove windows functions mousemove & mouseup\n\tstopResize = (e) => {\n\t\twindow.removeEventListener('mousemove', this.Resize, false);\n\t\twindow.removeEventListener('mouseup', this.stopResize, false);\n\t}\n\n\trender() {\n\t\twindow.addEventListener('onresize', this.Resize, false);\n\n\n\t\tconst mount = document.querySelectorAll('div.demo-mount-nested-editable');\n\n\t\tlet modalContent = null;\n\t\tlet modalTitle = null;\n\t\tlet filesToUploadList = null;\n\t\tlet filesToRefuseList = null;\n\t\tlet czyPokazacUploatBtn = false;\n\n\t\tif(this.state.filesToUpload.length > 0){\n\t\t\tfilesToUploadList = this.state.filesToUpload.map((file,i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Alert color=\"success\" className=\"alercik\" key={i + '_' + file.name}>\n\t\t\t\t\t\t{file.name}\n\t\t\t\t  \t</Alert>\n\t\t\t\t\t\n\t\t\t\t)\n\t\t\t});\n\n\t\t\tczyPokazacUploatBtn = true;\n\n\t\t} else {\n\t\t\tczyPokazacUploatBtn = false\n\t\t}\n\n\t\tif(this.state.refusedFiles.length > 0){\n\t\t\tfilesToRefuseList = this.state.refusedFiles.map((file,i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Alert color=\"danger\" className=\"alercik\" key={i + '_' + file.name}>\n\t\t\t\t\t\t{file.name}\n\t\t\t\t  \t</Alert>\n\t\t\t\t)\n\t\t\t});\n\t\t}\n\n\t\tlet controlsBtns = null;\n\n\t\tif(this.props.uploadFilesDone){\n\t\t\tcontrolsBtns = (\n\t\t\t\t<div>\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-success btn-block\" onClick={this.closeModalHandler}>Sukces! Zamknij okno</button>\n\t\t\t\t\t<Progress max=\"100\" color=\"success\" value={this.props.uploadPercent} >{Math.round(this.props.uploadPercent,2) }%</Progress>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\tif(czyPokazacUploatBtn){\n\t\t\t\tcontrolsBtns = (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary btn-block\" disabled={this.props.uploadBtnDisabled} onClick={this.onStartUpload}>Upload</button>\n\t\t\t\t\t\t<Progress max=\"100\" color=\"primary\" value={this.props.uploadPercent} >{Math.round(this.props.uploadPercent,2) }%</Progress>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(this.state.actionType === \"Preview\"){\n\t\t\tmodalContent = (\n\t\t\t\t<Preview \n\t\t\t\t\tfileToPreview={this.state.fileToPreview} \n\t\t\t\t\tonClose={this.closeModalHandler}/>\n\t\t\t);\n\t\t\t\n\t\t\tmodalTitle = \"Podgląd pliku: \" + getFileKeyFromURL(this.state.fileToPreview);\n\t\t} else if(this.state.actionType === \"Upload\"){\n\t\t\tmodalContent = (\n\t\t\t\t<div>\n\t\t\t\t\t<DragAndDrop whenDropped={this.handleDrop}>\n\t\t\t\t\t\t<DropFilesArea\n\t\t\t\t\t\t\twhenFilesChose={this.handleDrop}\n\t\t\t\t\t\t\tmainTitle=\"Wgraj pliki z dysku\"\n\t\t\t\t\t\t\tmultipleFiles = {true}\n\t\t\t\t\t\t\tallowUploadLocalFiles = {true}\n\t\t\t\t\t\t\tdesc={\"Pliki zostaną zapisane do repozytorium: \" + this.state.folderToUpload} />\n\t\t\t\t\t</DragAndDrop>\n\n\t\t\t\t\t\n\t\t\t\t\t{controlsBtns}\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{filesToUploadList != null? \n\t\t\t\t\t\t\t<div> \n\t\t\t\t\t\t\t\t<p>Poniższe pliki zostaną wgrane na serwer</p>\n\t\t\t\t\t\t\t\t{filesToUploadList}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t{filesToRefuseList != null? \n\t\t\t\t\t\t\t<div> \n\t\t\t\t\t\t\t\t<p>Poniższe pliki nie mogą zostać wgrane na serwer</p>\n\t\t\t\t\t\t\t\t{filesToRefuseList}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t} \n\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t)\n\t\t\tmodalTitle = \"Upload plików do Repozytorium\";\n\t\t}\n\n\n\t\treturn (\n\t\t\t<Aux>\n\n\t\t\t\t<Modal \n                    show={this.props.modal}\n\t\t\t\t\tmodalClosed={this.closeModalHandler}\n\t\t\t\t\tmodalTitle={modalTitle}\n                >\n                    {modalContent}\n                </Modal> \n\n\t\t\t\t<div className=\"RepoBar\" id=\"RepoBar\">\n\t\t\t\t\t<div className=\"topPart\">\n\t\t\t\t\t\t<div className=\"repoTab\" >\n\t\t\t\t\t\t\t<div className=\"scrollStrip\"\n\t\t\t\t\t\t\t\tonMouseDown={this.startResizeRepo}>\n\t\t\t\t\t\t\t\t<i className=\"fas fa-arrows-alt-h\"></i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\tRepozytorium\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t<div className=\"repoNav\" >\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t*/\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</div>\n\n\n\t\t\t\t\t<div className=\"mainRepoContent\">\n\n                   {\n\t\t\t\t\t   /*\n<FileBrowser\n\t\t\t\t\t\t\tfiles={this.props.files}\n\t\t\t\t\t\t\ticons={{\n\t\t\t\t\t\t\t\tFile: <i className=\"fas fa-file\"></i>,\n\t\t\t\t\t\t\t\tImage: <i className=\"fas fa-image\"></i>,\n\t\t\t\t\t\t\t\tPDF: <i className=\"fas fa-file-pdf\"></i>,\n\t\t\t\t\t\t\t\tRename: <i className=\"fas fa-edit\"></i>,\n\t\t\t\t\t\t\t\tFolder: <i className=\"fas fa-folder\"></i>,\n\t\t\t\t\t\t\t\tFolderOpen: <i className=\"fas fa-folder-open\"></i>,\n\t\t\t\t\t\t\t\tDelete: <i className=\"fas fa-trash\"></i>,\n\t\t\t\t\t\t\t\tLoading: <i className=\"fas fa-spinner\"></i>,\n\t\t\t\t\t\t\t\tDownload: <i className=\"fas fa-download\"></i>,\n\t\t\t\t\t\t\t\tUpload: <i className=\"fas fa-cloud-upload-alt\"></i>\n\t\t\t\t\t\t\t}}\n\n\t\t\t\t\t\t\tonCreateFolder={this.handleCreateFolder}\n\t\t\t\t\t\t\tonCreateFiles={this.handleCreateFiles}\n\t\t\t\t\t\t\tonMoveFolder={this.handleRenameFolder}\n\t\t\t\t\t\t\tonMoveFile={this.handleRenameFile}\n\t\t\t\t\t\t\tonRenameFolder={this.handleRenameFolder}\n\t\t\t\t\t\t\tonRenameFile={this.handleRenameFile}\n\t\t\t\t\t\t\tonDeleteFolder={this.handleDeleteFolder}\n\t\t\t\t\t\t\tonDeleteFile={this.handleDeleteFile}\n\t\t\t\t\t\t\tonDownloadFile={this.handleDownloadFile}\n\t\t\t\t\t\t\tonUploadFiles={this.handleUploadFiles}\n\n\t\t\t\t\t\t\t// Always called when a file or folder is selected\n\t\t\t\t\t\t\t//onSelect={this.handleSelect}\n\t\t\t\t\t\t\t// Called after onSelect, only on file selection\n\t\t\t\t\t\t\tonSelectFile={this.handleSelectFile}\n\t\t\t\t\t\t\t// Called after onSelect, only on folder selection\n\t\t\t\t\t\t\tonSelectFolder={this.handleSelectFolder}\n\t\t\t\t\t\t\t//onPreviewOpen={this.handlePreviewOpen}\n\t\t\t\t\t\t\t//onPreviewClose={this.handlePreviewClose}\n\t\t\t\t\t\t\tonFolderOpen={this.handleFolderOpen}\n\t\t\t\t\t\t\tonFolderClose={this.handleFolderClose}\n\n\t\t\t\t\t\t\tonRightClickOnFile={this.handleRightClickOnFile}\n\n\t\t\t\t\t\t// \t\t\tonSelect: (fileOrFolder) => {}, // Always called when a file or folder is selected\n\t\t\t\t\t\t// onSelectFile: (file) => {}, //    Called after onSelect, only on file selection\n\t\t\t\t\t\t// onSelectFolder: (folder) => {}, //    Called after onSelect, only on folder selection\n\n\t\t\t\t\t\t// onPreviewOpen: (file) => {}, // File opened\n\t\t\t\t\t\t// onPreviewClose: (file) => {}, // File closed\n\n\t\t\t\t\t\t// onFolderOpen: (folder) => {}, // Folder opened\n\t\t\t\t\t\t// onFolderClose: (folder) => {}, // Folder closed\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t\n\n\t\t\t\t\t   */\n\t\t\t\t   }\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t{mount[0]}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</Aux>\n\t\t);\n\t}\n\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tcurrentProjectID: state.projectR.currentProjectID,\n\t\tcurrentProjectName: state.projectR.currentProjectName,\n\t\tcurrentProjectOwner: state.projectR.currentProjectOwner,\n\n\t\tuploadPercent: state.repoR.uploadProgress,\n\t\tuploadBtnDisabled: state.repoR.uploadBtnDisabled,\n\t\tuploadFilesDone: state.repoR.uploadFilesDone,\n\n\t\tfiles: state.repoR.files,\n\t\ttoken: state.homeR.token,\n\n\t\tmodal: state.projectR.modal,\n\n        txtDisplayed: state.previewR.txtDisplayed,\n        txtfileName: state.previewR.txtfileName,\n        txtFileUrl: state.previewR.txtFileUrl,\n\n        audiofileName: state.previewR.audiofileName,\n        audioDisplayed: state.previewR.audioDisplayed,\n        audioFileUrl:  state.previewR.audioFileUrl,\n        waveSurferInitialized: state.previewR.waveSurferInitialized,\n        playing: state.previewR.playing,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonOpenModalHandler: () => dispatch(repoActions.openModalProject()),\n\t\tonCloseModalHandler: () => dispatch(repoActions.closeModalProject()),\n\t\tonUploadFilesFinish: () => dispatch(repoActions.uploadFilesFinish()),\n\t\tonUploadFilesModalOpen: () => dispatch(repoActions.uploadFilesModalOpen()),\n\t\tonUploadFiles: (fileList, folderKey, userId, projectId, token) => dispatch(repoActions.uploadFiles(fileList,folderKey,userId, projectId, token)),\n\t\tonHandleCreateFolder: (key, projectId, userId, token) => dispatch(repoActions.handleCreateFolder(key, projectId, userId, token)),\n\t\tonHandleCreateFiles: (files, prefix) => dispatch(repoActions.handleCreateFiles(files, prefix)),\n\t\tonHandleRenameFolder: (oldKey, newKey, projectId, userId, token) => dispatch(repoActions.handleRenameFolder(oldKey, newKey, projectId, userId, token)),\n\t\tonHandleRenameFile: (oldKey, newKey, projectId, userId, token) => dispatch(repoActions.handleRenameFile(oldKey, newKey, projectId, userId, token)),\n\t\tonHandleDeleteFolder: (folderKey, projectId, userId, token) => dispatch(repoActions.handleDeleteFolder(folderKey, projectId, userId, token)),\n\t\tonHandleDeleteFile: (fileKey, projectId, userId, token) => dispatch(repoActions.handleDeleteFile(fileKey, projectId, userId, token)),\n\t\tonGetProjectFilesForUser: (userId, projectId, token) => dispatch(repoActions.getProjectFilesForUser(userId, projectId, token)),\n\t\tonOpenTxtFileToPreview: (file, ifWaveSurferIsInitialized) => dispatch(repoActions.openTxtFileToPreview(file,ifWaveSurferIsInitialized)),\n\t\tonOpenAudioFileToPreview: (file,ifWaveSurferIsInitialized) => dispatch(repoActions.openAudioFileToPreview(file,ifWaveSurferIsInitialized)),\n\t\tonHandleDownloadFile: (fileKey, projectId, userId, token) => dispatch(repoActions.handleDownloadFile(fileKey, projectId, userId, token))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(repoBar));","import React, {Component} from 'react';\n\nimport './ContainerFile.css';\n\nimport {DragPreviewImage, useDrag} from 'react-dnd';\nimport ItemTypes from '../../ItemDndTypes';\n\nimport {ContextMenu, MenuItem, ContextMenuTrigger} from 'react-contextmenu';\nimport dragImage from '../../../ProjectPage/dragImage';\nimport EditableLabel from 'react-inline-editing';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileAudio } from '@fortawesome/free-solid-svg-icons';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { faSurprise } from '@fortawesome/free-solid-svg-icons';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\nimport { Tooltip } from '@material-ui/core';\n\nimport {withRouter } from 'react-router-dom';\n\n\n\nclass ContainerFile extends Component {\n\n    selectContainer = () => {\n        this.props.selectContainer(this.props.container._id)\n    }\n\n    handleClick = (e, data) => {\n        console.log(data.foo);\n    }\n\n    componentDidMount = () =>{\n       // console.log(\"ready\")\n    }\n\n    runVAD = (e) => {\n        e.preventDefault();\n        this.props.history.push('/projects/' + this.props.container.project +'/vad/');\n        this.props.onAddContainerToVAD(this.props.container);\n    }\n\n\n    runDIA = (e) => {\n        e.preventDefault();\n        this.props.history.push('/projects/' + this.props.container.project +'/dia/');\n        this.props.onAddContainerToDIA(this.props.container);\n    }\n\n    runRECO = (e) => {\n        e.preventDefault();\n        this.props.history.push('/projects/' + this.props.container.project +'/recognition/');\n        this.props.onAddContainerToReco(this.props.container);\n    }\n\n    runALIGN = (e) => {\n        e.preventDefault();\n        this.props.history.push('/projects/' + this.props.container.project +'/segment/');\n        this.props.onAddContainerToAlign(this.props.container);\n    }\n\n\n   \n    downloadElement = (action) => {\n\n        const userId = this.props.container.owner;\n        const projectId = this.props.container.project;\n        const sessionId = this.props.container.session;\n        const containerId = this.props.container._id;\n        const fileType = action;\n\n        \n        //let linkToDownload = process.env.REACT_APP_API_URL+ \"/repoFiles/\" + userId + \"/\" + projectId+\"/\"+sessionId+\"/\"+containerId+\"/\"+fileType+\"/?api_key=\"+this.props.token;\n\n        let linkToDownload = process.env.REACT_APP_API_URL+ \"/repoFiles/download/\"+containerId+\"/\"+fileType+\"/?api_key=\"+this.props.token;\n      \n\n        window.open(linkToDownload,\"_self\");\n\n       \n    }\n\n    copyToClipboard = (text) => {\n        const str = text;\n        const el = document.createElement('textarea');\n        el.value = str;\n        el.setAttribute('readonly', '');\n        el.style.position = 'absolute';\n        el.style.left = '-9999px';\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n    }\n\n    \n\n    handleClick = (e, data) => {\n\n       //const toolType = data.toolType;\n       const action = data.action;\n\n       switch(action){\n           case 'copyId':\n                const theID = this.props.container._id;\n                this.copyToClipboard(theID);\n                break;\n           case 'usun':\n                this.props.onRemoveContainer(this.props.container);\n                break;\n            case 'audio':\n                this.downloadElement(action);\n                break;\n            case 'oryginalAudio':\n                this.downloadElement(action);\n                break;\n            case 'VADctm':\n                this.downloadElement(action);\n                break;\n            case 'VADtextGrid':\n                this.downloadElement(action);\n                break;\n            case 'DIActm':\n                this.downloadElement(action);\n                break;\n            case 'DIAtextGrid':\n                this.downloadElement(action);\n                break;\n            case 'TXTTranscript':\n                this.downloadElement(action);\n                break;\n            case 'JSONTranscript':\n                this.downloadElement(action);\n                break;\n            case 'SEGctm':\n                this.downloadElement(action);\n                break;\n            case 'SEGtextGrid':\n                this.downloadElement(action);\n                break;\n            case 'EMUJSON':\n                this.downloadElement(action);\n                break;\n            default:\n                console.log(\"wrong action\")\n            \n       }\n    }\n\n\n\n    _handleFocus = (text) => {\n        // console.log('Focused with text: ' + text);\n     }\n \n     _handleFocusOut = (text) => {\n        // console.log('Left editor with text: ' + this.props.projectID + \" \" + text + \" \" + this.props.userId + \" \" + this.props.token);\n        //this.props.onChangeProjectName(this.props.projectID, text, this.props.userId, this.props.token);\n       //console.log(this.props.token)\n        this.props.onChangeContainerName(this.props.container, text, this.props.token);\n     }\n\n\n\n    render() {\n\n        \n\n        //wyświetlam tylko pierwsze 11 znaków nazwy pliku....\n        let contName = this.props.container.containerName;\n        //if(contName.length > 11){\n        //    contName = contName.substring(1,11) + \"...\";\n        //}\n\n      \n        const VADerrorClass = this.props.container.statusVAD=='error'? \"error\":\"\";\n        const DIAerrorClass = this.props.container.statusDIA=='error'? \"error\":\"\";\n        const RECerrorClass = this.props.container.statusREC=='error'? \"error\":\"\";\n        const SEGerrorClass = this.props.container.statusSEG=='error'? \"error\":\"\";\n \n\n        \n\n        return(\n            <div>\n              \n                <ContextMenuTrigger id={\"ToolItemREPOId\"+this.props.container._id}>\n\n                    <div className={this.props.ifSelected? \"ContainerFile selected\" : \"ContainerFile\"} \n                        onClick={this.selectContainer}\n                        >\n\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <div className=\"containerName\">\n\n                                {\n                                    //<FontAwesomeIcon icon={faFileAudio} className=\"repoIconMain\" /> \n                                }\n                                   \n                                \n                                     <EditableLabel text={contName}\n                                        labelClassName='myLabelContainerClass'\n                                        inputClassName='myInputContainerClass'\n                                        inputWidth='160px'\n                                        isEditing={false}\n                                        inputHeight='25px'\n                                        inputMaxLength={50}\n                                        onFocus={this._handleFocus}\n                                        onFocusOut={this._handleFocusOut}\n                                    />\n\n\n                                </div>\n                                \n                            </div>\n                            <div className=\"col\">\n                                <div className=\"repoManageIcons\">\n                                \n                                {\n                                    /*\n                                    <Tooltip title=\"Posłuchaj\">\n                                    <a href=\"#\" role=\"button\" onClick={this.runPlay} >\n                                        <FontAwesomeIcon icon={faPlay} className={[\"repoIcon\",this.props.ifAudio? \"on\": \"\"].join(\" \")} /> \n                                    </a>\n                                </Tooltip>\n                                    */\n                                }\n                               \n\n                                <Tooltip title=\"Detekcja mowy (VAD)\">\n                                    <a href=\"#\" role=\"button\"  onClick={this.runVAD} >\n                                        \n                                        <FontAwesomeIcon icon={faSurprise} className={[\"repoIcon\",VADerrorClass, this.props.container.ifVAD? \"on\": \"\"].join(\" \")}/> \n                                    </a>\n                                </Tooltip>\n\n                                <Tooltip title=\"Diaryzacja (DIA)\">\n                                    <a href=\"#\" role=\"button\" onClick={this.runDIA} >\n                                        <FontAwesomeIcon icon={faComment} className={[\"repoIcon\",DIAerrorClass, this.props.container.ifDIA? \"on\": \"\"].join(\" \")}/> \n                                    </a>\n                                </Tooltip>\n\n                                <Tooltip title=\"Rozpoznawanie mowy (REC)\">\n                                    <a href=\"#\" role=\"button\" onClick={this.runRECO} >\n                                        <FontAwesomeIcon icon={faFileAlt} className={[\"repoIcon\",RECerrorClass, this.props.container.ifREC? \"on\": \"\"].join(\" \")}/> \n                                    </a>\n                                </Tooltip>\n\n                                <Tooltip title=\"Segmentacja (SEG)\">\n                                    <a href=\"#\" role=\"button\"  onClick={this.runALIGN}>\n                                        <FontAwesomeIcon icon={faClock} className={[\"repoIcon\",SEGerrorClass, this.props.container.ifSEG? \"on\": \"\"].join(\" \")}/> \n                                    </a>\n                                </Tooltip>\n                               \n                               </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </ContextMenuTrigger>\n\n                <ContextMenu id={\"ToolItemREPOId\"+this.props.container._id}>\n                    <MenuItem disabled={false} data={{toolType: this.props.type, action: 'copyId'}} onClick={this.handleClick}>\n                         Kopiuj ID: {this.props.container._id}\n                    </MenuItem>\n                    <MenuItem divider />\n                    <MenuItem disabled={false} data={{toolType: this.props.type, action: 'usun'}} onClick={this.handleClick}>\n                         Usuń z repozytorium\n                    </MenuItem>\n                    <MenuItem divider />\n                    <MenuItem disabled={false} data={{toolType: this.props.type, action: 'audio'}} onClick={this.handleClick}>\n                         Pobierz plik audio WAV 16000Hz, 16bit\n                    </MenuItem>\n                    <MenuItem disabled={false} data={{toolType: this.props.type, action: 'oryginalAudio'}} onClick={this.handleClick}>\n                         Pobierz oryginalny plik audio\n                    </MenuItem>\n                    <MenuItem divider />\n                    <MenuItem disabled={this.props.container.ifVAD? false: true} data={{toolType: this.props.type, action: 'VADctm'}} onClick={this.handleClick}>\n                         Pobierz plik detekcji mowy w formacie CTM\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifVAD? false: true} data={{toolType: this.props.type, action: 'VADtextGrid'}} onClick={this.handleClick}>\n                         Pobierz plik detekcji mowy w formacie TextGrid\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifDIA? false: true} data={{toolType: this.props.type, action: 'DIActm'}} onClick={this.handleClick}>\n                         Pobierz plik diaryzacji w formacie CTM\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifDIA? false: true} data={{toolType: this.props.type, action: 'DIAtextGrid'}} onClick={this.handleClick}>\n                         Pobierz plik diaryzacji mowy w formacie TextGrid\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifREC? false: true} data={{toolType: this.props.type, action: 'TXTTranscript'}} onClick={this.handleClick}>\n                         Pobierz transkrypcje w formacie txt\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifREC? false: true} data={{toolType: this.props.type, action: 'JSONTranscript'}} onClick={this.handleClick}>\n                          Pobierz transkrypcje w formacie json\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifSEG? false: true} data={{toolType: this.props.type, action: 'SEGctm'}} onClick={this.handleClick}>\n                         Pobierz segmentacje w formacie ctm\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifSEG? false: true} data={{toolType: this.props.type, action: 'SEGtextGrid'}} onClick={this.handleClick}>\n                         Pobierz segmentacje w formacie TextGrid\n                    </MenuItem>\n                    <MenuItem disabled={this.props.container.ifSEG? false: true} data={{toolType: this.props.type, action: 'EMUJSON'}} onClick={this.handleClick}>\n                        Pobierz segmentacje w formacie json\n                    </MenuItem>\n                </ContextMenu>\n\n             \n\n            </div>\n\n        )\n    }\n}\n\nexport default withRouter(ContainerFile);","import React, { Component } from 'react'\nimport './Dropzone.css'\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Dropzone extends Component {\n\n    state = {\n        hightlight: false,\n    }\n\n  constructor(props) {\n    super(props)\n    this.fileInputRef = React.createRef();\n    this.openFileDialog = this.openFileDialog.bind(this);\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n\n    this.onDragOver = this.onDragOver.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  openFileDialog() {\n    if (this.props.disabled) return;\n    this.fileInputRef.current.click();\n  }\n\n  onFilesAdded(evt) {\n    if (this.props.disabled) return;\n    const files = evt.target.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n  }\n\n  fileListToArray(list) {\n    const array = [];\n    for (var i = 0; i < list.length; i++) {\n      array.push(list.item(i));\n    }\n    return array;\n  }\n\n\n  onDrop(event) {\n    event.preventDefault();\n  \n    if (this.props.disabled) return;\n  \n    const files = event.dataTransfer.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n    this.setState({ hightlight: false });\n  }\n\n\n  onDragOver(evt) {\n    evt.preventDefault();\n    if (this.props.disabled) return;\n    this.setState({ hightlight: true });\n  }\n\n  onDragLeave() {\n    this.setState({ hightlight: false });\n  }\n\n\n\n  render() {\n    \n    return (\n\n\n      <div className={this.state.hightlight ? 'Dropzone Highlight' : 'Dropzone'}\n            onDragOver={this.onDragOver}\n            onDragLeave={this.onDragLeave}\n            onDrop={this.onDrop}\n            onClick={this.openFileDialog}\n            style={{ cursor: this.props.disabled ? \"default\" : \"pointer\" }} >\n\n        <div>\n             <FontAwesomeIcon icon={faUpload} className=\"icon\"/> <span className=\"iconText\">Wgraj pliki</span>\n        </div>\n          \n\n         <input\n          ref={this.fileInputRef}\n          className=\"FileInput\"\n          type=\"file\"\n          multiple\n          onChange={this.onFilesAdded}\n        />\n\n        \n      \n      </div>\n    );\n  }\n}\n\nexport default Dropzone;","import React, { Component } from 'react'\nimport './Progress.css'\n\nclass Progress extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n  render() {\n\n    let classNameForSuccess = \"Progress\";\n\n    if(this.props.progress === 100){\n      classNameForSuccess = \"Progress success\";\n    } else {\n      classNameForSuccess = \"Progress\";\n    }\n\n    return (\n      <div className=\"ProgressProgressBar\">\n        <div\n          className={classNameForSuccess}\n          style={{ width: this.props.progress + '%' }}\n        />\n      </div>\n    )\n  }\n}\n\n\n\nexport default Progress","import React, { Component } from 'react'\nimport './UploadAudio.css'\nimport Dropzone from '../UI/Dropzone/Dropzone';\nimport Progress from '../UI/Progress/Progress';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import { faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n//import { CHANGE_AUDIO_DISPLAYED } from '../../store/actions/actionsTypes';\n//import ContainerFile from '../../containers/ProjectPage/RepoPanel/ContainerFile/ContainerFile';\nimport * as repoActions from '../../store/actions/index';\nimport {getExt} from '../../utils/utils';\nimport {extensionMapping} from '../../utils/fileTypes';\nimport uniqueFilename from 'unique-filename';\n\n\nclass UploadAudio extends Component {\n\n    state = {\n        files: [],\n        uploading: false,\n        uploadProgress: {},\n        successfullUploaded: false,\n        uploadValid: {}, //czy poprawne rozszerzenie\n      };\n\n      \n    constructor(props) {\n      super(props)\n      this.onFilesAdded = this.onFilesAdded.bind(this);\n      this.uploadFiles = this.uploadFiles.bind(this);\n      this.sendRequest = this.sendRequest.bind(this);\n      this.renderActions = this.renderActions.bind(this);\n    }\n\n\n    onFilesAdded(files) {\n\n      let validatedFiles = this.state.uploadValid;\n\n      for (let i=0;i<files.length;i++){\n\n        let file = files[i];\n        let fileExtention = getExt(file.name);\n        fileExtention = fileExtention[0];\n  \n        //sprawdzam czy plik ma akceptowalne rozszerzenie\n        if(extensionMapping.hasOwnProperty(fileExtention)) {\n          validatedFiles[file.name] = true;\n        } else {\n          validatedFiles[file.name] = false;\n        }\n      }\n\n      //uploadValid\n        this.setState(prevState => ({\n          files: prevState.files.concat(files),\n          uploadValid: validatedFiles,\n        }));\n    }\n\n\n    sendRequest(file) {\n\n        const projectId = this.props.currentProjectID;\n        const userId = this.props.currentProjectOwner;\n        const sessionId = this.props.forSession;\n\n        //generuje unikatową nazwę\n\n        const uniqueHash = uniqueFilename(\"\");\n\n        return new Promise((resolve, reject) => {\n          const dataToSend = new FormData();\n\n          dataToSend.append('userId', userId);\n          dataToSend.append('projectId', projectId);\n          dataToSend.append('sessionId', sessionId);\n          dataToSend.append('uniqueHash', uniqueHash);\n          dataToSend.append('myFile', file);\n\n  \n          axios.post('/repoFiles/uploadFile', dataToSend,{\n  \n            headers: {\n                Authorization: 'Bearer ' + this.props.token,\n                'Content-Type': `multipart/form-data; boundary=${dataToSend._boundary}`,\n            },\n  \n            onUploadProgress: ProgressEvent => {\n              const copy = { ...this.state.uploadProgress };\n              copy[file.name] = {\n                state: \"pending\",\n                percentage: (ProgressEvent.loaded / ProgressEvent.total) * 100\n              };\n             this.setState({ uploadProgress: copy });\n            },\n          })\n          .then(response => {\n  \n            let oryginalName = response.data.oryginalName;\n            let sessionId = response.data.sessionId;\n            let containerId = response.data.containerId;\n            let message = response.data.message;\n  \n            const copy = { ...this.state.uploadProgress };\n            copy[oryginalName] = { state: \"done\", percentage: 100 };\n            this.setState({ uploadProgress: copy });\n  \n            resolve(response);\n          })\n          .catch(error=>{\n\n            reject(error);\n\n          });\n        })\n    }\n\n    \n \n    async uploadFiles(sid) {\n\n      this.setState({ uploadProgress: {}, uploading: true });\n\n      const promises = [];\n\n     \n      this.state.files.forEach(file => {\n        promises.push(this.sendRequest(file));\n      });\n\n      //czekam aż wszystkie pliki się załadują\n      try {\n        await Promise.all(promises);\n    \n        this.setState({ successfullUploaded: true, uploading: false });\n\n         // this.props.onGetProjectFilesForUser(\n         //  this.props.currentProjectOwner, \n         //  this.props.currentProjectID,\n         //  this.props.token);\n         // this.setState({ files: [], successfullUploaded: true,  uploading: false });\n\n\n      } catch (e) {\n        \n        // TO DO: musze dorobić jakiś error handling tutaj - narazie jest tylko to\n        this.setState({ successfullUploaded: false, uploading: false });\n      }\n\n    }\n\n\n\n\n  //   req.upload.addEventListener(\"load\", event => {\n  //     const copy = { ...this.state.uploadProgress };\n  //     copy[file.name] = { state: \"done\", percentage: 100 };\n  //     this.setState({ uploadProgress: copy });\n  //     resolve(req.response);\n  //    });\n      \n  // req.upload.addEventListener(\"error\", event => {\n  // const copy = { ...this.state.uploadProgress };\n  // copy[file.name] = { state: \"error\", percentage: 0 };\n  // this.setState({ uploadProgress: copy });\n  // reject(req.response);\n  // });\n\n      // async uploadFiles() {\n\n      //   this.setState({ uploadProgress: {}, uploading: true });\n      //   const promises = [];\n      //   this.state.files.forEach(file => {\n      //     promises.push(this.sendRequest(file));\n      //   });\n\n      //   try {\n      //     await Promise.all(promises);\n      \n      //     this.setState({ successfullUploaded: true, uploading: false });\n      //   } catch (e) {\n      //     // Not Production ready! Do some error handling here instead...\n      //     this.setState({ successfullUploaded: true, uploading: false });\n      //   }\n      // }\n\n\n      uploadFinishAndUpdateRepo = () => {\n        this.props.onGetProjectFilesForUser(\n          this.props.currentProjectOwner, \n          this.props.currentProjectID,\n          this.props.token);\n        this.setState({ files: [], successfullUploaded: false });\n      }\n\n\n      renderActions() {  \n        if(this.state.files.length > 0){\n          if (this.state.successfullUploaded) {\n            return (\n              <button onClick={this.uploadFinishAndUpdateRepo} >\n                Zaktualizuj repozytorium\n              </button>\n            );\n          } else {\n            return (\n              <button\n                disabled={this.state.files.length < 0 || this.state.uploading}\n                onClick={(sessionId) => this.uploadFiles(sessionId)}\n              >\n                Wgraj pliki\n              </button>\n            );\n          }\n        }\n      }\n\n   \n\n      // sendRequest(file) {\n      //   return new Promise((resolve, reject) => {\n      //     const req = new XMLHttpRequest();\n\n      //     req.upload.addEventListener(\"progress\", event => {\n      //       if (event.lengthComputable) {\n      //        const copy = { ...this.state.uploadProgress };\n      //        copy[file.name] = {\n      //         state: \"pending\",\n      //         percentage: (event.loaded / event.total) * 100\n      //        };\n      //        this.setState({ uploadProgress: copy });\n      //       }\n      //      });\n            \n      //      req.upload.addEventListener(\"load\", event => {\n      //       const copy = { ...this.state.uploadProgress };\n      //       copy[file.name] = { state: \"done\", percentage: 100 };\n      //       this.setState({ uploadProgress: copy });\n      //       resolve(req.response);\n      //      });\n            \n      //      req.upload.addEventListener(\"error\", event => {\n      //       const copy = { ...this.state.uploadProgress };\n      //       copy[file.name] = { state: \"error\", percentage: 0 };\n      //       this.setState({ uploadProgress: copy });\n      //       reject(req.response);\n      //      });\n      \n      //     const formData = new FormData();\n      //     formData.append(\"file\", file, file.name);\n\n      //     console.log(process.env.REACT_APP_API_URL)\n      \n      //     req.open(\"POST\", process.env.REACT_APP_API_URL + \"/repoFiles/uploadFile\");\n      //     req.send(formData);\n      //   });\n      // }\n\n\n      renderProgress(file) {\n        const uploadProgress = this.state.uploadProgress[file.name];\n                   \n        if (this.state.uploading || this.state.successfullUploaded) {\n\n          let containerRep = (\n              <div className=\"ProgressWrapper\">\n                  <Progress progress={uploadProgress ? uploadProgress.percentage : 0} />\n              </div>\n            );\n       \n          return containerRep;\n        }\n      }\n\n\n      removeToUpload = (index,fileId, e) => {\n\n        const filetoremove = this.state.files[index];\n\n\n        const newFileList = this.state.files.filter((file) => {\n          return file != filetoremove;\n        });\n\n        // usuwanie plików z listy plików do wgrania na serwer\n        this.setState(prevState => ({\n          files: newFileList\n        }))\n      }\n  \n    render() {\n\n    \n        return (\n            <div className=\"UploadAudio\">\n              <div className=\"ContentUploadAudio\">\n\n                <div>\n                  <Dropzone\n                    onFilesAdded={this.onFilesAdded}\n                    disabled={this.state.uploading}\n                  />\n                </div>\n\n                <div className=\"Files\">\n                    {this.state.files.map((file, index) => {\n\n                        const uploadProgress = this.state.uploadProgress[file.name];\n\n                       \n\n                        let containerRep = null; //container representation\n                        let removeIcon = null;\n                        let ifValidClass = null;\n\n                        //jezeli nie jest audio to zaznaczam\n                         if(this.state.uploadValid[file.name]){\n                            ifValidClass = \"valid\";\n                        } else {\n                            ifValidClass = \"invalid\";\n                        }\n\n                        //decyduje czy wyświetlić plik czy etap jego ładowania\n                        if(uploadProgress && uploadProgress.state === \"done\"){\n                        } else {\n                          removeIcon = <FontAwesomeIcon icon={faMinusCircle} \n                                          className=\"removeFile\" \n                                          onClick={(e) => this.removeToUpload(index, file.name+index, e)} /> \n                        }\n\n                        containerRep = (\n                          <div key={file.name+index} className={\"FileToUpload\"}>\n                              {removeIcon}\n                              <span className={[\"Filename\",ifValidClass].join(\" \")}>{file.name}</span>\n                              {this.renderProgress(file)}\n                          </div>\n                       );\n\n                        return containerRep;\n\n                    })}\n\n                </div>\n              </div>\n              <div className=\"Actions\">{this.renderActions()}</div>\n            </div>\n          );\n    }\n  }\n\n\n  const mapStateToProps = (state) => {\n    return {\n\n      currentProjectID: state.projectR.currentProjectID,\n      currentProjectName: state.projectR.currentProjectName,\n      currentProjectOwner: state.projectR.currentProjectOwner,\n      currentlySelestSessions: state.repoR.currentlySelestSessions,\n      token: state.homeR.token,\n\n      // uploadPercent: state.repoR.uploadProgress,\n      // uploadBtnDisabled: state.repoR.uploadBtnDisabled,\n      // uploadFilesDone: state.repoR.uploadFilesDone,\n  \n      // files: state.repoR.files,\n       \n  \n      // modal: state.projectR.modal,\n  \n      //     txtDisplayed: state.previewR.txtDisplayed,\n      //     txtfileName: state.previewR.txtfileName,\n      //     txtFileUrl: state.previewR.txtFileUrl,\n  \n      //     audiofileName: state.previewR.audiofileName,\n      //     audioDisplayed: state.previewR.audioDisplayed,\n      //     audioFileUrl:  state.previewR.audioFileUrl,\n      //     waveSurferInitialized: state.previewR.waveSurferInitialized,\n      //     playing: state.previewR.playing,\n    }\n  }\n  \n  const mapDispatchToProps = dispatch => {\n    return {\n        onGetProjectFilesForUser: (userId, projectId, token) => dispatch(repoActions.getProjectFilesForUser(userId, projectId, token)),\n\n      // onOpenModalHandler: () => dispatch(repoActions.openModalProject()),\n      // onCloseModalHandler: () => dispatch(repoActions.closeModalProject()),\n      // onUploadFilesFinish: () => dispatch(repoActions.uploadFilesFinish()),\n      // onUploadFilesModalOpen: () => dispatch(repoActions.uploadFilesModalOpen()),\n      // onUploadFiles: (fileList, folderKey, userId, projectId, token) => dispatch(repoActions.uploadFiles(fileList,folderKey,userId, projectId, token)),\n      // onHandleCreateFolder: (key, projectId, userId, token) => dispatch(repoActions.handleCreateFolder(key, projectId, userId, token)),\n      // onHandleCreateFiles: (files, prefix) => dispatch(repoActions.handleCreateFiles(files, prefix)),\n      // onHandleRenameFolder: (oldKey, newKey, projectId, userId, token) => dispatch(repoActions.handleRenameFolder(oldKey, newKey, projectId, userId, token)),\n      // onHandleRenameFile: (oldKey, newKey, projectId, userId, token) => dispatch(repoActions.handleRenameFile(oldKey, newKey, projectId, userId, token)),\n      // onHandleDeleteFolder: (folderKey, projectId, userId, token) => dispatch(repoActions.handleDeleteFolder(folderKey, projectId, userId, token)),\n      // onHandleDeleteFile: (fileKey, projectId, userId, token) => dispatch(repoActions.handleDeleteFile(fileKey, projectId, userId, token)),\n      // onGetProjectFilesForUser: (userId, projectId, token) => dispatch(repoActions.getProjectFilesForUser(userId, projectId, token)),\n      // onOpenTxtFileToPreview: (file, ifWaveSurferIsInitialized) => dispatch(repoActions.openTxtFileToPreview(file,ifWaveSurferIsInitialized)),\n      // onOpenAudioFileToPreview: (file,ifWaveSurferIsInitialized) => dispatch(repoActions.openAudioFileToPreview(file,ifWaveSurferIsInitialized)),\n      // onHandleDownloadFile: (fileKey, projectId, userId, token) => dispatch(repoActions.handleDownloadFile(fileKey, projectId, userId, token))\n    }\n  }\n\n  export default connect(mapStateToProps, mapDispatchToProps)(UploadAudio);","import React, {Component} from 'react';\nimport ContainerFile from '../ContainerFile/ContainerFile';\nimport './RepoSession.css';\n\nimport UploadAudio from '../../../../components/UploadAudio/UploadAudio';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import { faFolderPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faFolderOpen } from '@fortawesome/free-solid-svg-icons';\nimport { faFolder } from '@fortawesome/free-solid-svg-icons';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport {ContextMenu, MenuItem, ContextMenuTrigger} from 'react-contextmenu';\n\nclass RepoSession extends Component {\n\n    state = {\n        ifOpened: false,\n    }\n\n    clickFolderHandler = () => {\n        this.setState({\n            ifOpened: this.state.ifOpened? false: true,\n        });\n    }\n\n    selectTheSession = () => {\n      //  this.props.selectTheContainer(null);\n        this.props.selectTheSession(this.props.sessionId);\n    }\n\n    selectTheContainer = (containerId) => {\n       // this.selectTheSession();\n        this.props.selectTheContainer(containerId);\n    }\n\n    shouldComponentUpdate(nextProps, nextState){\n        //console.log(nextProps)\n        return true;\n    }\n\n    copyToClipboard = (text) => {\n        const str = text;\n        const el = document.createElement('textarea');\n        el.value = str;\n        el.setAttribute('readonly', '');\n        el.style.position = 'absolute';\n        el.style.left = '-9999px';\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n    }\n\n    handleClick = (e, data) => {\n\n        //const toolType = data.toolType;\n        const action = data.action;\n \n        switch(action){\n            case 'usun':\n                 this.props.onRemoveSession(this.props.sessionId, this.props.sessionName);\n                 break;\n            case 'kopiujID':\n                const theID = this.props.sessionId;\n                this.copyToClipboard(theID);\n                 break;\n             default:\n                 console.log(\"wrong action\")\n        }\n     }\n\n\n    render() {\n\n        let uploadCard = (\n            <div className=\"uploadCard\">\n                <UploadAudio forSession={this.props.sessionId} />\n            </div>\n        )\n\n        let containerList = null;\n\n        containerList = this.props.containers.map(container => {\n            return   <ContainerFile \n                            container = {container}\n                            onAddContainerToReco = {this.props.onAddContainerToReco}\n                            onAddContainerToAlign = {this.props.onAddContainerToAlign}\n                            onAddContainerToVAD = {this.props.onAddContainerToVAD}\n                            onAddContainerToDIA = {this.props.onAddContainerToDIA}\n                            onChangeContainerName = {this.props.onChangeContainerName}\n                            key = {container._id}\n                            onRemoveContainer = {this.props.onRemoveContainer}\n                            token={this.props.token}\n                            ifSelected = {container.ifSelected}\n                            selectContainer = {this.selectTheContainer}/>\n        });\n\n        \n\n\n\n        return (\n            <div className=\"RepoSession\">\n\n                <ContextMenuTrigger id={\"ToolItemSESSIONId\"+this.props.sessionId}>\n                    <div className={this.props.ifSelected? \"sessionFolder selected\" : \"sessionFolder\"} onClick={this.selectTheSession} >\n\n                        <FontAwesomeIcon icon={this.state.ifOpened? faChevronDown: faChevronRight} className=\"repoIcon\" style={{fontSize: '0.7em'}} onClick={this.clickFolderHandler}/>\n                        <FontAwesomeIcon icon={this.state.ifOpened? faFolderOpen: faFolder} className=\"repoIcon\" onClick={this.clickFolderHandler}/> \n                        <span className=\"sessionName\" >{this.props.sessionName}</span>\n\n                        {this.props.ifSelected?\n                            <FontAwesomeIcon icon={faChevronDown} className=\"repoIcon\" style={{fontSize: '0.7em', float: 'right', margin: '6px'}} onClick={this.clickFolderHandler}/> \n                            :\n                            null\n                        }\n                        \n\n                    </div>\n                </ContextMenuTrigger>\n\n                <ContextMenu id={\"ToolItemSESSIONId\"+this.props.sessionId}>\n                    <MenuItem disabled={false} data={{action: 'kopiujID'}} onClick={this.handleClick}>\n                         Kopiuj ID sesji: {this.props.sessionId}\n                    </MenuItem>\n                    <MenuItem disabled={false} data={{action: 'usun'}} onClick={this.handleClick}>\n                         Usuń sesje wraz z zawartością\n                    </MenuItem>\n                </ContextMenu>\n\n                <div className=\"containerList\">\n                    {this.state.ifOpened? uploadCard: null}\n                    {this.state.ifOpened? containerList: null}\n                </div>\n                \n             </div>\n        )\n    }\n}\n\nexport default RepoSession;","import React, { Component } from 'react';\n\n\nclass SingleInputForm extends Component {\n\n    state = {\n        value: '',\n        isValid: false,\n    }\n\n\n    render() {\n\n        const errorMessage = this.props.errorMessage || false;\n\n        return (\n\n            <form onSubmit={this.props.onSubmitHandler}>\n                <h5 style={{textAlign:'left'}}>{this.props.title}</h5>\n                <hr/>\n                {\n                    errorMessage !== false ?\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {this.props.errorMessage}\n                        </div> : null\n                }\n                <div className=\"input-group mb-3\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder={this.props.placeholder}\n                        onChange={this.props.onChangeHandler}\n                        value={this.props.value} />\n                    <div className=\"input-group-append\">\n                        <button\n                            className=\"btn btn-primary\"\n                            type=\"submit\"\n                        >\n                            {this.props.buttonLabel}\n                        </button>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default SingleInputForm","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './RepoPanel.css';\nimport { connect } from 'react-redux';\nimport * as repoActions from '../../../store/actions/index';\nimport { withRouter } from 'react-router-dom';\n//import { getExt } from '../../../utils/utils';\nimport Modal from '../../../components/UI/Modal/Modal';\n//import Preview from '../../../components/Preview/Preview';\n//import {getFileKeyFromURL} from '../../../utils/utils';\n//import DragAndDrop from '../../../components/UI/DragAndDrop/DragAndDrop';\n//import DropFilesArea from '../../../components/UI/DropFilesArea/DropFilesArea';\n//import uuid from 'uuid';\n//import { extensionMapping } from '../../../utils/fileTypes';\n//import {Alert, Progress} from 'reactstrap';\n//import UploadAudio from '../../../components/UploadAudio/UploadAudio';\nimport RepoSession from './RepoSession/RepoSession';\nimport SingleInputForm from '../../../components/UI/SingleInputForm/SingleInputForm';\nimport ButtonLeftBar from '../../../components/UI/ButtonLeftBar/ButtonLeftBar';\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\n\n\n\nimport ContainerFile from './ContainerFile/ContainerFile';\n\nimport { Tooltip } from '@material-ui/core';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolderPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faCloudUploadAlt } from '@fortawesome/free-solid-svg-icons';\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\nclass repoPanel extends Component {\n\n    state = {\n        clickCreateSession: false,\n        clickExportToMenu: false,\n        clickRemoveItem: false,\n        newSessionName: \"\",\n\n        modal: false,\n        whatClicked: '',\n\n        waitingForCorpus: false,\n\n        whichContainerToRemove: null,\n        whichSessionIdToRemove: null,\n    }\n\n    removeObjectFromRepo = () => {\n        let selectedSession = this.props.currentlySelectedSessions;\n        let selectedContainers = this.props.currentlySelectedContainers;\n\n        if(selectedSession[0] !== null && selectedSession.length > 0) {\n            alert(\"Czy chcesz usunąć sesję wraz ze wszystkimi plikami w tej sesji?\")\n        } else {\n            //usuwam zaznaczone containery\n            for(let i=0;i<selectedContainers.length;i++){\n                let containerId = selectedContainers[i];\n                this.props.removeContainerFromRepo(\n                    this.props.currentProjectOwner,\n                    this.props.currentProjectID,\n                    this.props.repoData.containers.byId[containerId].session,\n                    containerId,\n                    this.props.token);\n            }\n\n        }\n    }\n\n\n    selectSessionHandler = (sessionId) => {\n        this.props.onSelectSession(sessionId);\n    }\n\n    selectContainerHandler = (containerId) => {\n        this.props.onSelectContainer(containerId);\n    }\n\n    componentDidMount() {\n\t\tthis.refreshRepo();\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if(prevProps.exportToEmuReady !== this.props.exportToEmuReady){\n            this.setState({\n                waitingForCorpus: false,\n            })\n        }\n    }\n    \n\n\trefreshRepo() {\n\t\t//wysylam zadanie aby pobrac aktualne pliki w katalogu uzytkownika\n\t\tconst currentProjectID = this.props.currentProjectID;\n\t\tconst currentProjectOwner = this.props.currentProjectOwner; //Owner id\n\n\t\tthis.props.onGetProjectFilesForUser(currentProjectOwner, currentProjectID, this.props.token);\n    }\n    \n    addSession = () => {\n        //this.setState({clickCreateSession: true});\n        //this.props.onOpenModalHandler();\n        this.setState({\n            modal: true,\n            whatClicked: 'addSession',\n        })\n    }\n\n    closeModalHandler = () => {\n        this.setState({\n            modal:false,\n            whatClicked: '',\n            whichContainerToRemove: null,\n            whichSessionIdToRemove: null,\n            whichSessionNameToRemove: '',\n        })\n\t\t//this.props.onCloseModalHandler();\n    }\n\n    //zajmuje się obsługą updatu inputa dla nazwy nowego projektu\n    newSessionChangeHandler = (event) => {\n        event.preventDefault();\n        this.setState({\n          newSessionName: event.target.value,\n        })\n    }\n\n    // wysyła tworzenie nowego projektu\n    onSubmitNewSessionHandler = (event) => {\n        event.preventDefault();\n        this.props.createNewSession(this.state.newSessionName, \n            this.props.currentProjectID, \n            this.props.currentProjectOwner,\n            this.props.token\n            );\n       // this.props.onCloseModalHandler();\n       this.setState({\n           modal:false,\n       })\n    }\n\n\n    // dodaje contener do listy Rozpoznawania\n    addContainerToRecoList = (container) => {\n       // console.log(this.props.repoData.containers.byId[containerId])\n        this.props.addContainerToReco(container);\n    }\n\n    // dodaje contaner do listy Align\n    addContainerToAlignList = (container) => {\n        this.props.addContainerToAlign(container);\n    }\n\n    // dodaje contaner do listy DIaryzacji\n    addContainerToDIAList = (container) => {\n        this.props.addContainerToDIA(container);\n    }\n\n    // dodaje contaner do listy voice activity detection\n    addContainerToVADList = (container) => {\n        this.props.addContainerToVAD(container);\n    }\n\n    removeContainer = (container) => {\n        //this.props.removeContainer(container);\n        \n        this.setState({\n            modal: true,\n            whatClicked: 'removeContainer',\n            whichContainerToRemove: container,\n        })\n        \n    }\n\n\n    finallyRemoveContainer = () => {\n        this.props.removeContainerFromRepo(this.props.currentProjectOwner, this.props.currentProjectID, this.state.whichContainerToRemove.session,this.state.whichContainerToRemove._id,this.props.token);\n        this.closeModalHandler();\n    }\n\n   \n\n    removeSession = (sessionId,sessionName) => {\n       // this.props.removeSessionFromRepo(this.props.currentProjectOwner, this.props.currentProjectID, sessionId,this.props.token)\n    \n       this.setState({\n            modal: true,\n            whatClicked: 'removeSession',\n            whichSessionIdToRemove: sessionId,\n            whichSessionNameToRemove: sessionName,\n        })\n    }\n\n    finallyRemoveSession = () => {\n        this.props.removeSessionFromRepo(this.props.currentProjectOwner, this.props.currentProjectID, this.state.whichSessionIdToRemove,this.props.token)\n        this.closeModalHandler();\n    }\n\n    openConfirmExportToEmu = () => {\n        this.setState({\n            modal: true,\n            whatClicked: 'EMUexport',\n        })\n        //this.props.onOpenModalHandler();\n    }\n\n\n\n    runEMUExport = () => {\n        this.setState({\n            waitingForCorpus: true\n        });\n        this.props.onExportToEMU(this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n    }\n\n    \n\n\n    downloadCorpus = () => {\n\n        let projectId = this.props.currentProjectID;\n        let userId = this.props.currentProjectOwner;\n\n        //let audioGetUrl = process.env.REACT_APP_API_URL+ \"/repoFiles/\" + userId + \"/\" + projectId + \"/\"+sessionId+\"/\"+containerId+\"/audio?api_key=\"+token;\n\t\t\n        let corpusPath = process.env.REACT_APP_API_URL+ \"/repoFiles/downloadKorpus/\" + userId + \"/\" + projectId+\"/?api_key=\"+this.props.token;;\n\t\t\n        window.open(corpusPath);\n\n        this.props.onKorpusDownloaded();\n    }\n\n    modalContentEMUExport = () => {\n\n        let content = null;\n        let akcjaKorpus = <button type=\"button\" className=\"btn btn-primary\" onClick={this.runEMUExport}>Ok</button>;\n\n        //sprawdzam czy przynajmniej jeden jest gotowy do eks\n        if(this.props.exportToEmuReady){\n            akcjaKorpus = <button type=\"button\" className=\"btn btn-primary\" onClick={this.downloadCorpus}>Pobierz korpus</button>;\n        } else {\n            if(this.state.waitingForCorpus){\n                akcjaKorpus = <RingLoader\n                css={override}\n                size={'40px'}\n                color={\"rgb(52, 152, 219)\"}\n                loading={true}\n                />;\n            }\n        }\n\n        content = (\n            <div>\n                <p>Zostaną wyeksportowane tylko te pliki dla których zostały wykonane wszystkie poziomy annotacji.</p>\n                <p>Podcas tego procesu nie wykonuj żadnych czynności</p>\n                {\n                    akcjaKorpus\n                }                   \n                \n            </div>\n            \n        );\n\n        return content;\n    }\n\n\n    modalContentRemoveContainer = () => {\n        let containerName = this.state.whichContainerToRemove.containerName;\n\n            let content = (\n                <div>\n                    <p>\n                        {containerName}\n                    </p>\n                 \n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.finallyRemoveContainer}>TAK</button>\n                    \n\n                     <button type=\"button\" className=\"btn btn-outline-primary\" onClick={this.closeModalHandler}>NIE</button>\n                </div>\n            )\n\n            return content;\n    }\n\n    modalContentRemoveSession = () => {\n        let sessionName = this.state.whichSessionNameToRemove;\n\n            let content = (\n                <div>\n                    <p>\n                        {sessionName}\n                    </p>\n                 \n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.finallyRemoveSession}>TAK</button>\n                     <button type=\"button\" className=\"btn btn-outline-primary\" onClick={this.closeModalHandler}>NIE</button>\n                </div>\n            )\n\n            return content;\n    }\n\n    modalContentAddSession = () => {\n        let lebelButton  = \"Stwórz sesje\";\n\n        let content = (\n            <SingleInputForm \n                placeholder={\"Podaj nazwe sesji\"}\n                onChangeHandler={this.newSessionChangeHandler}\n                value={this.state.newSessionName}\n                buttonLabel={lebelButton}\n                onSubmitHandler={this.onSubmitNewSessionHandler}/>\n        );\n\n        return content;\n    }\n\n\n\n\trender() {\n\n        //############## zawartość okna modalnego\n\n        let modalTitle = \"\";\n        let modalContent = null;\n        \n\n        switch(this.state.whatClicked){\n            case 'EMUexport':\n                modalTitle = \"Czy jesteś pewien że chcesz eksportować korpus do EMU?\";\n                modalContent = this.modalContentEMUExport();\n                break;\n            case 'removeContainer':\n                modalTitle = \"Czy jesteś pewien że chcesz usunąć ?\";\n                modalContent = this.modalContentRemoveContainer();\n                break;\n            case 'removeSession':\n                modalTitle = \"Czy jesteś pewien że chcesz usunąć całą sesję wraz z zawartością?\";\n                modalContent = this.modalContentRemoveSession();\n                break;\n            case 'addSession':\n                modalTitle = \"Tworzenie nowej sesji\";\n                modalContent = this.modalContentAddSession();\n                break;\n            default:\n                // cos\n        }\n\n\n       \n\n     \n\n        //########### rendering listy sesji i contenerow\n        let listaSesji = null;\n        listaSesji = Object.keys(this.props.repoData.sessions.byId).map(sessionId => {\n\n            //console.log(sessionId)\n            \n            let sId = this.props.repoData.sessions.byId[sessionId].id;\n\n            //console.log(sId)\n\n            let sessionName = this.props.repoData.sessions.byId[sessionId].sessionName;\n            let ifSelected = this.props.repoData.sessions.byId[sessionId].ifSelected;\n            let containersIds = this.props.repoData.sessions.byId[sessionId].containers; //tylko dla tej sesji\n\n            //przekształcam...\n            let containersArray = containersIds.map(containerId => {\n                return this.props.repoData.containers.byId[containerId];\n            })\n\n\n                return  <RepoSession \n                                containers={containersArray} \n                                sessionName={sessionName}\n                                sessionId = {sId}\n                                projectId = {this.props.currentProjectID}\n                                key = {sId}\n                                token={this.props.token}\n                                ifSelected = {ifSelected}\n                                selectTheSession = {this.selectSessionHandler}\n                                selectTheContainer = {this.selectContainerHandler} \n                                onRemoveContainer = {(container => this.removeContainer(container))}\n                                onRemoveSession = {(sessionId,sessionName) => this.removeSession(sessionId,sessionName)}\n                                onChangeContainerName = {(container, text, token) => this.props.changeContainerName(container, text, token)}\n                                onAddContainerToDIA = {(container) => this.addContainerToDIAList(container)}\n                                onAddContainerToVAD = {(container) => this.addContainerToVADList(container)}\n                                onAddContainerToReco = {(container) => this.addContainerToRecoList(container)}\n                                onAddContainerToAlign = {(container) => this.addContainerToAlignList(container)}/>\n        })\n\n       \n\n        //onAddContainerToDIA = {(containerId) => this.addContainerToDIAList(containerId)}\n        //onAddContainerToVAD = {(containerId) => this.addContainerToVADList(containerId)}\n        //onAddContainerToReco = {(containerId) => this.addContainerToRecoList(containerId)}\n       //onAddContainerToAlign = {(containerId) => this.addContainerToAlignList(containerId)}/>\n\n\n\n \n\n\t\treturn (\n\t\t\t<Aux>\n\n               \n                <Modal \n                    show={this.state.modal}\n\t\t\t\t\tmodalClosed={this.closeModalHandler}\n                    modalTitle={modalTitle}\n                >\n                    {modalContent}\n                </Modal> \n\n\t\t\t\t<div className=\"RepoPanel\" id=\"RepoPanel\">\n\t\t\t\t\t<div className=\"topPart\">\n\t\t\t\t\t\t<div className=\"repoTab\" >\n\t\t\t\t\t\t\tRepozytorium\n\t\t\t\t\t    </div>\n\t\t\t\t\t</div>\n\n                    {\n                        // pasek settings \n                    }\n                    <div className=\"SettingBarRepo\">\n                        \n                    </div>\n\n\n\t\t\t\t\t<div className=\"mainRepoContent\">\n\n                        <div className=\"operatingIcons\">\n\n                            <Tooltip title=\"Dodaj sesję\">\n                                <a href=\"#\" role=\"button\">\n                                        <FontAwesomeIcon icon={faFolderPlus} onClick={this.addSession} /> \n                                </a> \n                            </Tooltip>\n                            \n                            {\n                            /*\n                            <Tooltip title=\"Usuń zaznaczony obiekt\">\n                                <a href=\"#\" role=\"button\" onClick={this.removeObjectFromRepo}>\n                                    <FontAwesomeIcon icon={faTrash} /> \n                                </a>\n                            </Tooltip>\n                            */\n                            }\n\n                            \n\n                            \n                            \n                        </div>\n\n                        <div className=\"fileList\">\n                      \n                            \n                            {listaSesji}\n         \n                        </div>\n\n                        <div className=\"exportToEmu\">\n                            <ButtonLeftBar \n                                    napis=\"Eksportuj korpus do EMU-SDMS\"\n                                    icon={null}\n                                    customeStyle={{height:'50px'}}\n                                    disabled={false}\n                                    whenClicked={this.openConfirmExportToEmu}/>\n                        </div>\n\n                        \n\n                        {\n                            //<div className=\"CardRepo\">\n                           //     <UploadAudio />\n                           // </div>\n                        }\n                        \n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</Aux>\n\t\t);\n\t}\n\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n        //repoSessions: state.repoR,\n        repoData: state.repoR,\n        currentlySelectedSessions: state.repoR.currentlySelectedSessions,\n        currentlySelectedContainers: state.repoR.currentlySelectedContainers,\n        currentProjectID: state.projectR.currentProjectID,\n\t\tcurrentProjectName: state.projectR.currentProjectName,\n        currentProjectOwner: state.projectR.currentProjectOwner,\n        token: state.homeR.token,\n        modal: state.projectR.modal,\n        exportToEmuReady: state.repoR.exportToEmuReady,\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n    //\tonUploadFiles: (fileList, folderKey, userId, projectId, token) => dispatch(repoActions.uploadFiles(fileList,folderKey,userId, projectId, token)),\n    \n    onExportToEMU: (projectId, userId, token) => dispatch(repoActions.exportToEMU(projectId, userId, token)),\n\n    onSelectSession: (sessionId) => dispatch(repoActions.selectSession(sessionId)),\n    onSelectContainer: (containerId) => dispatch(repoActions.selectContainer(containerId)),\n    onGetProjectFilesForUser: (userId, projectId, token) => dispatch(repoActions.getProjectFilesForUser(userId, projectId, token)),\n  \n    removeContainerFromRepo: (userId, projectId, sessionId, containerId, token) => dispatch(repoActions.removeContainerFromRepo(userId, projectId, sessionId,containerId,token)),\n\n    onOpenModalHandler: () => dispatch(repoActions.openModalProject()),\n\n    onCloseModalHandler: () => dispatch(repoActions.closeModalProject()),\n\n    addContainerToDIA: (container) => dispatch(repoActions.addContainerToDIA(container)),\n    addContainerToVAD: (container) => dispatch(repoActions.addContainerToVAD(container)),\n    addContainerToReco: (container) => dispatch(repoActions.addContainerToReco(container)),\n    addContainerToAlign: (container) => dispatch(repoActions.addContainerToAlign(container)),\n\n    onKorpusDownloaded: () => dispatch(repoActions.korpusDownloaded()),\n    \n    createNewSession: (sessionName, projectId, userId, token) => dispatch(repoActions.createNewSession(sessionName, projectId, userId, token)),\n\n    removeSessionFromRepo: (userId, projectId, sessionId, token) => dispatch(repoActions.removeSessionFromRepo(userId, projectId, sessionId, token)),\n\n    changeContainerName: (container, text, token) => dispatch(repoActions.changeContainerName(container,text, token)),\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(repoPanel));","import React from 'react';\nimport Aux from '../../hoc/Auxiliary';\n\nconst errorPage = (props) => {\n\n   \n    return(\n        <Aux>\n            <p>Ups.... coś poszło nie tak</p>\n        </Aux>\n    );\n}\n\nexport default errorPage;","import React from 'react';\nimport Aux from '../../../../hoc/Auxiliary';\nimport './Tab.css';\nimport { NavLink } from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n//import { faFileAudio } from '@fortawesome/free-solid-svg-icons';\nimport { faCogs } from '@fortawesome/free-solid-svg-icons';\nimport { faSurprise } from '@fortawesome/free-solid-svg-icons';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\nimport { faFileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\n\nconst tab = (props) => {\n\n    let klasy = [\"nav-link\", \"clarinNavLink\"];\n\n    let icon = null;\n\n    switch(props.iconType){\n        case \"DASH\":\n            icon = faCogs;\n            break;\n        case \"VAD\":\n            icon = faSurprise;\n            break;\n        case \"DIA\":\n            icon = faComment;\n            break;\n        case \"REC\":\n            icon = faFileAlt;\n            break;\n        case \"SEG\":\n            icon = faClock;\n            break;\n        default:\n            icon = faCogs;\n    }\n\n    return(\n        <Aux>\n             <li className=\"nav-item Tab\">\n                \n                 \n\n                    <NavLink className={klasy.join(' ')} \n                       to={{\n                           pathname: props.match.url + '' + props.whereToLink,\n                           search: '',\n                           activeClassName: 'active' \n                       }}><FontAwesomeIcon icon={icon} className=\"tabIcon\" />  {props.title}</NavLink>\n\n                    \n                \n            </li>\n        </Aux>\n    );\n}\n\nexport default withRouter(tab);","import React, { Component } from 'react';\nimport './ProjectPage.css';\nimport Aux from '../../hoc/Auxiliary';\n\nimport { connect } from 'react-redux';\n\nimport Dashboard from './Dashboard/Dashboard';\nimport RecognitionTool from './RecognitionTool/RecognitionTool';\nimport SegmentTool from './SegmentTool/SegmentTool';\nimport VADTool from './VADTool/VADTool';\nimport DIATool from './DIATool/DIATool';\nimport TranscriptionTool from './TranscriptionTool/TranscriptionTool';\n\nimport RepoBar from './RepoBar/RepoBar';\nimport RepoPanel from './RepoPanel/RepoPanel';\nimport ErrorPage from '../../components/ErrorPage/ErrorPage';\n\nimport TopBar from '../../components/TopBar/TopBar';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Tab from '../ProjectPage/TabContainer/Tab/Tab';\nimport * as projectActions from '../../store/actions/index';\nimport {DndProvider} from 'react-dnd';\nimport Backend from 'react-dnd-html5-backend';\n\n//import axios from '../../axios-speechtools';\n\n\n\nclass ProjectPage extends Component {\n\n  componentWillUnmount = () => {\n    localStorage.removeItem('projectId');\n    localStorage.removeItem('projectTitle');\n    localStorage.removeItem('projectOwnerId');\n  }\n\n\n  componentWillMount = () => {\n\n    //pod odświeżeniu strony...\n\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n\n    if (new Date(expiryDate) <= new Date()) {\n      this.props.onLogOut(); \n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const userName = localStorage.getItem('userName');\n    const remainingMilliseconds =\n    new Date(expiryDate).getTime() - new Date().getTime();\n\n    console.log(userId)\n    console.log(userName)\n    console.log(token)\n\n    this.props.onSetLoggedIn(userId,userName, token);    \n\n    //laduje podstawowe informacje o projekcie\n    //pozostale rzeczy beda pochodzic z serwera i db\n\n    //jezeli user przeszedl do projektu z listy projektow\n    //if(this.props.location.state) {\n      \n    let projectId = this.props.currentProjectID;\n    let projectTitle = this.props.currentProjectName;\n    let projectOwnerId = this.props.currentProjectOwner;\n\n    if (localStorage[\"projectId\"]) {\n        //jeżeli użytkownik odświeżył strone \n\n        projectId = localStorage.getItem('projectId');\n        projectTitle = localStorage.getItem('projectTitle');\n        projectOwnerId = localStorage.getItem('projectOwnerId');\n\n\n    } else {\n\n      localStorage.setItem('projectId',projectId);\n      localStorage.setItem('projectTitle', projectTitle);\n      localStorage.setItem('projectOwnerId', projectOwnerId);\n\n    }\n\n    console.log(projectId)\n    console.log(projectTitle)\n    console.log(projectOwnerId)\n\n    this.props.onInitProjectHandler(projectId, projectTitle, projectOwnerId);\n    this.props.onClearRecoStore();\n    this.props.onClearSegmentStore();\n    this.props.onClearPreviewStore();\n  \n  }\n\n  render() {\n\n    return (\n      <DndProvider backend={Backend}>\n        <Aux>\n         \n            <TopBar \n                  version=\"longinit\" \n                  wide=\"yes\" \n                  language=\"pl\" \n                  projectTitle={\"\"+this.props.currentProjectName}\n                  changeLn = {this.props.changeLn}\n                  currLn = {this.props.currLn}/>\n            {/*\n            <LeftSiteBar czyTopPart=\"true\" />\n            */}\n            \n\n            <div className=\"ProjectPage\" id=\"ProjectPage\">\n \n              <ul className={[\"nav nav-tabs\", \"darkbg\"].join(' ')}>\n\n\n                  <Tab  title=\"Dashboard\" iconType=\"DASH\" whereToLink={'/dashboard'}/>\n                  <Tab  title=\"Detekcja mowy\" iconType=\"VAD\" whereToLink={'/vad'}/>\n                  <Tab  title=\"Diaryzacja\" iconType=\"DIA\" whereToLink={'/dia'}/>\n                  <Tab  title=\"Transkrypcje\" iconType=\"REC\" whereToLink={'/recognition'}/>\n                  <Tab  title=\"Segmentacja\" iconType=\"SEG\" whereToLink={'/segment'}/>\n                  {\n                    /*\n                    <Tab  title=\"Transkrypcje\" whereToLink={'/transcrypt'}/>   \n                    */\n                  }            \n              </ul>\n            \n              <Switch>\n                <Route path={this.props.match.url + '/recognition'} component={RecognitionTool} />\n                <Route path={this.props.match.url + '/segment'} component={SegmentTool} />\n                <Route path={this.props.match.url + '/vad'} component={VADTool} />\n                <Route path={this.props.match.url + '/dia'} component={DIATool} />\n                {\n                  /*\n                  <Route path={this.props.match.url + '/transcrypt'} component={TranscriptionTool} />\n                  */\n                }\n                \n                <Route path={this.props.match.url + '/dashboard'} render={(props)=> {\n                  return <Dashboard/>\n                }} />\n\n                <Redirect from={this.props.match.url + '/'} to={this.props.match.url + '/dashboard'} />\n                <Route component={ErrorPage}/> \n              </Switch>\n              \n            </div>\n\n           {/*\n           <RepoBar />\n           */} \n           \n           <RepoPanel />\n          \n        </Aux>\n      </DndProvider>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentProjectID: state.prolistR.chosenProjectID,\n    //currentProjectID: state.projectR.currentProjectID,\n   // currentProjectName: state.prolistR.chosenProjectName,\n    currentProjectName: state.projectR.currentProjectName,\n    currentProjectOwner: state.prolistR.chosenProjectOwner,\n    //currentProjectOwner: state.projectR.currentProjectOwner,\n\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n     onInitProjectHandler: (projectId, projectTitle, projectOwner) => dispatch(projectActions.initProject(projectId, projectTitle, projectOwner)),\n     onSetLoggedIn:(userId, userName, token) => dispatch(projectActions.setLoggedIn(userId, userName, token)),\n     onLogOut: () => dispatch(projectActions.logout()),\n     onClearRecoStore: () => dispatch(projectActions.clearRecoStore()),\n     onClearSegmentStore: () => dispatch(projectActions.clearSegmentStore()),\n     onClearPreviewStore: () => dispatch(projectActions.clearPreviewStore()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectPage);\n","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './ProjectListItem.css';\n//import {Link} from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\n\n\nconst projectListItem = (props) => {\n\n    \n\n          // console.log(props.key)\n\n    return(\n        <Aux>\n             <tr className=\"ProjectListItem\">   \n                <td className=\"projectTitle\">\n\n                     <a onClick={props.wyborprojektu}>\n                        {props.title}\n                     </a>\n                   \n\n                </td>\n                {\n                    //<td>{props.owner}</td>\n                }\n                \n                <td>{props.projektID}</td>\n                <td>{props.modified}</td>\n                <td>\n                    {\n                    //<span onClick={props.duplicateProject}><i className={[\"fas\", \"fa-clone\", \"ProjectIcon\"].join(' ')}></i></span>\n                    //<span onClick={props.shareProject}><i className={[\"fas\", \"fa-share-alt\", \"ProjectIcon\"].join(' ')}></i></span>\n                    }\n\n                    <FontAwesomeIcon icon={faTrash} \n                                          className=\"ProjectIcon removeProject\" \n                                          onClick={props.deleteProject} /> \n                     {\n                       // <span onClick={props.editName}><i className={[\"fas\", \"fa-pen\", \"ProjectIcon\"].join(' ')}></i></span>\n                       //  <span onClick={props.deleteProject}><i className={[\"fas\", \"fa-trash-alt\", \"ProjectIcon\"].join(' ')}></i></span>\n                     }                     \n                    \n                </td>\n\t\t\t</tr>\n        </Aux>\n    );\n}\n\nexport default projectListItem;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './ProjectList.css';\n\nconst projectsList = (props) => {\n\n    const ifLoading = props.ifLoading;\n\n     const listHeader = (\n            <tr className=\"thead-dark\">\n                <td className=\"title\">Tytuł</td>\n                {\n                    //<tSuperMpongoDBd >Właściciel</td>\n                }\n                <td> Identyfikator</td>\n                <td >Data utworzenia</td>\n                <td >Akcje</td>\n            </tr>\n        );\n \n\n    return(\n        <Aux>\n            <div className={\"ProjectList\"}>\n                {props.siteBar}\n                <table className=\"table\">\n                    <tbody>\n                        {listHeader}\n                        {props.children}\n                    </tbody>\n                </table>\n            </div>\n        </Aux>\n    );\n}\n\nexport default projectsList;","import React from 'react';\nimport './Spinner.css';\n\nconst spinner = (props) => {\n\n\n    return(\n        <div className=\"Spinner\">\n            <div className=\"lds-facebook\">\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )\n}\n\nexport default spinner;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\n\n\nconst confirmationForm = (props) => {\n    \n        return (\n            <Aux>\n                <div className=\"alert alert-warning\" role=\"alert\">\n\n                     <p style={{textAlign:'center'}}>{props.messageQuestion}</p>\n                     <p style={{textAlign:'center',fontWeight:'bold'}}>{props.projectName}</p>\n\n                </div>\n                \n                <button \n                    className=\"btn btn-outline-secondary\"\n                    onClick={props.onCancel}>\n                    Cancel\n                </button>\n\n                <button \n                    className=\"btn btn-primary\"\n                    onClick={props.onOk}>\n                    OK\n                </button>\n\n            </Aux>\n        )\n}\n\nexport default confirmationForm","import React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliary';\nimport ProjectListItem from './ProjectListItem/ProjectListItem';\nimport LeftSiteBar from '../ProjectPage/LeftSiteBar/LeftSiteBar';\nimport ProjectsList from './ProjectsList/ProjectList';\nimport TopBar from '../../components/TopBar/TopBar';\nimport {withRouter, Route } from 'react-router-dom';\nimport ProjectPage from '../ProjectPage/ProjectPage';\nimport Modal from '../../components/UI/Modal/Modal';\nimport { connect } from 'react-redux';\nimport * as projectListActions from '../../store/actions/index';\nimport ButtonLeftBar from '../../components/UI/ButtonLeftBar/ButtonLeftBar';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport SingleInputForm from '../../components/UI/SingleInputForm/SingleInputForm';\nimport ConfirmationForm from '../../components/UI/ConfirmationForm/ConfirmationForm';\n\nconst localActions = {\n  CREATE_NEW_PROJECT: 'CREATE_NEW_PROJECT',\n  EDIT_NAME_PROJECT: 'EDIT_NAME_PROJECT',\n  DELETE_PROJECT: 'DELETE_PROJECT',\n}\n\nclass ProjectsListPage extends Component {\n\n  state = {\n    modalDisplay: false,\n    newProjectName: '',\n    modalTitle: '', //tytutl okna modalnego\n    currentValue: '', //wpisywany do okna modalnego\n  }\n\n\n  componentDidMount = () => {\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.props.onLogOut(); \n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const userName = localStorage.getItem('userName');\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n\n    //console.log(userId)\n    //console.log(userName)\n    //console.log(token)\n    this.props.onSetLoggedIn(userId,userName, token);\n    //this.setState({ isAuth: true, token: token, userId: userId });\n    //this.setAutoLogout(remainingMilliseconds);\n    \n    this.props.onGetProjectsList(userId, token);\n\n  }\n\n  // logoutHandler = () => {\n  //   this.props.onLogout();\n  // };\n\n  // setAutoLogout = milliseconds => {\n  //   setTimeout(() => {\n  //     this.logoutHandler();\n  //   }, milliseconds);\n  // };\n\n  duplicateProjectHandler = (projectIndex) => {\n    alert('duplicate');\n  }\n\n  editNameProjectHandler = (projectIndex) => {\n    alert('edit');\n  }\n\n  shareProjectHandler = (projectIndex) => {\n    alert('share');\n  }\n\n  removeProjectHandler = (projectIndex) => {\n    alert('remove');\n  }\n\n  // wyborProjektuHandler = (projektIndex, projectName) => {\n  //   //const currlocation = this.props.match.url;\n  //   //wrzucam parametry do URL\n  //   const queryParams = [];\n  //   this.props.history.push({\n  //     pathname: \"/projects/\" + encodeURIComponent(projektIndex),\n  //     search: '',\n  //     key: encodeURIComponent(projektIndex)\n  //   });\n  // }\n\n  //prosty validator...\n  checkValidity = (value) => {\n    let isValid = true;\n\n    //bardzo prosta validacja po stronie przegladarki\n    //taka sama jest po stronie serwera\n    //nie moze byc puste i musi miec min. 3 znaki\n    isValid = value.trim() !== '' && isValid;\n    //isValid = value.length >= 3 && isValid;\n\n    return isValid;\n  }\n\n  addNewProjectHandler = (event) => {\n   \n    event.preventDefault();\n    // dodaje nowy projekt tutaj TO DO\n    let formIsValid = this.checkValidity(this.state.newProjectName);\n    //console.log(formIsValid);\n    \n    if(formIsValid){\n      this.props.onNewProject(this.state.newProjectName, this.props.userId, this.props.token);\n\n    } else {\n      console.log('FORM IS INVALID!');\n    }\n  }\n\n  // changeNameProjectHandler = (event) => {\n  //   event.preventDefault();\n    \n  //   let formIsValid = this.checkValidity(this.state.newProjectName);\n  //   if(formIsValid){\n  //     //console.log(this.state.newProjectName)\n  //     this.props.onNewNameProject(this.state.newProjectName);\n\n  //   } else {\n  //     console.log('FORM IS INVALID!');\n  //   }\n  // }\n\n  newProjectNameChangeHandler = (event) => {\n    //console.log(event.target.value)\n    console.log('newProjectNameChangeHandler');\n    event.preventDefault();\n    this.setState({\n      newProjectName: event.target.value,\n    })\n  }\n\n  editProjectNameSubmitHandler = (event) => {\n    event.preventDefault();\n    this.props.onNameEdit(\n      this.props.projectId, \n      this.state.newProjectName,\n      this.props.userId,\n      this.props.token)\n  }\n\n  \n  onNewProjectDone = () => {\n    this.closeModalHandler()\n  }\n\n\n  //otwiera okno modalne\n  openModalHandler = (actionType, projectId, projectName) => {\n    this.setState({\n      newProjectName: projectName,\n    })\n    this.props.onOpenModalHandler(actionType,projectId, projectName);\n  }\n\n  //zamyka okno modalne\n  closeModalHandler = () => {\n    this.props.onCloseModalHandler();\n  }\n\n  removeProjectHandler = (projectId) => {\n    this.props.onDelete(projectId, this.props.userId, this.props.token);\n  }\n\n  wyborProjektuOK = (projektId, projektName, projektOwner) => {\n    {\n      /*\n    <Link to={{\n      pathname: \"/projects/\" + encodeURIComponent(props.projektID),\n      state: {\n          projectTitle: props.title,\n          projectOwner: props.owner,\n      }\n      */\n    }\n\n    this.props.onProjectChoice(projektId, projektName, projektOwner);\n    this.props.onInitProjectHandler(projektId,projektName,projektOwner);\n\n   \n\n    this.props.history.push(\"/projects/\"+projektId);\n  }\n\n  \n  render() {\n\n    //tworze formularz ktory pokaze sie w oknie modalnym\n    //w zaleznosci ktory przycisk zostal wcisniety\n\n    //formularz dodawania nazwy dla nowego projektu\n    const newProjectForm = (\n      <Aux>\n        <SingleInputForm\n          onSubmitHandler={this.addNewProjectHandler}\n          onChangeHandler={this.newProjectNameChangeHandler}\n          title=\"Stworz nowy projekt\"\n          placeholder=\"Podaj nazwe projektu\"\n          buttonLabel=\"Dodaj projekt\"\n          value = {this.state.newProjectName}\n          errorMessage = {this.props.errorMessage}\n        />\n      </Aux>\n    );\n\n    //formularz edycji nazwy projektu\n    const editProjectName = (\n      <Aux>\n        <SingleInputForm\n          onSubmitHandler={this.editProjectNameSubmitHandler}\n         // onSubmitHandler={this.props.onNameEdit(this.props.projectId, this.state.newProjectName)}\n          //onSubmitHandler={this.props.onNameEdit(this.props.projectId, this.state.newProjectName)}\n          onChangeHandler={this.newProjectNameChangeHandler}\n          title=\"Edytuj nazwe projektu\"\n          placeholder=\"Zmie nazwe projektu\"\n          buttonLabel=\"Zmien\"\n          value = {this.state.newProjectName}\n          errorMessage = {this.props.errorMessage}\n        />\n      </Aux>\n    );\n\n    const deleteProject = (\n      <Aux>\n        <ConfirmationForm\n          messageQuestion={\"Czy na pewno chcesz usunac poniższy projekt? Wraz z nim zostaną usunięte wszystkie pliki audio oraz transkrypcje!\"}\n          onCancel={this.closeModalHandler}\n          onOk = {()=>this.props.onDelete(this.props.projectId, this.props.userId, this.props.token)}\n\n          projectName = {this.props.projectName}\n        />\n      </Aux>\n    );\n\n    let modalContent = null;\n  \n\n    switch(this.props.localAction){\n      case(localActions.CREATE_NEW_PROJECT):\n        modalContent = newProjectForm;\n        break;\n      case(localActions.EDIT_NAME_PROJECT):\n        modalContent = editProjectName;\n        break;\n      case(localActions.DELETE_PROJECT):\n        modalContent = deleteProject;\n        break;\n      default:\n        modalContent = <p>Bledny typ akcji lokalnej</p>\n    }\n    \n\n    //lewy sidebar\n    const leftSiteBar = (\n      <LeftSiteBar czyTopPart={false} \n        desc=\"W tym miejscu można tworzyć własne korpusy które stanowią przestrzeń roboczą dla wgranych plików. UWAGA! w przypadku usunięcia korpusu, zostaną również usunięte wszystkie wgrane do niego pliki!\"\n         >\n        <ButtonLeftBar\n          customeStyle={{ height: '50px' }}\n          napis=\"Dodaj korpus\"\n          iconType=\"fa-plus\"\n          whenClicked={(actionType)=>this.openModalHandler(localActions.CREATE_NEW_PROJECT,'','')} />\n      </LeftSiteBar>\n    )\n\n    //co wyswietlic\n    let toDisplay = null;\n\n    //sama lista projektow\n    let projectList = null;\n\n    if (!this.props.ifError) {\n      //console.log(this.props.ifProjectsLoading)\n      //jak nie ma error to sprawdzam czy sie laduja dane\n      if (this.props.ifProjectsLoading) {\n        toDisplay = <Spinner />\n      } else {\n\n       // console.log(this.props.projectList);\n\n        projectList = this.props.projectList\n          .map((projekt, i) => {\n            //console.log(projekt)\n            return <ProjectListItem\n              key={projekt._id}\n              projektID={projekt._id}\n              title={projekt.name}\n              owner={projekt.owner}\n              modified={projekt.projectCreated}\n              deleteProject={(actionType,projectId, projectName)=>this.openModalHandler(localActions.DELETE_PROJECT, projekt._id, projekt.name)}\n              //deleteProject={(actionType,projectId, projectName)=>this.openModalHandler(localActions.DELETE_PROJECT, projekt._id, projekt.name)}\n              wyborprojektu = {(projektId, projektName, projektOwner)=>this.wyborProjektuOK(projekt._id, projekt.name, projekt.owner)}\n              //wyborprojektu={() => this.props.onProjectChoice(projekt._id, projekt.name, projekt.owner)}\n              //duplicateProject={() => this.props.onDuplicate(projekt._id)}\n              editName={(actionType,projectId, projectName)=>this.openModalHandler(localActions.EDIT_NAME_PROJECT,projekt._id, projekt.name)}\n   \n              //shareProject={() => this.props.onShare(projekt._id)}\n             // deleteProject={() => this.props.onDelete(projekt._id, this.props.userId, this.props.token)}\n            />\n          });\n\n        toDisplay = (\n          <ProjectsList siteBar={leftSiteBar}>\n\n            {projectList}\n\n          </ProjectsList>\n        );\n\n      }\n\n    } else {\n      //kiedy jest error\n      toDisplay = <p className=\"error\">Error with connecting to server</p>;\n    }\n\n\n    return (\n      <Aux>\n\n        <Route path=\"/project/\" render={(props) => (\n          <ProjectPage {...props} />\n        )} />\n\n\n        <Modal\n          show={this.props.modalDisplay}\n          modalClosed={this.closeModalHandler}\n          >\n            {modalContent}\n        </Modal>\n\n\n        <TopBar\n          version=\"init\"\n          wide=\"yes\"\n          language=\"pl\"\n          projectTitle=\"\"\n          changeLn={this.props.changeLn}\n          currLn={this.props.currLn} />\n\n          {\n          leftSiteBar\n          }\n\n          {\n            toDisplay\n          }\n\n      </Aux>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    userId: state.homeR.userId,\n    userName: state.homeR.userName,\n    token: state.homeR.token,\n    localAction: state.prolistR.localAction,\n    modalDisplay: state.prolistR.modalDisplay,\n    newProjectCreated: state.prolistR.loaded,\n    projectList: state.prolistR.projects,\n    ifError: state.prolistR.error,\n    errorMessage: state.prolistR.errorMessage,\n    ifProjectsLoading: state.prolistR.projectsLoading,\n    projectId: state.prolistR.projectId,  //wiem ktorego projektu dotyczy kliknieta akcja\n    projectName: state.prolistR.projectName,  //oraz jaka jest nazwa obecnego projektu\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitProjectHandler: (projectId, projectTitle, projectOwner) => dispatch(projectListActions.initProject(projectId, projectTitle, projectOwner)),\n    onOpenModalHandler: (actionType,projectId, projectName) => dispatch(projectListActions.openModal(actionType,projectId, projectName)),\n    onCloseModalHandler: () => dispatch(projectListActions.closeModal()),\n    onNewProjectDone: () => dispatch(projectListActions.addNewProjectDone()),\n    onNewProject: (projectName, userId, token) => dispatch(projectListActions.addNewProject(projectName, userId, token)),\n    onProjectChoice: (projectId, projectName, projectOwner) => dispatch(projectListActions.projectChoice(projectId, projectName, projectOwner)),\n   // onDuplicate: (projectId) => dispatch(projectListActions.duplicateProject(projectId)),\n   // onShare: (projectId) => dispatch(projectListActions.shareProject(projectId)),\n    onDelete: (projectId, userId, token) => dispatch(projectListActions.deleteProject(projectId, userId, token)),\n    onNameEdit: (projectId, newProjectName,userId, token) => dispatch(projectListActions.editName(projectId, newProjectName,userId, token)),\n    onGetProjectsList: (userId, token) => dispatch(projectListActions.getProjectsList(userId, token)),\n    onSetLoggedIn:(userId, userName, token) => dispatch(projectListActions.setLoggedIn(userId, userName, token)),\n    onLogOut: () => dispatch(projectListActions.logout()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProjectsListPage));\n\n","import React from 'react';\nimport TopBar from '../TopBar/TopBar';\nimport Aux from '../../hoc/Auxiliary';\nimport './HelpPage.css';\n\nconst helpPage = (props) => {\n    return (\n        <Aux>\n            <TopBar\n                version=\"init\"\n                wide=\"no\"\n                language=\"pl\"\n                projectTitle=\"\"\n                changeLn={props.changeLn}\n                currLn={props.currLn}\n            />\n\n            <div className=\"container HelpPage\">\n                \n                <p></p>\n                <div className=\"faq\">\n                    <h5>W jakim celu należy się zarejestrować?</h5>\n                    <p>\n                        Dzięki rejestracji istnieje możliwość zarządzania swoimi plikami w obrębie tworzonych projektów. Ponadto przydzielana jest prywatna przestrzeń na pliki użytkownika.\n                    </p>\n                </div>\n\n                <div className=\"faq\">\n                    <h5 >Zapomniałem hasło, co robić?</h5>\n                    <p>\n                        Póki co serwis nie posiada funkcjonalności przypomnienia hasła. Napisz do nas maila (adres w stopce na dole strony) abyśmy mogli zresetować hasło za Ciebie.\n                    </p>\n                </div>\n\n                <div className=\"faq\">\n                    <h5 >Czy moje pliki są bezpieczne?</h5>\n                    <p>\n                        Pliki są przechowywane w centralnym repozytorium do którego dostęp posiada tylko zarejestrowana osoba. Pliki można ewentualnie usunąć po zapisaniu wyników usług.\n                    </p>\n                </div>\n  \n            \n            \n            </div>\n\n        </Aux>\n\n    );\n}\n\nexport default helpPage;","import React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliary';\nimport { Link } from \"react-router-dom\";\nimport './NewPasswordPage.css';\nimport axios from \"axios\";\nimport PropTypes from \"prop-types\"\n\nclass NewPasswordPage extends Component {\n\n  state = {\n    password: \"\",\n    confirmPassword: \"\",\n    submitted: false,\n    czyHaslaPasuja: true,\n  }\n\n  handleChange = key => e => {\n    this.setState({ [key]: e.target.value })\n  }\n\n  updatePassword = e => {\n    e.preventDefault()\n    const { userId, token } = this.props;\n    const { password } = this.state;\n    const { confirmPassword } = this.state;\n\n    if((password==confirmPassword) && password.length>6){\n\n      this.setState({\n        czyHaslaPasuja: true,\n      })\n\n      axios.post('/auth/enterNewPass/'+userId+'/'+token, {newPassword: password})\n          .then(res => {\n            console.log(\"RESPONSE FROM SERVER TO CLIENT:\", res)\n          })\n          .catch(err => {\n            console.log(\"SERVER ERROR TO CLIENT:\", err)\n          });\n      \n          this.setState({ submitted: !this.state.submitted })\n    } else {\n      this.setState({\n        czyHaslaPasuja: false,\n      })\n    }\n  }\n\n  \n  render() {\n    const { submitted } = this.state\n    return (\n      <Aux>\n        <p></p>\n        <h3 style={{ paddingBottom: \"1.25rem\" }}>Wpisz swoje nowe hasło</h3>\n        <p>Hasło musi składać się z conajmniej 7 znaków</p>\n        {this.state.czyHaslaPasuja==false?<b>Hasła nie pasują do siebie</b>:null}\n        {submitted ? (\n          <div className=\"reset-password-form-sent-wrapper\">\n            <p>Twoje hasło zostało zapisane.</p>\n            <Link to=\"/login\" className=\"ghost-btn\">\n              Wróć aby się zalogować\n            </Link>\n          </div>\n        ) : (\n          <div className=\"reset-password-form-wrapper\">\n            <form\n              onSubmit={this.updatePassword}\n              style={{ paddingBottom: \"1.5rem\" }}\n            >\n              <input\n                onChange={this.handleChange(\"password\")}\n                value={this.state.password}\n                placeholder=\"Nowe hasło\"\n                type=\"password\"\n              />\n              <input\n                onChange={this.handleChange(\"confirmPassword\")}\n                value={this.state.confirmPassword}\n                placeholder=\"Potwierdź hasło\"\n                type=\"password\"\n              />\n              <button className=\"btn-primary password-reset-btn\">\n                Zmień hasło\n              </button>\n            </form>\n          </div>\n        )}\n      </Aux>\n    )\n  }\n}\n\n\nNewPasswordPage.propTypes = {\n  token: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired\n}\n\n\n\nexport default NewPasswordPage;\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport HomePage from './containers/HomePage/HomePage';\nimport { Route, Switch } from 'react-router-dom';\nimport ProjectPage from './containers/ProjectPage/ProjectPage';\nimport ProjectsListPage from './containers/ProjectsListPage/ProjectsListPage';\nimport HelpPage from './components/HelpPage/HelpPage';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport { connect } from 'react-redux';\nimport * as homeActions from './store/actions/index';\nimport NewPasswordPage from './containers/NewPasswordPage/NewPasswordPage';\nimport { withRouter, matchPath } from 'react-router-dom';\n\nimport en from 'react-intl/locale-data/en';\nimport pl from 'react-intl/locale-data/pl';\n\nimport messages_pl from \"./translations/pl.json\";\nimport messages_en from \"./translations/en.json\";\n\naddLocaleData([...en, ...pl]);\n\nconst messages = {\n  'pl': messages_pl,\n  'en': messages_en\n};\n\nconst language = navigator.language.split(/[-_]/)[0];  // language without region code\n\nclass App extends Component {\n\n  state = {\n    currln: \"pl\",\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.logoutHandler();\n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const userName = localStorage.getItem('userName');\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    this.props.onSetLoggedIn(userId, userName, token)\n    //this.setState({ isAuth: true, token: token, userId: userId });\n    this.setAutoLogout(remainingMilliseconds);\n  }\n\n  logoutHandler = () => {\n    this.props.onLogout();\n  };\n\n  setAutoLogout = milliseconds => {\n    setTimeout(() => {\n      this.logoutHandler();\n    }, milliseconds);\n  };\n\n\n\n  changeLnHandler = (ln) => {\n    this.setState({\n      currln: ln,\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <IntlProvider locale={this.state.currln} defaultLocale=\"pl\" messages={messages[this.state.currln]}>\n\n\n          <Switch>\n\n          <Route path=\"/enterNewPass/:userId/:token\" render={({match}) => (\n              <NewPasswordPage userId={match.params.userId} token={match.params.token} />\n            )} />\n\n\n            <Route path=\"/projects/:projectID\" render={(props) => (\n              <ProjectPage {...props}\n                changeLn={this.changeLnHandler}\n                currLn={this.state.currln} />\n            )} />\n\n            <Route path=\"/projectsList\" render={(props) => (\n              <ProjectsListPage {...props}\n                changeLn={this.changeLnHandler}\n                currLn={this.state.currln} />\n            )} />\n\n            <Route path=\"/help\" render={(props) => (\n              <HelpPage {...props}\n                changeLn={this.changeLnHandler}\n                currLn={this.state.currln} />\n            )} />\n\n            <Route path=\"/\" render={(props) => (\n              <HomePage {...props}\n                changeLn={this.changeLnHandler}\n                currLn={this.state.currln} />\n            )} />\n          </Switch>\n        </IntlProvider>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.homeR.isAuth,\n    chosenProjectID: state.prolistR.chosenProjectID\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(homeActions.logout()),\n    onSetLoggedIn: (userId, userName, token) => dispatch(homeActions.setLoggedIn(userId, userName, token))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport const updateObject = (oldObject, updatedValues) => {\n    return {\n        ...oldObject,\n        ...updatedValues\n    }\n}\n\n// [\n//     { id: 111, name: 'John', age: 29 },\n//     { id: 112, name: 'Sarah', age: 25 },\n//   ],\n\n//   zmienia na \n\n//   {\n//     111:{ id: 111, name: 'John', age: 29 },\n//     112:{ id: 112, name: 'Sarah', age: 25 },\n//   }\n\n\n\nexport const convertArrayToObject = (array, key) => {\n    const initialValue = {};\n    return array.reduce((obj, item) => {\n      return {\n        ...obj,\n        [item[key]]: item,\n      };\n    }, initialValue); \n};\n\n//wyciaga id z tablicy obiektow\nexport const getIdsArray = (array) => {\n    return array.map(item =>{\n        return item.id;\n    });\n};","import * as actionTypes from '../actions/actionsTypes';\nimport {updateObject} from '../utility';\n//import {createNotification} from '../../index';\n\nconst initialState = {\n    isAuth: false,\n    email: '',\n    pass: '',\n    userName: '',\n    registrationMessage: '',\n    loginMessage: '',\n\n    forgotPassMessage: '',\n    resRegistrationStatus: 0,\n    resLoginStatus: 0,\n    resForgotPassStatus: 0,\n    forgotPassEmailSent: false,\n\n    isLoading: false, //do pokazywania prelowadera\n\n    \n\n    token: '',\n    authLoading: false,\n    userId: '',\n    error: '',\n\n    autoLogoutAfter: 0 //po ilu milisekundach bedzie wylogowanie\n}\n\nconst forgotPassFailed = (state, action) => {\n   let message = action.message;\n   let resForgotPassStatus = action.resForgotPassStatus;\n\n   \n   //createNotification('error',\"Serwer error\");\n  \n   return updateObject(state,{\n        forgotPassMessage: message,\n        resForgotPassStatus: resForgotPassStatus,\n        forgotPassEmailSent: false,\n    });\n\n}\n\nconst forgotPass = (state, action) => {\n   let message = action.message;\n   let resForgotPassStatus = action.resForgotPassStatus;\n\n   //if(resForgotPassStatus==200){\n   //     createNotification('success',\"Instrukcje do zresetowania hasła zostały wysłane na podany email\");\n   // } else {\n   //     createNotification('warning',\"Nie znaleziono użytkownika o podanym adresie email\");\n   // }\n\n   return updateObject(state,{\n        forgotPassMessage: message,\n        resForgotPassStatus: resForgotPassStatus,\n        forgotPassEmailSent: true,\n    });\n}\n\n\nconst logIn = (state, action) => {\n       // console.log(action)\n        return updateObject(state,{\n            isAuth: action.isAuth,\n            userName: action.userName,\n            token: action.token,\n            authLoading: action.authLoading,\n            userId:action.userId,\n            resLoginStatus: action.resLoginStatus,\n        });\n}\n\nconst logInFailed = (state, action) => {\n\n    return updateObject(state,{\n        isAuth: action.isAuth,\n        token: action.token,\n        authLoading: action.authLoading,\n        userId:action.userId,\n        loginMessage: action.message,\n        resLoginStatus: action.resLoginStatus,\n    });\n}\n\nconst register = (state, action) => {\n    const message = action.message;\n    const userId = action.userId;\n    const resRegistrationStatus = action.resRegistrationStatus;\n\n    return updateObject(state,{\n        isAuth: false,\n        registrationMessage: message,\n        resRegistrationStatus: resRegistrationStatus,\n    });\n}\n\nconst registerFailed = (state, action) => {\n    const message = action.message;\n \n    return updateObject(state,{\n        isAuth: false,\n        registrationMessage: message,\n        resRegistrationStatus: action.resRegistrationStatus,\n    });\n}\n\nconst autoLogout = (state,action) => {\n    const autoLogoutAfter = action.autoLogoutAfter;\n    return updateObject(state,{\n        autoLogoutAfter: autoLogoutAfter,\n    });\n}\n\nconst logOut = (state,action) => {\n\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiryDate');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userName');\n    \n    return updateObject(state,{\n        isAuth: false,\n        token:'',\n        userId:'', \n        email: '',\n        pass: '',\n        userName: '',\n        registrationMessage: '',\n        loginMessage: '',\n        resRegistrationStatus: 0,\n        resLoginStatus: 0,\n        token: '',\n        authLoading: false,\n        error: '',\n        autoLogoutAfter: 0 //po ilu milisekundach bedzie wylogowanie\n\n\n    });\n}\n\nconst startLoading = (state,action) => {\n    return updateObject(state,{\n        isLoading: true,\n    })\n}\n\nconst stopLoading = (state,action) => {\n    return updateObject(state,{\n        isLoading: false,\n    })\n}\n\n\nconst homeReducer = (state = initialState, action) => {\n\n    switch(action.type){\n        case actionTypes.LOG_IN: return logIn(state, action);\n        case actionTypes.LOG_OUT: return logOut(state, action);\n        case actionTypes.LOG_IN_FAILED: return logInFailed(state, action);\n        case actionTypes.REGISTER: return register(state,action); \n        case actionTypes.REGISTER_FAILED: return registerFailed(state,action);\n        case actionTypes.SET_AUTO_LOGOUT: return autoLogout(state,action); \n        \n        case actionTypes.FORGOT_PASS_FAILED: return forgotPassFailed(state,action);\n        case actionTypes.FORGOT_PASS: return forgotPass(state,action);\n\n        case actionTypes.START_LOADING: return startLoading(state,action);\n        case actionTypes.STOP_LOADING: return stopLoading(state,action);\n        \n        \n    }\n\n    return state;\n}\n\nexport default homeReducer;","import * as actionTypes from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n//import axios from 'axios';\n\nconst initialState = {\n    projects: [],\n    error: false,          //gdy wystapi error z polaczeniem z api \n    projectsLoading: true, //gdy laduja sie dane z serwera\n\n    chosenProjectID: '',    //dane wybranego projektu\n    chosenProjectName: '',\n    chosenProjectOwner: '',\n\n    loaded: false, //gdy projekt z serwera juz sie zaladowal\n    errorMessage: '',   //gdy nie przejdzie validacji po stronie serwera\n    modalDisplay: false, //czy pokazywac modal\n\n    localAction: '', //po kliknieciu w przycisk wywolujacy okno modalne wiem po co zostalo ono klikniete\n    projectId: '',  //wiem ktorego projektu dotyczy kliknieta akcja\n    projectName: '',  //oraz jaka jest nazwa obecnego projektu\n}\n\nconst choseProject = (state, action) => {\n  \n    return updateObject(state, { \n        chosenProjectID: action.projectId, \n        chosenProjectName: action.projectName,\n        chosenProjectOwner: action.projectOwner,\n     });\n}\n\nconst addProject = (state, action) => {\n    let newProjectsList = [action.responsedNewProject, ...state.projects];\n    //console.log(newProjectsList)\n   // console.log(action.responsedNewProject)\n\n    return updateObject(state, {projects: newProjectsList, loaded: true });\n}\n\nconst addProjectInit = (state, action) => {\n    return updateObject(state, {loaded: false});\n}\n\nconst addProjectDone = (state, action) => {\n    return updateObject(state, {\n        loaded: true, \n        errorMessage:'',\n        modalDisplay: false});\n}\n\nconst addProjectFailed = (state,action) => {\n    //console.log(action.errorMessage.response.data.message)\n    return updateObject(state, {\n        errorMessage: action.errorMessage.response.data.message,\n    })\n}\n\nconst duplicateProject = (state, action) => {\n\n    // TO DO\n    return updateObject(state, {});\n}\n\nconst shareProject = (state, action) => {\n\n    // TO DO\n    return updateObject(state, {});\n}\n\nconst removeProject = (state, action) => {\n\n    const projectId = action.projectId;\n    const message = action.message;\n\n    //robie immutable removing project\n    const projects = [...state.projects];\n\n    //znajduje index projektu do usuniecia\n    let index = 0;\n    let updatedProjects = projects.map((project,i) => {\n        if(project._id !== projectId){\n            return project;\n        } \n        //jezeli znajdziemy to robimy update\n        index = i;\n    })\n\n    updatedProjects = [...updatedProjects.slice(0, index), ...updatedProjects.slice(index + 1)]\n\n    return updateObject(state, {\n        projects: updatedProjects\n    });\n}\n\n\nconst editNameFailed = (state, action) => {\n   const error = action.error;\n\n   \n   return updateObject(state, {errorMessage: error, error: true});\n}\n\nconst editName = (state, action) => {\n\n    const projectId = action.projectId;\n    const newProjectName = action.newProjectName;\n    const message = action.message;\n\n    console.log(projectId)\n    console.log(newProjectName)\n    console.log(message)\n\n    //robie immutable updating projektow\n    const projects = [...state.projects];\n    const updatedProjects = projects.map(project => {\n        if(project._id !== projectId){\n            return project;\n        }\n\n        //jezeli znajdziemy to robimy update\n        return {\n            ...project,\n            name: newProjectName\n        }\n    })\n\n    //console.log(state)\n    //console.log(\"Musze updatowac widok teraz!!!! w reducerze\")\n    \n    return updateObject(state, {\n        projects: updatedProjects,\n        errorMessage: '', \n        error: false});\n}\n\n//pobieranie listy projektow\nconst getProjectsListFailed = (state, action) => {\n     console.log(action)\n    return updateObject(state, { \n        error: true, \n        loaded: false,\n        errorMessage: action.errorMessage });\n}\n\nconst getProjectsList = (state, action) => {\n    //console.log(action)\n\n    return updateObject(state,\n        {\n            projects: action.projects,\n            error: false,\n            projectsLoading: false,\n        });\n\n}\n\nconst openModal = (state, action) => {\n    return updateObject(state,\n        {\n            modalDisplay: true,\n            localAction: action.localActionType,\n            projectId: action.projectId,\n            projectName: action.projectName\n        });\n}\n\nconst closeModal = (state, action) => {\n    return updateObject(state,\n        {\n            modalDisplay: false\n        });\n}\n\n\n\nconst projectsListReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.GET_PROJECTS_LIST: return getProjectsList(state, action);\n        case actionTypes.GET_PROJECTS_LIST_FAILED: return getProjectsListFailed(state, action);\n        case actionTypes.CHOSE_PROJECT: return choseProject(state, action);\n        case actionTypes.ADD_PROJECT_INIT: return addProjectInit(state, action);\n        case actionTypes.ADD_PROJECT_DONE: return addProjectDone(state, action);\n        case actionTypes.ADD_PROJECT: return addProject(state, action);\n        case actionTypes.ADD_PROJECT_FAILED: return addProjectFailed(state, action);\n        case actionTypes.DUPLICATE_PROJECT: return duplicateProject(state, action);\n        case actionTypes.SHARE_PROJECT: return shareProject(state, action);\n        case actionTypes.REMOVE_PROJECT: return removeProject(state, action);\n        case actionTypes.EDIT_NAME: return editName(state, action);\n        case actionTypes.EDIT_NAME_FAILED: return editNameFailed(state, action);\n        case actionTypes.OPEN_MODAL: return openModal(state, action);\n        case actionTypes.CLOSE_MODAL: return closeModal(state, action);\n        \n    }\n\n    return state;\n}\n\nexport default projectsListReducer;\n\n","import * as actionTypes from '../../actions/actionsTypes';\nimport {updateObject} from '../../utility';\nimport produce from \"immer\";\n//import { createNotification, loader } from '../../../index';\n\n\nconst initialState = {\n    containersForREC: [], \n    refusedFileList: [],  //refused files\n    //w formacie np. \n    // [{\n        // file: File {name: \"__mowa16000.wav\", lastModified: 1560968256333, lastModifiedDate: Wed Jun 19 2019 20:17:36 GMT+0200 (Central European Summer Time), webkitRelativePath: \"\", size: 1235820, …}\n        // id: \"01f0a209-a29f-407a-9b8a-12cdebd1e1fd\"\n        // loadedperc: 0\n        // status: \"toload\"\n    // }]\n    modal: false, //controls if modal window is opened\n    recoFileForPreview: '', //indicates which file is chosen for preview\n    recoContainerForPreview: '', //container beeing previewd in recognition\n\n  //  transcriptData: {},\n\n    transcriptionData: {\n        \"blocks\" : [\n            {\n                \"starttime\" : 1,\n                \"stoptime\" : 2,\n                \"data\" : {\n                    \"text\": \"\",\n                    \"type\": \"speech\",\n                 }\n            },\n        ],\n    }, \n\n    //error: false,\n    //errorMessage: '',\n}\n\n\n// dodaje kontener do podgladu w reco\nconst addContainerToPreviewReco = (state,action) => {\n    return updateObject(state, {\n        recoContainerForPreview:action.containerForPreview, \n    });\n}\n\n\n// ######### dodaje container do listy rozpoznawania #########\n\nconst addContainerToReco = (state,action) => {\n   \n    const newElementToAdd = action.container;\n\n    const nextState = produce(state, draftState => {\n\n        //dodaje nowy element tylko jeżeli wcześniej nie istniał w bazie\n        let found = state.containersForREC.filter(file => {\n            return file._id == newElementToAdd._id\n        })\n\n        if(found.length < 1){\n            draftState.containersForREC.unshift(newElementToAdd);\n        }\n       \n   })\n\n   \n\n   return nextState;\n\n}\n\nconst setRefusedFiles = (state, action) => {\n    return updateObject(state, {\n        refusedFileList: action.refusedFileList, \n    });\n}\n\nconst clearRecoStore = (state,action) => {\n    return updateObject(state, {\n        containersForREC: [], \n        modal: false, \n        recoFileForPreview: '', \n    });  \n}\n\nconst openModal = (state,action) => {\n    return updateObject(state, {\n        modal: true,\n    }) ;  \n}\n\nconst closeModal = (state,action) => {\n    return updateObject(state, {\n        modal: false,\n    }) ;  \n}\n\n\n\nconst dropFiles = (state, action) => {\n    let fileList = [ ...state.containersForREC,...action.files];\n    //console.log(\"DONEEEEE\");\n    //console.log(fileList);\n    return updateObject(state, {containersForREC: fileList}) ;      \n}\n\nconst initFileRecognition = (state,action) => {\n\n    // to do\n    return updateObject(state, {}) ;  \n}\n\n//rozpoczynam wysylke na serwer i przetwarzanie rozpoznawania\nconst initBatchRecognition = (state,action) => {\n\n    \n    console.log(\"INIT BATCH RECOGNITION\")\n    //jezali jest jakikolwiek plik do wyslania\n    if(state.containersForREC.length > 0) {\n        return updateObject(state, {});\n    } else {\n        return updateObject(state, {}); \n    }\n}\n\nconst updateFileState = (state,action) => {\n\n    const containerId = action.containerId;\n    const status = action.status;\n    //const percLoaded = action.percLoaded;\n            \n    const nextState = produce(state, draftState => {\n\n        let foundFileIdx = draftState.containersForREC.findIndex(container => {\n            return container._id === containerId;\n        })\n\n        draftState.containersForREC[containerId].status = status;\n   })\n\n   return nextState;\n\n}\n\nconst removeRecognitionItem = (state, action)=>{\n\n    const containerId = action.container._id;\n\n    const nextState = produce(state, draftState => {\n\n       const nowaLista = state.containersForREC.filter((container,index)=>{\n            if(container._id == containerId){\n                return false;\n            } else {\n                return true;\n            }\n       })\n\n\n       draftState.containersForREC = nowaLista;\n\n     })\n\n   return nextState;\n\n}\n\nconst openAudioRecPreview = (state, action) => {\n    const entryId = action.fileID;\n\n    //znajduje pozycje w containersForREC aby wyciagnac z niej plik audio\n\n    let foundEntry = state.containersForREC.find(obj => obj.id == entryId);\n    console.log(foundEntry.file)\n\n    return updateObject(state, { recoFileForPreview: foundEntry.file}) ; \n\n}\n\nconst loadTranscription = (state, action) => {\n    return updateObject(state,{\n        transcriptionData: action.transcriptData.data,\n    })\n}\n\n// #############################################\n// #### update Flagi danego kontenera po pomyślnym wykonaniu rozpoznawania\n//##############################################\n\nconst speechRecognitionSuccess = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n\n   // console.log(\"TUTAJ TEZ POWINIENEM \")\n    //console.log(action.containerId)\n\n    const nextState = produce(state, draftState => {\n\n        let foundFileIdx = draftState.containersForREC.findIndex(file => {\n            return file._id === containerId;\n        })\n\n        draftState.containersForREC[foundFileIdx].ifREC = true;\n        draftState.containersForREC[foundFileIdx].statusREC = 'done';\n\n        //jeżeli plik był otwarty w preview edytorze\n\n        if(draftState.recoContainerForPreview._id == containerId){\n            draftState.recoContainerForPreview.ifREC = true;\n            draftState.recoContainerForPreview.statusREC = 'done';\n        }\n       \n   })\n\n\n   return nextState;\n\n}\n\n\n\nconst speechRecognitionFailed = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n\n    let foundFileIdx = state.containersForREC.findIndex(file => {\n        return file._id === containerId;\n    })\n\n    //createNotification('error', 'Wystąpił błąd segmentacji pliku ' + state.containersForREC[foundFileIdx].containerName);\n\n    const nextState = produce(state, draftState => {\n        draftState.containersForREC[foundFileIdx].ifREC = false;\n        draftState.containersForREC[foundFileIdx].statusREC = 'error';\n       \n \n   })\n\n   return nextState;\n\n}\n\nconst saveTranscriptionSuccess = (state, action) => {\n    \n    const containerId = action.containerId;\n    const toolType = action.toolType;\n\n    const nextState = produce(state, draftState => {\n\n        let foundFileIdx = draftState.containersForREC.findIndex(file => {\n            return file._id === containerId;\n        })\n       \n        switch(toolType){\n            case \"DIA\":\n                draftState.containersForREC[foundFileIdx].ifDIA = true;\n                draftState.containersForREC[foundFileIdx].statusDIA = 'done';\n                break;\n            case \"VAD\":\n                draftState.containersForREC[foundFileIdx].ifVAD = true;\n                draftState.containersForREC[foundFileIdx].statusVAD = 'done';\n                break;\n            case \"REC\":\n                draftState.containersForREC[foundFileIdx].ifREC = true;\n                 draftState.containersForREC[foundFileIdx].statusREC = 'done';\n                break;\n            case \"SEG\":\n                draftState.containersForREC[foundFileIdx].ifSEG = true;\n                draftState.containersForREC[foundFileIdx].statusSEG = 'done';\n                break;\n            default:\n                console.log(\"Default\"); //to do\n        }\n \n\n   })\n\n   return nextState;\n  \n\n}\n\n\n\nconst changeToolItemStatus = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType;\n    const status = action.status;\n\n     if(toolType == 'REC') {\n        const nextState = produce(state, draftState => {\n\n            let foundFileIdx = draftState.containersForREC.findIndex(file => {\n                return file._id === containerId;\n            })\n    \n            draftState.containersForREC[foundFileIdx].statusREC = status;\n       })\n    \n       return nextState;\n\n     } else {\n         return state;\n     }\n\n}\n\nconst recognitionReducer = (state = initialState, action) => {\n    switch(action.type){\n\n        case actionTypes.ADD_CONTAINER_TO_PREVIEW_RECO: return addContainerToPreviewReco(state,action);\n        case actionTypes.ADD_CONTAINER_TO_RECO: return addContainerToReco(state,action);\n        case actionTypes.DROP_FILES: return dropFiles(state, action);\n        case actionTypes.INIT_BATCH_RECOGNITION: return initBatchRecognition(state,action);\n        case actionTypes.INIT_FILE_RECOGNITION: return initFileRecognition(state,action);\n        case actionTypes.UPDATE_FILE_STATE: return updateFileState(state, action);\n        case actionTypes.REMOVE_RECOGNITION_ITEM: return removeRecognitionItem(state,action);\n        case actionTypes.OPEN_AUDIO_RECOGNITION_PREVIEW: return openAudioRecPreview(state, action);\n        case actionTypes.CLEAR_RECO_STORE: return clearRecoStore(state, action);\n        case actionTypes.REFUSE_RECO_FILES: return setRefusedFiles(state, action);\n        case actionTypes.LOAD_TRANSCRIPTION: return loadTranscription(state, action);\n\n        case actionTypes.REPO_RUN_SPEECH_RECOGNITION_DONE: return speechRecognitionSuccess(state,action);\n        case actionTypes.REPO_RUN_SPEECH_RECOGNITION_FAILED: return speechRecognitionFailed(state,action);\n\n       // case actionTypes.SET_TOOL_ITEM_STATUS: return changeToolItemStatus(state,action);\n\n        case actionTypes.SET_CONTAINER_STATUS: return changeToolItemStatus(state,action);\n\n        case actionTypes.SAVE_TRANSCRIPTION_SUCCESS: return saveTranscriptionSuccess(state,action);\n    }\n\n    return state;\n}\n\n\n\nexport default recognitionReducer;","import * as actionTypes from '../../actions/actionsTypes';\n//import uuid from 'uuid';\nimport { updateObject } from '../../utility';\n//import { addContainerToAlign } from '../../actions';\nimport produce from \"immer\";\n//import { createNotification, loader } from '../../../index';\n\n\nconst initialState = {\n\n    containersForSEG: [],\n                            // poniżej to kopie raczej nie beda uzywane\n   // segmentEntry: [],\n   // audioList: [],\n   // txtList: [],\n\n   // refusedAudioFileList: [],  //refused audio files\n   // refusedTxtFileList: [],  //refused txt files\n   // ifRefusedAudio: true, //which component refused files - audio or if false will be txt\n\n    alignContainerForPreview: '',\n}\n\n\n\n/*\nconst setRefusedTxtFiles = (state, action) => {\n    return updateObject(state, {\n        refusedTxtFileList: action.refusedFileList, \n        ifRefusedAudio: false,\n    });\n}\n\n\nconst setRefusedAudioFiles = (state, action) => {\n    return updateObject(state, {\n        refusedAudioFileList: action.refusedFileList, \n        ifRefusedAudio: true,\n    });\n}\n\nconst clearSegmentStore = (state,action) => {\n    return updateObject(state, {\n        segmentEntry: [],\n        audioList: [],\n        txtList: [],\n    });\n}\n\n\nconst dropAudioFiles = (state, action) => {\n\n    let SegmentEntryList = [];\n\n    const AudioFileList = [...state.audioList, ...action.audioFiles];\n\n    // forming segment Entry as Array of {audioFile, txtfile}\n\n    //OK\n    if (AudioFileList.length >= state.txtList.length) {\n     \n        //make txtArray equally length\n        const ilebrakuje = AudioFileList.length - state.txtList.length;\n        let txtArray = [...state.txtList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = AudioFileList.map((audioentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let txtItem = txtArray[i];\n            //console.log(txtItem)\n            if(txtItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n            //console.log(status)\n            return ({\n                audioEntry: Object.assign({}, audioentry),\n                txtEntry: Object.assign({}, txtItem),\n                status: status, //status if audio and text together\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    } else {\n        \n        //make txtArray equally length\n        const ilebrakuje = state.txtList.length - AudioFileList.length;\n        let audioArray = [...AudioFileList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = state.txtList.map((txtentry, i) => {\n\n            let status = 'novalid';\n            let audioItem = audioArray[i];\n            //console.log(txtItem)\n            if(audioItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioArray[i]),\n                txtEntry: Object.assign({}, txtentry),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    }\n\n    //console.log(SegmentEntryList)\n\n\n    return updateObject(state, {\n        audioList: AudioFileList,\n        segmentEntry: SegmentEntryList\n    });\n}\n\n\nconst dropTxtFiles = (state, action) => {\n\n    let SegmentEntryList = [];\n\n    const TxtFileList = [...state.txtList, ...action.txtFiles];\n\n    // forming segment Entry as Array of {audioFile, txtfile}\n\n    if (TxtFileList.length >= state.audioList.length) {\n\n        //make txtArray equally length\n        const ilebrakuje = TxtFileList.length - state.audioList.length;\n        let audioArray = [...state.audioList, ...new Array(ilebrakuje)];\n        \n\n        SegmentEntryList = TxtFileList.map((txtentry, i) => {\n\n            let status = 'novalid';\n            let audioItem = audioArray[i];\n            //console.log(txtItem)\n            if(audioItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioArray[i]),\n                txtEntry: Object.assign({}, txtentry),\n                status:status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    } else {\n        //make txtArray equally length\n        const ilebrakuje = state.audioList.length - TxtFileList.length;\n        let txtArray = [...TxtFileList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = state.audioList.map((audioentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let txtItem = txtArray[i];\n            //console.log(txtItem)\n            if(txtItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioentry),\n                txtEntry: Object.assign({}, txtArray[i]),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    }\n\n    //console.log(SegmentEntryList)\n\n\n\n    return updateObject(state, {\n        txtList: TxtFileList,\n        segmentEntry: SegmentEntryList\n    });\n}\n\nconst changeAudioListOrder = (state, action) => {\n\n    let SegmentEntryList = [];\n\n    //receiving the ids as array in custome order\n    const idsAudioOrder = action.audioIdsOrder;\n\n    //not rearrange the audioList according to the idsOrder...\n    const newAudioList = idsAudioOrder.map(id => {\n        return (\n            Object.assign({},\n                state.audioList.find(elem => elem.id === id)\n            )\n        )\n    });\n\n\n    if (newAudioList.length >= state.txtList.length) {\n\n        //make txtArray equally length\n        const ilebrakuje = newAudioList.length - state.txtList.length;\n        let txtArray = [...state.txtList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = newAudioList.map((audioentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let txtItem = txtArray[i];\n            //console.log(txtItem)\n            if(txtItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioentry),\n                txtEntry: Object.assign({}, txtArray[i]),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    } else {\n        //make txtArray equally length\n        const ilebrakuje = state.txtList.length - newAudioList.length;\n        let audioArray = [...newAudioList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = state.txtList.map((txtentry, i) => {\n\n             //status to tell if entry has both audio and txt\n             let status = 'novalid';\n             let audioItem = audioArray[i];\n            \n             if(audioItem===undefined){\n                 status = 'novalid';\n             } else {\n                 status = 'valid';\n             }\n\n            return ({\n                audioEntry: Object.assign({}, audioArray[i]),\n                txtEntry: Object.assign({}, txtentry),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    }\n\n    // console.log(SegmentEntryList)\n\n\n    return updateObject(state, {\n        audioList: newAudioList,\n        segmentEntry: SegmentEntryList\n    });\n\n}\n\n\n\nconst changeTxtListOrder = (state, action) => {\n\n    let SegmentEntryList = [];\n    \n    //receiving the ids as array in custome order\n    const idsTxtOrder = action.txtIdsOrder;\n\n    //not rearrange the audioList according to the idsOrder...\n    const newTxtList = idsTxtOrder.map(id => {\n        return (\n            Object.assign({},\n                state.txtList.find(elem => elem.id === id)\n            )\n        )\n    });\n\n\n    if (newTxtList.length >= state.audioList.length) {\n\n        //make txtArray equally length\n        const ilebrakuje = newTxtList.length - state.audioList.length;\n        let audioArray = [...state.audioList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = newTxtList.map((txtentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let audioItem = audioArray[i];\n           \n            if(audioItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioArray[i]),\n                txtEntry: Object.assign({}, txtentry),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n\n            }\n            );\n        });\n    } else {\n        //make txtArray equally length\n        const ilebrakuje = state.audioList.length - newTxtList.length;\n        let txtArray = [...newTxtList, ...new Array(ilebrakuje)];\n\n        console.log(txtArray)\n\n        SegmentEntryList = state.audioList.map((audioentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let txtItem = txtArray[i];\n           \n            if(txtItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n\n            return ({\n                audioEntry: Object.assign({}, audioentry),\n                txtEntry: Object.assign({}, txtArray[i]),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    }\n\n    //console.log(SegmentEntryList)\n    return updateObject(state, {\n        txtList: newTxtList,\n        segmentEntry: SegmentEntryList\n    });\n}\n\n\n\n\n const initBatchSegmentation = (state,action) => {\n\n    // to do\n     return updateObject(state, {}) ;  \n }\n\nconst initFileSegmentation = (state,action) => {\n    const entryId = action.entryId;\n \n    let newSegmentEntry = state.segmentEntry.map((entry, i) => {\n        //status to tell if entry has both audio and txt\n        let newEntry = Object.assign({}, entry);\n       if(newEntry.id === entryId){\n            newEntry.processingStatus = 'inProgress';\n       }\n\n       return newEntry;\n    });\n\n    return updateObject(state, {segmentEntry: newSegmentEntry}) ;  \n}\n\nconst removeSegmentEntry = (state,action) => {\n    const entryId = action.entryId;\n\n    let entryAudioId = '';\n    let entryTxtId = '';\n    \n    const newsegmentEntry = state.segmentEntry.filter((item, index) => {\n        //zapisuje z jakich elementow sklada sie segmentEntry\n        let czyzostawic = true;\n        if(item.id !== entryId){\n            czyzostawic = true;\n        } else {\n            //wtedy usuwam ten element\n            czyzostawic = false;\n            entryAudioId = item.audioEntry.id;\n            entryTxtId = item.txtEntry.id;\n        }\n        return czyzostawic\n    })\n\n    //teraz usuwam z listy audio oraz txt elementy o tym id\n    const newAudioList = state.audioList.filter((audioItem, index) => {\n        return audioItem.id !== entryAudioId;\n    });\n\n    const newTxtList = state.txtList.filter((txtItem, index) => {\n        return txtItem.id !== entryTxtId;\n    });\n\n    console.log(entryId)\n    console.log(entryAudioId)\n    console.log(entryTxtId)\n\n    return updateObject(state, {\n        segmentEntry: newsegmentEntry,\n        audioList: newAudioList,\n        txtList: newTxtList,\n    }) ; \n}\n\n*/\n\nconst fileSegmentationSuccess = (state,action) => {\n    const entryId = action.entryId;\n    //znajduje to entry i ustawiam mu odpowiedni status processingStatus\n    console.log(entryId)\n    let newSegmentEntry = state.segmentEntry.map((entry, i) => {\n        //status to tell if entry has both audio and txt\n        let newEntry = Object.assign({}, entry);\n       if(newEntry.id === entryId){\n            newEntry.processingStatus = 'done';\n       }\n\n       return newEntry;\n    });\n\n    console.log(newSegmentEntry)\n\n    return updateObject(state, {segmentEntry: newSegmentEntry}) ;  \n}\n\nconst fileSegmentationFailed = (state,action) => {\n    const entryId = action.entryId;\n    //znajduje to entry i ustawiam mu odpowiedni status processingStatus\n\n    let newSegmentEntry = state.segmentEntry.map((entry, i) => {\n        //status to tell if entry has both audio and txt\n        let newEntry = Object.assign({}, entry);\n       if(newEntry.id === entryId){\n            newEntry.processingStatus = 'error';\n       }\n\n       return newEntry;\n    });\n\n    return updateObject(state, {segmentEntry: newSegmentEntry}) ;  \n}\n\n\n// changes the status of container in segmentation list\nconst changeToolItemStatus = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType;\n    const status = action.status;\n\n     if(toolType == 'SEG') {\n        const nextState = produce(state, draftState => {\n\n            let foundFileIdx = draftState.containersForSEG.findIndex(file => {\n                return file._id === containerId;\n            })\n    \n            draftState.containersForSEG[foundFileIdx].statusSEG = status;\n       })\n    \n       return nextState;\n\n     } else {\n         return state;\n     }\n}\n\n\n// dodaje kontener do podglądu w edytorze\nconst addContainerToPreviewAlign = (state,action) => {\n    return updateObject(state, {\n        alignContainerForPreview:action.containerForPreview, \n    });\n}\n\n\n//#### dodaje contener do panelu align\n// ADD_CONTAINER_TO_ALIGN\nconst addContainerToAlign  = (state, action) => {\n\n    let containerToAdd = action.container;\n\n    const newElementToAdd = containerToAdd;\n\n    let newElements = null;\n\n    //dodaje nowy element tylko jeżeli wcześniej nie istniał w bazie\n    let found = state.containersForSEG.filter(file => {\n        return file._id == newElementToAdd._id\n    })\n\n\n    if(found.length < 1){\n       newElements = [newElementToAdd, ...state.containersForSEG];\n    } else {\n        newElements = [...state.containersForSEG];\n    }\n\n   \n    const nextState = produce(state, draftState => {\n        draftState.containersForSEG = newElements;\n    })\n\n    return nextState;\n\n}\n\n// #############################################\n// #### update Flagi danego kontenera po pomyślnym wykonaniu rozpoznawania\n//##############################################\n\nconst speechSegmentationSuccess = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n\n    const nextState = produce(state, draftState => {\n\n        let foundFileIdx = draftState.containersForSEG.findIndex(file => {\n            return file._id === containerId;\n        })\n\n        draftState.containersForSEG[foundFileIdx].ifSEG = true;\n        draftState.containersForSEG[foundFileIdx].statusSEG = 'done';\n       \n   })\n\n   return nextState;\n\n}\n\n\nconst speechSegmentationFailed = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n    const message = action.message;\n\n    let foundFileIdx = state.containersForSEG.findIndex(file => {\n        return file._id === containerId;\n    })\n\n   // console.log(\"wiadomosc: \" + message)\n\n\n    const nextState = produce(state, draftState => {\n        draftState.containersForSEG[foundFileIdx].ifSEG = false;\n        draftState.containersForSEG[foundFileIdx].statusSEG = 'error';\n        draftState.containersForSEG[foundFileIdx].errorMessage = message;\n       \n   })\n\n   return nextState;\n\n\n}\n\nconst removeSegmentationItem = (state, action)=>{\n\n    const containerId = action.container._id;\n\n    const nextState = produce(state, draftState => {\n\n       const nowaLista = state.containersForSEG.filter((container,index)=>{\n            if(container._id == containerId){\n                return false;\n            } else {\n                return true;\n            }\n       })\n\n\n       draftState.containersForSEG = nowaLista;\n\n     })\n\n   return nextState;\n\n}\n\n\n\nconst segmentationReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.SET_CONTAINER_STATUS: return changeToolItemStatus(state,action);\n\n        case actionTypes.ADD_CONTAINER_TO_PREVIEW_ALIGN: return addContainerToPreviewAlign(state,action);\n        case actionTypes.ADD_CONTAINER_TO_ALIGN: return addContainerToAlign(state,action);\n\n    \n        case actionTypes.REPO_RUN_SPEECH_SEGMENTATION_DONE: return speechSegmentationSuccess(state,action);\n        case actionTypes.REPO_RUN_SPEECH_SEGMENTATION_FAILED: return speechSegmentationFailed(state,action);\n\n        case actionTypes.REMOVE_SEGMENTATION_ITEM: return removeSegmentationItem(state,action);\n\n        /*\n        case actionTypes.DROP_AUDIO_FILES: return dropAudioFiles(state, action);\n        case actionTypes.DROP_TXT_FILES: return dropTxtFiles(state, action);\n        case actionTypes.CHANGE_AUDIO_LIST_ORDER: return changeAudioListOrder(state, action);\n        case actionTypes.CHANGE_TXT_LIST_ORDER: return changeTxtListOrder(state, action);\n        //case actionTypes.INIT_BATCH_SEGMENTATION: return initBatchSegmentation(state, action);\n        case actionTypes.INIT_FILE_SEGMENTATION: return initFileSegmentation(state,action);\n        case actionTypes.REMOVE_SEGMENT_ENTRY: return removeSegmentEntry(state,action);\n        case actionTypes.CLEAR_SEGMENT_STORE: return clearSegmentStore(state, action);\n        case actionTypes.FILE_SEGMENTATION_SUCCESS: return fileSegmentationSuccess(state,action);\n        case actionTypes.FILE_SEGMENTATION_FAILED: return fileSegmentationFailed(state,action);\n        case actionTypes.REFUSE_SEGMENT_AUDIO_FILES: return setRefusedAudioFiles(state, action);\n        case actionTypes.REFUSE_SEGMENT_TXT_FILES: return setRefusedTxtFiles(state, action);\n        */\n        \n\n        \n    }\n\n    return state;\n}\n\nexport default segmentationReducer;\n\n","import * as actionTypes from '../../actions/actionsTypes';\nimport {updateObject} from '../../utility';\n//import { changeAudioDisplayed } from '../../actions';\n\n\nconst initialState = {\n\n    txtContent: '',\n    txtDisplayed: false,\n    txtfileName: '',\n    txtFileUrl: '',\n\n    audiofileName: '',\n    audioContent: null,\n    audioDisplayed: false,\n    audioFileUrl: '',\n    waveSurferInitialized: false, //indicates when the waveSurfer is initialized\n\n    playing: false, //if playing....\n\n}\n\nconst clearPreviewStore = (state,action) => {\n    return updateObject(state, {\n        txtContent: '',\n        txtDisplayed: false,\n        txtfileName: '',\n        txtFileUrl: '',\n    \n        audiofileName: '',\n        audioDisplayed: false,\n        audioFileUrl: '',\n        waveSurferInitialized: false, \n    \n        playing: false, \n    }) ; \n}\n\n//zwraca rozszerzenie pliku\nconst getExt = (path) => {\n    return (path.match(/(?:.+..+[^\\/]+$)/ig) != null) ? path.split('.').slice(-1)[0]: 'null';\n}\n\nconst updateAudioPreview = (state, action) => {\n    return updateObject(state, {\n        //audiofileName: action.fileKey,\n        //txtfileName: action.fileName,\n        audioDisplayed: true,\n    }) ;      \n}\n\n\nconst updateTxtPreview = (state, action) => {\n    return updateObject(state, {\n        txtContent: action.newContent,\n        //txtfileName: action.fileName,\n        txtDisplayed: true,\n    }) ;      \n}\n\n\n\nconst openTxtFilePreview = (state,action) => {\n\n    const fileContent = action.fileContent;\n    const fileUrl = action.fileUrl;\n    const fileKey = action.fileKey;\n\n    return updateObject(state, {\n        txtfileName: fileKey,\n        txtFileUrl: fileUrl,\n        txtDisplayed: false,\n        txtContent: fileContent,\n    })\n\n}\n\n\nconst openAudioFilePreview = (state,action) => {\n\n    const fileUrl = action.fileUrl;\n    const fileKey = action.fileKey;\n    const wsinit = action.waveSurferInitialized;\n\n    console.log(wsinit)\n\n    return updateObject(state, {\n        audiofileName: fileKey,\n        audioDisplayed: false,\n        audioFileUrl: fileUrl,\n        waveSurferInitialized: wsinit, //indicates when the waveSurfer is initialized\n        playing: false, //if playing....\n    })\n\n}\n\nconst changeAudioDisplay = (state, action) => {\n    return updateObject(state, {\n        audioDisplayed: action.ifYes,\n    })\n}\n\nconst waveSurferInitialized = (state, action) => {\n    return updateObject(state, {\n        waveSurferInitialized: action.ifYes,\n    })\n}\n\nconst togglePlayingPreview = (state, action) => {\n    if(state.playing){\n        return updateObject(state, {\n            playing: false\n        })\n    } else {\n        return updateObject(state, {\n            playing: true\n        })\n    }\n}\n\nconst previewReducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.UPDATE_TXT_PREVIEW: return updateTxtPreview(state, action);\n        case actionTypes.UPDATE_AUDIO_PREVIEW: return updateAudioPreview(state, action);\n        case actionTypes.OPEN_TXT_FILE_PREVIEW: return openTxtFilePreview(state,action);\n        case actionTypes.OPEN_AUDIO_FILE_PREVIEW: return openAudioFilePreview(state,action);\n        case actionTypes.WAVESURFER_INITIALIZED: return waveSurferInitialized(state,action);\n        case actionTypes.TOGGLE_PLAYING_PREVIEW: return togglePlayingPreview(state,action);\n        case actionTypes.CLEAR_PREVIEW_STORE: return clearPreviewStore(state, action);\n        case actionTypes.CHANGE_AUDIO_DISPLAYED: return changeAudioDisplay(state,action);\n    }\n\n    return state;\n}\n\n\n\nexport default previewReducer;","import * as actionTypes from '../../store/actions/actionsTypes';\n//import Moment from 'moment';\nimport { updateObject, convertArrayToObject, getIdsArray } from '../utility';\nimport produce from \"immer\";\n//import { loadContainerForPreview } from '../actions';\n//import { updateContainerFlag } from '../actions';\n\n\n// const initialState = {\n\n//     errorMessage: \"\",\n//     iferror: false,\n\n\n//     currentlySelectedSessions: [],\n//     currentlySelectedContainers: [],\n\n//     sessions : {\n//         byId : {\n//             \"idSesji1\" : {\n//                 id : \"idSesji1\",\n//                 sessionName : \"sesja 1\",\n//                 ifSelected : false,\n//                 containers : [\"idContainer1\", \"idContainer2\"]\n//             },\n//             \"idSesji2\" : {\n//                 id : \"idSesji2\",\n//                 sessionName : \"sesja 2\",\n//                 ifSelected : false,\n//                 containers : [\"idContainer3\"]\n//             },\n//             \"idSesji3\" : {\n//                 id : \"idSesji3\",\n//                 sessionName : \"sesja 3\",\n//                 ifSelected : false,\n//                 containers : []\n//             },\n//         },\n//         allIds : [\"idSesji1\", \"idSesji2\",\"idSesji3\"]\n//     },\n//     containers : {\n//         byId : {\n//             \"idContainer1\" : {\n//                 id : \"idContainer1\",\n//                 containerName: 'jakis plik 1',\n//                 size: 1.5 * 1024 * 1024,\n//                 ifSelected: false,\n//                 session: \"idSesji1\",\n//                 ifAudio: true,\n//                 ifVAD: true,\n//                 ifDIA: true,\n//                 ifREC: true,\n//                 ifSEG: true,\n//             },\n//             \"idContainer2\" : {\n//                 id : \"idContainer2\",\n//                 containerName: 'jakis plik 2',\n//                 size: 1.5 * 1024 * 1024,\n//                 ifSelected: false,\n//                 session: \"idSesji1\",\n//                 ifAudio: true,\n//                 ifVAD: true,\n//                 ifDIA: true,\n//                 ifREC: true,\n//                 ifSEG: true,\n//             },\n//             \"idContainer3\" : {\n//                 id : \"idContainer3\",\n//                 containerName: 'jakis plik 3',\n//                 size: 1.5 * 1024 * 1024,\n//                 ifSelected: false,\n//                 session: \"idSesji2\",\n//                 ifAudio: true,\n//                 ifVAD: true,\n//                 ifDIA: true,\n//                 ifREC: true,\n//                 ifSEG: true,\n//             },\n//         },\n//         allIds : [\"idContainer1\", \"idContainer2\", \"idContainer3\"]\n//     },\n//         txtFiles : {\n    //         byId : {\n    //             \"txtId1\" : {\n    //                 id : \"txtId1\",\n    //                 txtFileName: 'jakis plik 1',\n    //                 size: 1.5 * 1024 * 1024,\n    //                 containerId: \"idSesji1\",\n    //             },\n    //             \"txtId2\" : {\n    //                 id : \"txtId2\",\n    //                 containerName: 'jakis plik 2',\n    //                 size: 1.5 * 1024 * 1024,\n    //                 containerId: \"idSesji1\",\n    //             },\n    //         },\n    //         allIds : [\"idContainer1\", \"idContainer2\", \"idContainer3\"]\n    //     },\n// }\n\n\n\n\nconst initialState = {\n\n    message: \"\",\n    iferror: false,\n\n    currentlySelectedSessions: [],\n    currentlySelectedContainers: [],\n\n    sessions : {\n        byId : {},\n        allIds : []\n    },\n    containers : {\n        byId : {},\n        allIds : []\n    },\n    txtFiles: {\n        byId: {},\n        allIds: {}\n    },\n\n    containerBinaryPreviewREC: null,\n    containerBinaryPreviewVAD: null,\n    containerBinaryPreviewDIA: null,\n    containerBinaryPreviewSEG: null,\n\n    containerAudioFileREC: null,\n    containerAudioFileVAD: null,\n    containerAudioFileDIA: null,\n    containerAudioFileSEG: null,\n\n    exportToEmuReady: false,\n\n}\n\n// ##################################################\n// ######### changes the status of given container ##########\n// ###############################################\nconst changeContainerStatus = (state, action) => {\n    \n        const containerId = action.containerId;\n        const toolType = action.toolType; \n        const newStatus = action.status;\n    \n        const nextState = produce(state, draftState => {\n    \n            switch(toolType){\n                case \"DIA\":\n                    draftState.containers.byId[containerId].statusDIA = newStatus;\n                    break;\n                case \"VAD\":\n                    draftState.containers.byId[containerId].statusVAD = newStatus;\n                    break;\n                case \"REC\":\n                    draftState.containers.byId[containerId].statusREC = newStatus;\n                    break;\n                case \"SEG\":\n                    draftState.containers.byId[containerId].statusSEG = newStatus;\n                    break;\n                default:\n                    console.log(\"Default\"); //to do\n            }\n    \n       })\n    \n       return nextState;\n\n}\n\n\n// ##################################################\n// ######### it loads binary for preview ##########\n// ###############################################\n\nconst loadAudioForPreview = (state, action) => {\n    \n    const containerAudioFile = action.containerAudioFile;\n    const toolType = action.toolType;\n\n    const nextState = produce(state, draftState => {\n        switch(toolType){\n            case \"DIA\":\n                draftState.containerAudioFileDIA = containerAudioFile;\n                break;\n            case \"VAD\":\n                draftState.containerAudioFileVAD = containerAudioFile;\n                break;\n            case \"REC\":\n                draftState.containerAudioFileREC = containerAudioFile;\n                break;\n            case \"SEG\":\n                draftState.containerAudioFileSEG = containerAudioFile;\n                break;\n            default:\n                console.log(\"Default\"); //to do\n        }\n   })\n\n   return nextState;\n    \n}\n\n\n\n\n\n// ##################################################\n// ######### it loads binary for preview ##########\n// ###############################################\n\nconst loadBinaryForPreview = (state, action) => {\n    \n    const containerBinaryData = action.containerBinaryData;\n    const toolType = action.toolType;\n\n    const nextState = produce(state, draftState => {\n        switch(toolType){\n            case \"DIA\":\n                draftState.containerBinaryPreviewDIA = containerBinaryData;\n                break;\n            case \"VAD\":\n                draftState.containerBinaryPreviewVAD = containerBinaryData;\n                break;\n            case \"REC\":\n                draftState.containerBinaryPreviewREC = containerBinaryData;\n                break;\n            case \"SEG\":\n                draftState.containerBinaryPreviewSEG = containerBinaryData;\n                break;\n            default:\n                console.log(\"Default\"); //to do\n        }\n   })\n\n   return nextState;\n    \n}\n\n\n// #############################################\n// #### update Flagi danego kontenera po pomyślnym wykonaniu danej usługi ###########\n//##############################################\n\nconst speechVADSuccess = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n    const VADSegments = action.VADSegments;\n\n    const nextState = produce(state, draftState => {\n        draftState.containers.byId[containerId].ifVAD = true;\n        draftState.containers.byId[containerId].statusVAD = 'ready';\n        draftState.containers.byId[containerId].VADUserSegments = VADSegments;\n   })  \n\n   return nextState;\n\n}\n\n\nconst speechVADFailed = (state, action) => {\n\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n\n    const nextState = produce(state, draftState => {\n        draftState.containers.byId[containerId].ifVAD = false;\n        draftState.containers.byId[containerId].statusVAD = 'error';\n\n   })\n\n   return nextState;\n\n}\n\n// #############################################\n// #### update Flagi danego kontenera po pomyślnym wykonaniu danej usługi ###########\n//##############################################\n\nconst speechDiarizationSuccess = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n\n    const nextState = produce(state, draftState => {\n        draftState.containers.byId[containerId].ifDIA = true;\n        draftState.containers.byId[containerId].statusDIA = 'ready';\n\n   })\n\n   return nextState;\n\n}\n\n\nconst speechDiarizationFailed = (state, action) => {\n\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n\n    const nextState = produce(state, draftState => {\n        draftState.containers.byId[containerId].ifDIA = false;\n        draftState.containers.byId[containerId].statusDIA = 'error';\n\n   })\n\n   return nextState;\n\n}\n\n\n// #############################################\n// #### update Flagi danego kontenera po pomyślnym wykonaniu danej usługi ###########\n//##############################################\n\nconst speechSegmentationDone = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n    const message = action.message;\n\n    const nextState = produce(state, draftState => {\n        draftState.containers.byId[containerId].ifSEG = true;\n        draftState.containers.byId[containerId].statusSEG = 'ready';\n\n   })\n\n   return nextState;\n\n}\n\n\nconst speechSegmentationFailed = (state, action) => {\n\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n    const message = action.message;\n\n    const nextState = produce(state, draftState => {\n        draftState.containers.byId[containerId].ifSEG = false;\n        draftState.containers.byId[containerId].statusSEG = 'error';\n        draftState.containers.byId[containerId].errorMessage = message;\n   })\n\n   return nextState;\n\n}\n\nconst speechRecognitionDone = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n\n    const nextState = produce(state, draftState => {\n\n        draftState.containers.byId[containerId].ifREC = true;\n        draftState.containers.byId[containerId].statusREC = 'ready';\n\n   })\n\n   return nextState;\n\n}\n\n\nconst speechRecognitionFailed = (state, action) => {\n\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n\n    const nextState = produce(state, draftState => {\n\n        draftState.containers.byId[containerId].ifREC = false;\n        draftState.containers.byId[containerId].statusREC = 'error';\n\n   })\n\n   return nextState;\n\n}\n\n\n// #############################################\n// #### usuniecie pojedynczego sesji ###########\n//##############################################\n\nconst repoRemoveSessionSuccess = (state, action) => {\n    const message = action.message;\n    const sessionId = action.sessionId;  // sesja którą chcemy usunąć\n\n    console.log(sessionId)\n\n    const nextState = produce(state, draftState => {\n\n        //zapisuje liste contenerów które też trzeba usunąć\n        let conteneryDoUsuniecia = state.sessions.byId[sessionId].containers;\n\n        console.log(conteneryDoUsuniecia)\n\n        \n        //usuwam samą sesje\n        let newSessions = Object.keys(state.sessions.byId).reduce((object, key) => {\n            if(key !== sessionId){\n                object[key] = state.sessions.byId[key];\n            }\n            return object\n        },{});\n\n         draftState.sessions.byId = newSessions;\n\n         console.log(newSessions)\n\n         //usuwam teraz kontenery\n\n          //usuwam kontener z listy kontenerow\n        let newContainers = Object.keys(state.containers.byId).reduce((object, key) => {\n            if(conteneryDoUsuniecia.includes(key)==false){\n                object[key] = state.containers.byId[key];\n            }\n            return object\n          \n        },{});\n\n         draftState.containers.byId = newContainers;\n\n         console.log(newContainers)\n        \n         //jezeli byly zaznaczone to odznaczam\n         draftState.currentlySelectedSessions[0] = null;\n         draftState.currentlySelectedContainers[0] = null;\n\n   })\n\n   return nextState;\n    \n}\n\n\nconst repoRemoveSessionFailed = (state, action) => {\n\n    const message = action.error.message;\n  \n    const nextState = produce(state, draftState => {\n\n        draftState.message = message;\n        draftState.iferror = true;\n        \n   })\n\n   return nextState;\n    \n}\n\n\n\n// #############################################\n// #### usuniecie pojedynczego kontenera ###########\n//##############################################\n\nconst repoRemoveContainerSuccess = (state, action) => {\n    const message = action.message;\n    const sessionId = action.sessionId;  // sesja z którego jest usuwany\n    const containerId = action.containerId; //kontener do usuniecia\n\n    // musze usunac ten kontener z containers oraz znalezc sesje do ktorej naleza i tez tam\n    // usunac referencje do tego kontenera\n\n    const nextState = produce(state, draftState => {\n\n        //usuwam ten kontener z listy sesji\n        let newlistconts = state.sessions.byId[sessionId].containers.filter((value, index, arr)=>{\n           return value != containerId;\n         })\n\n         draftState.sessions.byId[sessionId].containers = newlistconts;\n\n         //usuwam kontener z listy kontenerow\n        let newContainers = Object.keys(state.containers.byId).reduce((object, key) => {\n            if(key !== containerId) {\n                object[key] = state.containers.byId[key];\n            }\n            return object\n        },{});\n\n         draftState.containers.byId = newContainers;\n\n         //jezeli byly zaznaczone to odznaczam\n         draftState.currentlySelectedSessions[0] = null;\n         draftState.currentlySelectedContainers[0] = null;\n\n   })\n\n   return nextState;\n\n    \n}\n\n\nconst repoRemoveContainerFailed = (state, action) => {\n\n    const message = action.error.message;\n  \n    const nextState = produce(state, draftState => {\n\n        draftState.message = message;\n        draftState.iferror = true;\n        \n   })\n\n   return nextState;\n    \n}\n\n// #############################################\n// ############### tworze nową sesje ###########\n//##############################################\n\nconst repoCreateSession = (state, action) => {\n    const sessionName = action.sessionName;\n    const sessionId = action.sessionId;\n\n   const nextState = produce(state, draftState => {\n\n        draftState.sessions.byId = {\n            ...draftState.sessions.byId,\n            [sessionId]: {\n                id : sessionId,\n                sessionName : sessionName,\n                ifSelected : false,\n                containers : []\n            },\n        };\n       draftState.sessions.allIds.push(sessionId);\n\n   })\n\n   return nextState;\n}\n\nconst repoCreateSessionFailes = (state, action) => {\n    const message = action.errorMessage;\n\n    const nextState = produce(state, draftState => {\n        draftState.ifError = true;\n        draftState.message = message;\n    })\n\n    return nextState;\n}\n\n//######################################################\n//########## pobieram liste sesji i kontenerow uzytkownika ################\n//######################################################\n\nconst repoGetUserProjectFiles = (state, action) => {\n\n    const sessions = action.sessions;\n    const containers = action.containers;\n\n    const nextState = produce(state, draftState => {\n\n            draftState.sessions.byId = convertArrayToObject(sessions,'id');\n            draftState.sessions.allIds = getIdsArray(sessions);\n\n            draftState.containers.byId = convertArrayToObject(containers,'_id');\n            draftState.containers.allIds = getIdsArray(containers);\n\n    })\n\n    return nextState;\n\n}\n\nconst repoGetUserProjectFilesFailed = (state, action) => {\n     const error = action.error.toString();\n     return updateObject(state,\n         {message: error,\n          iferror: true});\n}\n\nconst deselectAll = (objects) => {\n    for (var item in objects) {\n        if (objects.hasOwnProperty(item)) {\n            if(item.ifSelected) {\n                item.ifSelected = false;\n            }\n        }\n    }\n    return objects;\n}\n\n\nconst repoSelectContainer = (state,action) => {\n    \n    // jeżeli jest null to znaczy że chce odznaczyć wszystko\n    let containerId = action.containerId;\n \n    const nextState = produce(state, draftState => {\n\n        let allContainers = draftState.containers.byId;\n        let allSessions = draftState.sessions.byId;\n\n        //zapisuje poprzednio zaznaczony aby odznaczyc\n        let previouslySelectedCont = draftState.currentlySelectedContainers[0];\n\n        //jezeli kliknalem to samo to robie toogle\n        if(containerId == previouslySelectedCont){\n            \n            draftState.currentlySelectedContainers[0] = null;\n            allContainers[previouslySelectedCont].ifSelected = false;\n        } else {\n            if(containerId){\n                draftState.currentlySelectedContainers[0] = containerId;\n                allContainers[containerId].ifSelected = true;\n            \n                //odznaczam poprzendio zaznaczony o ile nie był pusty\n                if(previouslySelectedCont){\n                   allContainers[previouslySelectedCont].ifSelected = false;\n                }\n\n                //odznaczam również sesje o ile byla jakas zaznaczona\n                let ktorasesjazaznaczone = draftState.currentlySelectedSessions[0];\n                if(ktorasesjazaznaczone != null){\n                     allSessions[ktorasesjazaznaczone].ifSelected = false;\n                     draftState.currentlySelectedSessions[0] = null;\n                }\n               \n        \n            } else {\n                if(previouslySelectedCont){\n                    //allContainers[previouslySelectedCont].ifSelected = false;\n                    draftState.currentlySelectedContainers[0] = null;\n                    allContainers[containerId].ifSelected = false;\n                }\n            }\n        }\n    })\n\n    return nextState;\n \n}\n\n// do zaznaczania folderów sesji w repo\nconst repoSelectSession = (state, action) => {\n\n    let sessionId = action.sessionId;\n\n    const nextState = produce(state, draftState => {\n\n        let allContainers = draftState.containers.byId;\n        let allSessions = draftState.sessions.byId;\n\n        //zapisuje poprzednio zaznaczony aby odznaczyc\n\n        //if(draftState.currentlySelectedContainers.length > 0){\n\n                let previouslySelectedSess = draftState.currentlySelectedSessions[0];\n                let previouslySelectedCont = draftState.currentlySelectedContainers[0];\n\n                //jeżeli kliknąłem z zaznaczoną to odznaczam\n                if(sessionId == previouslySelectedSess){\n                    allSessions[sessionId].ifSelected = false;\n                    draftState.currentlySelectedSessions[0] = null;\n                } else {\n                    draftState.currentlySelectedSessions[0] = sessionId;\n                    allSessions[sessionId].ifSelected = true;\n\n                    //odznaczam również contenery o ile byly jakies zaznaczone\n                    let ktorezaznaczonecontenery = draftState.currentlySelectedContainers[0];\n                    if(allContainers[ktorezaznaczonecontenery] !== undefined){\n                        console.log(ktorezaznaczonecontenery)\n                        console.log(allContainers[ktorezaznaczonecontenery])\n                        \n                        allContainers[ktorezaznaczonecontenery].ifSelected = false;\n                        draftState.currentlySelectedContainers[0] = null;\n                    }\n\n                    //odznaczam poprzendio zaznaczony o ile nie był pusty\n                    if(allSessions[previouslySelectedSess] != null ){\n                        allSessions[previouslySelectedSess].ifSelected = false;\n                    }\n                }\n        //}\n    })\n\n    return nextState;\n    \n}\n\n\nconst saveTranscriptionSuccess = (state, action) => {\n    \n    const containerId = action.containerId;\n    const toolType = action.toolType;\n\n    const nextState = produce(state, draftState => {\n        draftState.containers.byId[containerId].ifREC = true;\n        draftState.containers.byId[containerId].statusREC = 'ready';\n\n   })\n\n   return nextState;  \n\n}\n\nconst exportToEmuFailed = (state, action) => {\n\n\n    const nextState = produce(state, draftState => {\n        draftState.exportToEmuReady = false;\n   })\n\n   return nextState; \n    \n}\n\nconst exportToEmuDone = (state, action) => {\n\n\n    const nextState = produce(state, draftState => {\n        draftState.exportToEmuReady = true;\n   })\n\n   return nextState; \n    \n}\n\nconst korpusDownloaded = (state, action) => {\n\n    const nextState = produce(state, draftState => {\n        draftState.exportToEmuReady = false;\n   })\n\n   return nextState; \n    \n}\n\n\n\n\n//############################### pod spodem sa stare akcje\n//#############################\n//#############################\n//#############################\n//#############################\n//#############################\n//#############################\n//#############################\n\n//##########################################\n//############ tworzenie nowego folderu\n//#########################################\n\nconst repoCreateFolder = (state, action) => {\n\n    // const key = action.key;\n\n    // const newfiles = state.files.concat([{key: key, }]);\n\n    // return updateObject(state,\n    //     {files: newfiles});\n\n    // // handleCreateFolder = (key) => {\n    //     //     this.setState(state => {\n    //     //       state.files = state.files.concat([{\n    //     //         key: key,\n    //     //       }])\n    //     //       return state\n    //     //     })\n    //     //   }\n}\n\nconst repoCreateFiles = (state, action) => {\n\n    // const files = action.files;\n    // const prefix = action.prefix;\n   \n    // return updateObject(state,\n    //     {});\n\n         // handleCreateFiles = (files, prefix) => {\n\t// \tthis.setState(state => {\n\t// \t  const newFiles = files.map((file) => {\n\t// \t\tlet newKey = prefix\n\t// \t\tif (prefix !== '' && prefix.substring(prefix.length - 1, prefix.length) !== '/') {\n\t// \t\t  newKey += '/'\n\t// \t\t}\n\t// \t\tnewKey += file.name\n\t// \t\treturn {\n\t// \t\t  key: newKey,\n\t// \t\t  size: file.size,\n\t// \t\t  modified: +Moment(),\n\t// \t\t}\n\t// \t  })\n\t\n\t// \t  const uniqueNewFiles = []\n\t// \t  newFiles.map((newFile) => {\n\t// \t\tlet exists = false\n\t// \t\tstate.files.map((existingFile) => {\n\t// \t\t  if (existingFile.key === newFile.key) {\n\t// \t\t\texists = true\n\t// \t\t  }\n\t// \t\t})\n\t// \t\tif (!exists) {\n\t// \t\t  uniqueNewFiles.push(newFile)\n\t// \t\t}\n\t// \t  })\n\t// \t  state.files = state.files.concat(uniqueNewFiles)\n\t// \t  return state\n\t// \t})\n\t//   }\n}\n\n\n//##########################################\n//############ zmiana nazwy folderu w repo\n//#########################################\n\nconst repoRenameFolder = (state, action) => {\n\n    // const oldKey = action.oldKey;\n    // const newKey = action.newKey;\n\n    // console.log('ZMIOANA NAZWY FOLDERU')\n\n    // const newFiles = [];\n    // state.files.map((file) => {\n\n    //     if(oldKey !== newKey){\n    //         newFiles.push({\n    //             ...file,\n    //             key: file.key.replace(oldKey, newKey),\n    //             modified: +Moment(),\n    //         })\n    //     }\n    // })\n    \n    // return updateObject(state,\n    //     {files: newFiles});\n    \n\n    // handleRenameFolder = (oldKey, newKey) => {\n\t// \tthis.setState(state => {\n\t// \t  const newFiles = []\n\t// \t  state.files.map((file) => {\n\t// \t\tif (file.key.substr(0, oldKey.length) === oldKey) {\n\t// \t\t  newFiles.push({\n\t// \t\t\t...file,\n\t// \t\t\tkey: file.key.replace(oldKey, newKey),\n\t// \t\t\tmodified: +Moment(),\n\t// \t\t  })\n\t// \t\t} else {\n\t// \t\t  newFiles.push(file)\n\t// \t\t}\n\t// \t  })\n\t// \t  state.files = newFiles\n\t// \t  return state\n\t// \t})\n\t//   }\n}\n\n//##########################################\n//############ zmiana nazwy pliku w repo\n//#########################################\n\nconst repoRenameFile = (state, action) => {\n\n    // const oldKey = action.oldKey;\n    // const newKey = action.newKey;\n\n    // const newFiles = [];\n    \n    // state.files.map((file) => {\n\t// \tif (file.key === oldKey) {\n\t// \t\tnewFiles.push({\n    //             ...file,\n    //             key: newKey,\n    //             modified: +Moment(),\n\t// \t\t})\n\t// \t} else {\n\t// \t\t  newFiles.push(file)\n\t// \t\t}\n\t// \t})\n\t\t\n\n    // return updateObject(state,\n    //     {files: newFiles});\n\n}\n\n//##########################################\n//############ usuwanie folderow z repo\n//#########################################\n\nconst repoDeleteFolder = (state, action) => {\n\n    // const folderKey = action.folderKey;\n\n    // const newFiles = [];\n    // state.files.map((file) => {\n    //     if (file.key.substr(0, folderKey.length) !== folderKey) {\n    //         newFiles.push(file)\n    //     }\n    // })\n    \n    // return updateObject(state,\n    //     {files: newFiles});\n}\n\n\n//##########################################\n//############ usuwanie plikow z repo ######\n//##########################################\n\nconst repoDeleteFile = (state, action) => {\n\n    // const fileKey = action.fileKey;\n\n    // const newFiles = [];\n    // state.files.map((file) => {\n    //     if (file.key !== fileKey) {\n    //         newFiles.push(file)\n    //     } else {\n    //         //jezeli jest usuniety z folderu to musze posotawic folder\n    //         let n = fileKey.lastIndexOf(\"/\");\n    //         //to oznacza ze plik jest w jakim podfoldrze\n    //         if(n > 1){\n    //            //wtedy zwracam tylko sam folder - bez pliku w nim\n    //            console.log(file)\n    //            let onlyFolders = file.key.substring(0,n+1);\n    //            console.log(onlyFolders)\n    //            file.key = onlyFolders;\n    //            newFiles.push(file);\n    //         }\n    //     }\n    // })\n  \n    // return updateObject(state,\n    //     {files: newFiles});\n}\n\n\n\nconst repoDownloadFile = (state,action) => {\n    // return updateObject(state,\n    //     {downloadedFile: action.downloadedFile});\n}\n\nconst repoEditFileSuccess = (state,action) => {\n    // return updateObject(state,\n    //     {editTxtFileOK: true});\n}\n\nconst repoEditFileFailed = (state,action) => {\n    // return updateObject(state,\n    //     {editTxtFileOK: false});\n}\n\n//###################### upload plikow do repo ################\n//##############################################################\nconst repoUploadFilesFinish = (state,action) => {\n    \n    // return updateObject(state,\n    //     {\n    //         uploadFilesDone: false,\n    //         //uploadProgress: 0,\n    //     });\n}\n\nconst repoUploadFilesInit = (state,action) => {\n    \n    // return updateObject(state,\n    //     {\n    //         uploadFilesDone: false,\n    //         uploadBtnDisabled: true,\n    //         //uploadProgress: 0,\n    //     });\n}\n\nconst repoUploadFilesSuccess = (state,action) => {\n    \n    // return updateObject(state,\n    //     {\n    //         uploadFilesDone: true,\n    //         uploadBtnDisabled: false,\n    //         //uploadProgress: 0,\n    //     });\n}\n\nconst repoUploadFilesFailed = (state,action) => {\n    // return updateObject(state,\n    //     {\n    //         uploadFilesDone: false,\n    //         uploadBtnDisabled: false,\n    //        // uploadProgress: 0,\n    //     });\n}\n\nconst repoUploadProgress = (state,action) => {\n    // return updateObject(state,\n    //     {\n    //         uploadProgress: action.percent,\n    //     });\n}\n\nconst repoUploadFilesModalOpen = (state,action) => {\n    // return updateObject(state,\n    //     {\n    //         uploadProgress: 0,\n    //     });\n}\n\n\n\n\nconst repoPanelReducer = (state = initialState, action) => {\n    switch(action.type){\n\n        case actionTypes.SET_CONTAINER_STATUS: return changeContainerStatus(state,action);\n\n        case actionTypes.REPO_RUN_SPEECH_RECOGNITION_DONE: return speechRecognitionDone(state,action);\n        case actionTypes.REPO_RUN_SPEECH_RECOGNITION_FAILED: return speechRecognitionFailed(state,action);\n\n        case actionTypes.REPO_RUN_SPEECH_SEGMENTATION_DONE: return speechSegmentationDone(state,action);\n        case actionTypes.REPO_RUN_SPEECH_SEGMENTATION_FAILED: return speechSegmentationFailed(state,action);\n\n        case actionTypes.REPO_RUN_SPEECH_DIARIZATION_DONE: return speechDiarizationSuccess(state,action);\n        case actionTypes.REPO_RUN_SPEECH_DIARIZATION_FAILED: return speechDiarizationFailed(state,action);\n\n        case actionTypes.REPO_RUN_SPEECH_VAD_DONE: return speechVADSuccess(state,action);\n        case actionTypes.REPO_RUN_SPEECH_VAD_FAILED: return speechVADFailed(state,action);\n\n        case actionTypes.LOAD_BINARY_FOR_PREVIEW: return loadBinaryForPreview(state,action);\n        case actionTypes.LOAD_AUDIO_FOR_PREVIEW: return loadAudioForPreview(state,action);\n\n        case actionTypes.REPO_SELECT_SESSION: return repoSelectSession(state,action);\n        case actionTypes.REPO_SELECT_CONTAINER: return repoSelectContainer(state,action);\n\n        case actionTypes.REPO_GET_USER_PROJECT_FILES: return repoGetUserProjectFiles(state,action);\n        case actionTypes.REPO_GET_USER_PROJECT_FILES_FAILED: return repoGetUserProjectFilesFailed(state,action);\n\n        case actionTypes.REPO_CREATE_NEW_SESSION: return repoCreateSession(state,action);\n        case actionTypes.REPO_CREATE_NEW_SESSION_FAILED: return repoCreateSessionFailes(state,action);\n\n        case actionTypes.REPO_DELETE_CONTAINER_SUCCESS: return repoRemoveContainerSuccess(state,action);\n        case actionTypes.REPO_DELETE_CONTAINER_FAILED: return repoRemoveContainerFailed(state,action);\n\n        case actionTypes.REPO_DELETE_SESSION_SUCCESS: return repoRemoveSessionSuccess(state,action);\n        case actionTypes.REPO_DELETE_SESSION_FAILED: return repoRemoveSessionFailed(state,action);\n\n        case actionTypes.SAVE_TRANSCRIPTION_SUCCESS: return saveTranscriptionSuccess(state,action);\n\n        case actionTypes.EXPORT_TO_EMU_DONE_SUCCESS: return exportToEmuDone(state,action);\n\n        case actionTypes.EXPORT_TO_EMU_DONE_FAILED: return exportToEmuFailed(state,action);\n        \n\n        case actionTypes.KORPUS_DOWNLOADED: return korpusDownloaded(state,action);\n\n        \n\n        //case actionTypes.REPO_UPLOAD_FILE: return repoUploadFile(state,action);\n        \n        // case actionTypes.REPO_UPLOAD_FILES_PROGRESS: return repoUploadProgress(state,action);\n        // case actionTypes.REPO_UPLOAD_FILES_FINISH: return repoUploadFilesFinish(state,action);\n        // case actionTypes.REPO_UPLOAD_FILES_INIT: return repoUploadFilesInit(state,action);\n        // case actionTypes.REPO_UPLOAD_FILES_SUCCESS: return repoUploadFilesSuccess(state,action); \n        // case actionTypes.REPO_UPLOAD_FILES_FAILED: return repoUploadFilesFailed(state,action); \n        // case actionTypes.REPO_UPLOAD_FILES_MODAL_OPEN: return repoUploadFilesModalOpen(state,action);\n\n        // case actionTypes.REPO_EDIT_TXT_SUCCESS: return repoEditFileSuccess(state,action);\n        // case actionTypes.REPO_EDIT_TXT_FAILED: return repoEditFileFailed(state,action);\n\n        // case actionTypes.REPO_CREATE_FOLDER: return repoCreateFolder(state,action);\n        // case actionTypes.REPO_CREATE_FILES: return repoCreateFiles(state,action);\n        // case actionTypes.REPO_RENAME_FOLDER: return repoRenameFolder(state,action);\n        // case actionTypes.REPO_RENAME_FILE: return repoRenameFile(state,action);\n        // case actionTypes.REPO_DELETE_FOLDER: return repoDeleteFolder(state,action);\n        // case actionTypes.REPO_DELETE_FILE: return repoDeleteFile(state,action);\n        \n        // case actionTypes.REPO_DOWNLOAD_FILE: return repoDownloadFile(state,action);\n    }\n\n    return state;\n}\n\nexport default repoPanelReducer;","import * as actionTypes from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n//import { transcriptionChanged } from '../actions';\n//import { saveTranscription } from '../actions';\n//import { saveTranscriptionFailed } from '../actions/toolActions/audioEditor';\n\nconst initialState = {\n    currentProjectID: '',\n    currentProjectName: '',\n    currentProjectOwner: '',\n    modal: false,  // keeps if moda should be opened,\n    errorMessage: '',\n    error: false,\n\n    transcriptionSaved: false,\n    transcriptionSavedMessage: '',\n}\n\nconst editNameFailed = (state, action) => {\n    const error = action.error;\n \n    \n    return updateObject(state, {errorMessage: error, error: true});\n }\n \n const editName = (state, action) => {\n \n     const projectId = action.projectId;\n     const newProjectName = action.newProjectName;\n     const message = action.message;\n \n     return updateObject(state, {\n         currentProjectName: newProjectName,\n         errorMessage: '', \n         error: false});\n }\n\nconst initProject = (state, action) => {\n    return updateObject(state,\n        {\n            currentProjectID: action.projectId,\n            currentProjectName: action.projectTitle,\n            currentProjectOwner: action.projectOwner,\n        });\n}\n\nconst openModalProject = (state, action) => {\n    return updateObject(state,\n        {\n            modal: true\n        });\n}\n\nconst closeModalProject = (state, action) => {\n    return updateObject(state,\n        {\n            modal: false\n        });\n}\n\nconst saveTranscription = (state,action) => {\n    return updateObject(state,\n        {\n            transcriptionSaved: true,\n            transcriptionSavedMessage: action.message,\n        })\n}\n\nconst saveTranscriptionFailed = (state,action) => {\n    return updateObject(state,\n        {\n            transcriptionSaved: false,\n        })\n}\n\nconst transcriptionChanged = (state,action)=>{\n    return updateObject(state,\n        {\n            transcriptionSaved: false,\n            transcriptionSavedMessage: '',\n        })\n}\n\n\n\nconst projectReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case actionTypes.INIT_PROJECT: return initProject(state, action);\n        case actionTypes.OPEN_MODAL_PROJECT: return openModalProject(state, action);\n        case actionTypes.CLOSE_MODAL_PROJECT: return closeModalProject(state, action);\n        case actionTypes.EDIT_NAME: return editName(state, action);\n        case actionTypes.EDIT_NAME_FAILED: return editNameFailed(state, action);\n        case actionTypes.EDIT_NAME_FAILED: return editNameFailed(state, action);\n        case actionTypes.SAVE_TRANSCRIPTION_SUCCESS: return saveTranscription(state,action);\n        case actionTypes.SAVE_TRANSCRIPTION_FAILED: return saveTranscriptionFailed(state,action);\n        case actionTypes.TRANSCRIPTION_CHANGED: return transcriptionChanged(state,action);\n        \n    }\n\n    return state;\n}\n\nexport default projectReducer;\n\n","import * as actionTypes from '../../actions/actionsTypes';\nimport {updateObject} from '../../utility';\nimport produce from \"immer\";\n//import { createNotification, loader } from '../../../index';\n//import { runVADInBatch } from '../../actions';\n\n\n\nconst initialState = {\n    containersForVAD: [], \n    refusedFileList: [],  //refused files\n    //w formacie np. \n    // [{\n        // file: File {name: \"__mowa16000.wav\", lastModified: 1560968256333, lastModifiedDate: Wed Jun 19 2019 20:17:36 GMT+0200 (Central European Summer Time), webkitRelativePath: \"\", size: 1235820, …}\n        // id: \"01f0a209-a29f-407a-9b8a-12cdebd1e1fd\"\n        // loadedperc: 0\n        // status: \"toload\"\n    // }]\n\n    vadContainerForPreview: '', //container beeing previewd in recognition\n}\n\n\n\n// dodaje kontener do podgladu w vad\nconst addContainerToPreviewVAD = (state,action) => {\n    return updateObject(state, {\n        vadContainerForPreview:action.containerForPreview, \n    });\n}\n\n// ######### dodaje container do listy VAD #########\n\nconst addContainerToVAD = (state,action) => {\n   \n    const newElementToAdd = action.container;\n\n    let newElements = null;\n    //dodaje nowy element tylko jeżeli wcześniej nie istniał w bazie\n    let found = state.containersForVAD.filter(file => {\n        return file._id == newElementToAdd._id\n    })\n\n    if(found.length < 1){\n        newElements = [newElementToAdd, ...state.containersForVAD];\n     } else {\n         newElements = [...state.containersForVAD];\n     }\n\n\n     return updateObject(state, {\n        containersForVAD:newElements, \n    });\n}\n\nconst saveVADSegmentsSuccess = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n    const updatedSegments = action.updatedSegments;\n\n    const nextState = produce(state, draftState => {\n\n        //przepisuje wlasciwosci container z preview do odpowiedniego w liscie\n\n        let foundFileIdx = draftState.containersForVAD.findIndex(file => {\n            return file._id === containerId;\n        })\n\n        draftState.containersForVAD[foundFileIdx].VADUserSegments = updatedSegments;\n        draftState.vadContainerForPreview.VADUserSegments = updatedSegments;\n       \n   })\n   \n\n   return nextState; \n}\n\nconst speechVADSuccess = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n    const VADSegments = action.VADSegments;\n\n\n    const nextState = produce(state, draftState => {\n\n        let foundFileIdx = draftState.containersForVAD.findIndex(file => {\n            return file._id === containerId;\n        })\n\n        draftState.containersForVAD[foundFileIdx].ifVAD = true;\n        draftState.containersForVAD[foundFileIdx].statusVAD = 'done';\n        draftState.containersForVAD[foundFileIdx].VADUserSegments = VADSegments;\n\n        //sprawdzam czy który miał robione rozpoznawanie był otwarty w preview\n\n        if(draftState.vadContainerForPreview._id == draftState.containersForVAD[foundFileIdx]._id){\n            draftState.vadContainerForPreview =  draftState.containersForVAD[foundFileIdx];\n        }\n       \n   })\n   \n\n   return nextState;\n\n}\n\n\nconst speechVADFailed = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n    const message =  action.message;\n\n    let foundFileIdx = state.containersForVAD.findIndex(file => {\n        return file._id === containerId;\n    })\n\n    //createNotification('error', message + ', concerns: ' + state.containersForVAD[foundFileIdx].containerName);\n\n    const nextState = produce(state, draftState => {\n        draftState.containersForVAD[foundFileIdx].ifVAD = false;\n        draftState.containersForVAD[foundFileIdx].statusVAD = 'error';\n        draftState.containersForVAD[foundFileIdx].errorMessage = message;\n       \n   })\n\n   return nextState;\n\n}\n\n\nconst changeToolItemStatus = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType;\n    const status = action.status;\n\n     if(toolType == 'VAD') {\n        const nextState = produce(state, draftState => {\n\n            let foundFileIdx = draftState.containersForVAD.findIndex(file => {\n                return file._id === containerId;\n            })\n    \n            draftState.containersForVAD[foundFileIdx].statusVAD = status;\n       })\n    \n       return nextState;\n\n     } else {\n         return state;\n     }\n\n}\n\n\nconst removeVADItemFromList = (state, action)=>{\n\n    const containerId = action.container._id;\n\n    const nextState = produce(state, draftState => {\n       const nowaLista = state.containersForVAD.filter((container,index)=>{\n            if(container._id == containerId){\n                return false;\n            } else {\n                return true;\n            }\n       })\n       draftState.containersForVAD = nowaLista;\n     })\n\n   return nextState;\n\n}\n\n\n\nconst vadReducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.ADD_CONTAINER_TO_VAD: return addContainerToVAD(state,action);\n        case actionTypes.ADD_CONTAINER_TO_PREVIEW_VAD: return addContainerToPreviewVAD(state,action);\n\n        case actionTypes.REPO_RUN_SPEECH_VAD_DONE: return speechVADSuccess(state,action);\n        case actionTypes.REPO_RUN_SPEECH_VAD_FAILED: return speechVADFailed(state,action);\n\n        case actionTypes.SET_CONTAINER_STATUS: return changeToolItemStatus(state,action);\n\n        case actionTypes.SAVE_VAD_SEGMENTS_SUCCESS: return saveVADSegmentsSuccess(state,action);\n\n        case actionTypes.REMOVE_VAD_ITEM: return removeVADItemFromList(state,action);\n\n        \n        //case actionTypes.ADD_CONTAINER_TO_RECO: return addContainerToReco(state,action);\n        //case actionTypes.DROP_FILES: return dropFiles(state, action);\n    }\n\n    return state;\n}\n\n\n\nexport default vadReducer;","import * as actionTypes from '../../actions/actionsTypes';\nimport {updateObject} from '../../utility';\n//import { runSpeechDiarizationSuccess } from '../../actions/repo';\nimport produce from \"immer\";\n//import { createNotification, loader } from '../../../index';\n\n\n\nconst initialState = {\n    containersForDIA: [], \n    refusedFileList: [],  //refused files\n    //w formacie np. \n    // [{\n        // file: File {name: \"__mowa16000.wav\", lastModified: 1560968256333, lastModifiedDate: Wed Jun 19 2019 20:17:36 GMT+0200 (Central European Summer Time), webkitRelativePath: \"\", size: 1235820, …}\n        // id: \"01f0a209-a29f-407a-9b8a-12cdebd1e1fd\"\n        // loadedperc: 0\n        // status: \"toload\"\n    // }]\n    diaContainerForPreview: '',\n}\n\n// dodaje kontener do podgladu w dia\nconst addContainerToPreviewDIA = (state,action) => {\n    return updateObject(state, {\n        diaContainerForPreview:action.containerForPreview, \n    });\n}\n\n// ######### dodaje container do listy DIA #########\n\nconst addContainerToDIA = (state,action) => {\n\n   // console.log('add container to dia')\n\n    const newElementToAdd = action.container;\n\n    let newElements = null;\n    //dodaje nowy element tylko jeżeli wcześniej nie istniał w bazie\n    let found = state.containersForDIA.filter(file => {\n        return file._id == newElementToAdd._id\n    })\n\n    if(found.length < 1){\n        newElements = [newElementToAdd, ...state.containersForDIA];\n     } else {\n         newElements = [...state.containersForDIA];\n     }\n\n\n     return updateObject(state, {\n        containersForDIA:newElements, \n    });\n}\n\n// #############################################\n// #### update Flagi danego kontenera po pomyślnym wykonaniu rozpoznawania\n//##############################################\n\nconst speechDiarizationSuccess = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n    const DIAsegments = action.DIAsegments;\n\n   // console.log(\"TUTAJ TEZ POWINIENEM \")\n    //console.log(action.containerId)\n\n    const nextState = produce(state, draftState => {\n\n        let foundFileIdx = draftState.containersForDIA.findIndex(file => {\n            return file._id === containerId;\n        })\n\n        draftState.containersForDIA[foundFileIdx].ifDIA = true;\n        draftState.containersForDIA[foundFileIdx].statusDIA = 'done';\n        draftState.containersForDIA[foundFileIdx].DIAUserSegments = DIAsegments;\n       \n        //sprawdzam czy który był otwarty w preview\n\n        if(draftState.diaContainerForPreview._id == draftState.containersForDIA[foundFileIdx]._id){\n            draftState.diaContainerForPreview =  draftState.containersForDIA[foundFileIdx];\n        }\n\n   })\n\n   return nextState;\n\n}\n\n\nconst speechDiarizationFailed = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n\n    let foundFileIdx = state.containersForDIA.findIndex(file => {\n        return file._id === containerId;\n    })\n\n    //createNotification('error', 'Wystąpił błąd diaryzacji pliku ' + state.containersForDIA[foundFileIdx].containerName);\n\n    const nextState = produce(state, draftState => {\n        draftState.containersForDIA[foundFileIdx].ifDIA = false;\n        draftState.containersForDIA[foundFileIdx].statusDIA = 'error';\n       \n \n   })\n\n   return nextState;\n\n}\n\nconst changeToolItemStatus = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType;\n    const status = action.status;\n\n     if(toolType == 'DIA') {\n        const nextState = produce(state, draftState => {\n\n            let foundFileIdx = draftState.containersForDIA.findIndex(file => {\n                return file._id === containerId;\n            })\n    \n            draftState.containersForDIA[foundFileIdx].statusDIA = status;\n       })\n    \n       return nextState;\n\n     } else {\n         return state;\n     }\n\n}\n\nconst saveDIASegmentsSuccess = (state, action) => {\n    const containerId = action.containerId;\n    const toolType = action.toolType; \n    const updatedSegments = action.updatedSegments;\n\n    const nextState = produce(state, draftState => {\n\n        //przepisuje wlasciwosci container z preview do odpowiedniego w liscie\n\n        let foundFileIdx = draftState.containersForDIA.findIndex(file => {\n            return file._id === containerId;\n        })\n\n        draftState.containersForDIA[foundFileIdx].DIAUserSegments = updatedSegments;\n        draftState.diaContainerForPreview.DIAUserSegments = updatedSegments;  \n   })\n\n   return nextState; \n}\n\n\nconst removeFromDIAItems = (state, action)=>{\n\n    const containerId = action.container._id;\n\n    const nextState = produce(state, draftState => {\n       const nowaLista = state.containersForDIA.filter((container,index)=>{\n            if(container._id == containerId){\n                return false;\n            } else {\n                return true;\n            }\n       })\n       draftState.containersForDIA = nowaLista;\n     })\n\n   return nextState;\n\n}\n\n\nconst diaReducer = (state = initialState, action) => {\n    switch(action.type){\n\n        case actionTypes.ADD_CONTAINER_TO_DIA: return addContainerToDIA(state,action);\n        case actionTypes.ADD_CONTAINER_TO_PREVIEW_DIA: return addContainerToPreviewDIA(state,action);\n\n        case actionTypes.REPO_RUN_SPEECH_DIARIZATION_DONE: return speechDiarizationSuccess(state,action);\n        case actionTypes.REPO_RUN_SPEECH_DIARIZATION_FAILED: return speechDiarizationFailed(state,action);\n\n        case actionTypes.SET_CONTAINER_STATUS: return changeToolItemStatus(state,action);\n\n        case actionTypes.SAVE_DIA_SEGMENTS_SUCCESS: return saveDIASegmentsSuccess(state,action);\n\n        case actionTypes.REMOVE_DIA_ITEM: return removeFromDIAItems(state,action);\n\n        //case actionTypes.ADD_CONTAINER_TO_RECO: return addContainerToReco(state,action);\n        //case actionTypes.DROP_FILES: return dropFiles(state, action);\n    }\n\n    return state;\n}\n\n\n\nexport default diaReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport homeReducer from './store/reducers/homeReducer';\nimport projectsListReducer from './store/reducers/projectsListReducer';\nimport recognitionReducer from './store/reducers/toolsReducers/recognitionReducer';\nimport segmentationReducer from './store/reducers/toolsReducers/segmentationReducer';\nimport previewReducer from './store/reducers/toolsReducers/previewReducer';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport { RingLoader } from \"react-spinners\";\nimport { css } from \"@emotion/core\";\nimport 'react-notifications/lib/notifications.css';\nimport chalk from 'chalk';\nimport dotenvFlow from 'dotenv-flow';\n\n// to jest stara wersja repo\n//import repoReducer from './store/reducers/repoReducer';\n\nimport repoReducer from './store/reducers/repoPanelReducer';\n\nimport thunk from 'redux-thunk';\nimport axios from 'axios';\nimport projectReducer from './store/reducers/projectReducer';\nimport vadReducer from './store/reducers/toolsReducers/vadReducer';\nimport diaReducer from './store/reducers/toolsReducers/diaReducer';\n\ndotenvFlow.config();\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nif (process.env.NODE_ENV == 'development') {\n    console.log(chalk.green(\"APP IN DEVELOPMENT MODE\"));\n    axios.defaults.baseURL = process.env.REACT_APP_API_URL;\n} else if (process.env.NODE_ENV == 'production') {\n    console.log(chalk.green(\"APP IN PRODUCTION MODE\"))\n    console.log = () => {};\n    axios.defaults.baseURL = window.axiosBaseURL;\n} else if (process.env.NODE_ENV == 'test') {\n    console.log(chalk.green(\"APP IN TEST MODE\"))\n} else {\n    console.log(chalk.red(\"BRAK TRYBU URUCHOMIENIA APP\"))\n}\n\n\n//console.log(process.env.NODE_ENV)\n//console.log(axios.defaults.baseURL)\n\n\naxios.defaults.timeout = 720000000;//200min\n\n// global error handling\n\naxios.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    \n    return response;\n  }, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    \n    if(error.response){\n        const statusCode = error.response.status;\n        const statusText = error.response.statusText;\n        const errorData = error.response.data;\n\n        if(statusCode >=500){\n            createNotification(\"error\",errorData.message)\n        } else if(statusCode >=300){\n            createNotification(\"warning\",errorData.message)\n        }\n    } else if (error.request) {\n        createNotification(\"error\",\"Coś poszło nie tak na serwerze!\")\n    }\n    \n    return Promise.reject(error);\n  });\n\n\n\nconst rootReducer = combineReducers({\n    homeR: homeReducer,\n    projectR: projectReducer,\n    prolistR: projectsListReducer,\n    recR: recognitionReducer,\n    segR: segmentationReducer,\n    vadR: vadReducer,\n    diaR: diaReducer,\n    repoR: repoReducer,\n    previewR: previewReducer,\n});\n\n\nfunction createNotification (type, value) {\n    switch (type) {\n        case 'info':\n            NotificationManager.info(value,'', 5000);\n            break;\n        case 'success':\n            NotificationManager.success(value, '', 5000);\n            break;\n        case 'warning':\n            NotificationManager.warning(value, '', 5000);\n            break;\n        case 'error':\n            NotificationManager.error(value, '', 5000);\n            break;\n        default: break;\n    }\n};\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n`;\n\n\nconst loader = () => {\n  \n    return (\n        <div id=\"superloader\" style={{ position: 'fixed', width: '100%', height: '100%', top: 0, left: 0, right: 0, bottom: 0, backgroundColor: 'rgba(255,255,255,0.5)', zIndex: 99999999, cursor:'pointer' }} >\n            <div style={{ position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\" }}>\n                <RingLoader\n                    css={override}\n                    size={150}\n                    color={\"rgb(84, 108, 120)\"}\n                    loading={true}\n                />\n            </div>\n        </div>\n    );\n}\n\n\n// dla asynchronicznych zadan\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n  \n    <Provider store={store}>\n        <NotificationContainer/>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\nexport { createNotification, loader };","module.exports = __webpack_public_path__ + \"static/media/logo-clarin-pl-short.0ea93d1c.png\";"],"sourceRoot":""}