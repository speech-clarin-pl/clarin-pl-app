{"version":3,"sources":["images/logo-clarin-pl.png","images/logo-clarin-pl-short.png","hoc/Auxiliary.js","containers/HomePage/Jumbotron/Jumbotron.js","components/UI/Input/Input.js","store/actions/repo.js","store/actions/actionsTypes.js","store/actions/home.js","store/actions/toolActions/recognition.js","containers/HomePage/LoginArea/LoginArea.js","containers/HomePage/DecoIntro/DecoIntro.js","containers/HomePage/HomeText/HomeText.js","components/AppFooter/AppFooter.js","components/TopBar/TopBar.js","containers/HomePage/HomePage.js","containers/ProjectPage/SettingBar/SettingBar.js","containers/ProjectPage/FooterTool/FooterTool.js","containers/ProjectPage/LeftSiteBar/LeftSiteBar.js","containers/ProjectPage/Dashboard/Dashboard.js","containers/ProjectPage/RecognitionTool/RecognitionItem/RecognitionItem.js","components/UI/DropFilesArea/DropFilesArea.js","components/UI/ButtonLeftBar/ButtonLeftBar.js","components/UI/DragAndDrop/DragAndDrop.js","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","containers/ProjectPage/RecognitionTool/RecognitionTool.js","store/actions/project.js","containers/ProjectPage/SegmentTool/SegmentItem/SegmentItem.js","store/actions/toolActions/segmentation.js","containers/ProjectPage/SegmentTool/SortableAudioList/SortableAudioList.js","containers/ProjectPage/SegmentTool/SortableTxtList/SortableTxtList.js","containers/ProjectPage/SegmentTool/SegmentTool.js","containers/ProjectPage/PreviewTool/TranscriptTool.js","store/actions/toolActions/preview.js","containers/ProjectPage/RepoBar/RepoBar.js","components/ErrorPage/ErrorPage.js","containers/ProjectPage/TabContainer/Tab/Tab.js","containers/ProjectPage/ProjectPage.js","containers/ProjectsListPage/ProjectListItem/ProjectListItem.js","containers/ProjectsListPage/ProjectsList/ProjectList.js","components/UI/Spinner/Spinner.js","components/UI/SingleInputForm/SingleInputForm.js","components/UI/ConfirmationForm/ConfirmationForm.js","containers/ProjectsListPage/ProjectsListPage.js","store/actions/projectsList.js","components/HelpPage/HelpPage.js","App.js","serviceWorker.js","store/utility.js","store/reducers/homeReducer.js","store/reducers/projectsListReducer.js","store/reducers/toolsReducers/recognitionReducer.js","store/reducers/toolsReducers/segmentationReducer.js","store/reducers/toolsReducers/previewReducer.js","store/reducers/repoReducer.js","store/reducers/projectReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","auxiliary","props","children","jumbotron","react_default","a","createElement","Auxiliary","className","join","index_es","id","defaultMessage","input","inputElement","validationError","inputClasses","invalid","touched","push","inputtype","Object","assign","onChange","whenchanged","label","getProjectFilesForUser","userId","projectId","token","dispatch","console","log","axios","get","headers","Authorization","params","then","response","type","files","data","catch","error","getProjectFilesForUserActionFailed","handleRenameFolderActionFailed","toString","loginUserAction","isAuth","authLoading","userName","logout","setLoggedIn","loginUser","userEmail","userPass","post","email","password","status","Error","localStorage","setItem","aftermilliseconds","expiryDate","Date","getTime","toISOString","autoLogoutAfter","loginUserActionFailed","updateFileState","fileID","percLoaded","initFileRecognition","file","entryId","FormData","append","content-type","message","sentEntryId","finishFileRecognitionAction","finishFileRecognitionActionFailed","LoginArea","state","loginform","loginemail","elementType","elementConfig","placeholder","value","validation","required","minLength","valid","loginpass","registerform","registerName","registeremail","registerpass","loginFormIsValid","registerFormIsValid","firstTimeAfterLogin","loginHandler","event","preventDefault","loginData","formLoginElement","_this","onLogIn","registerHandler","registerData","formRegisterElement","onRegister","inputRegisterChangedHandler","updatedRegisterForm","objectSpread","target","name","updatedRegisterName","checkValidity","updatedRegisterEmail","updatedregisterPass","formIsValid","inputField","setState","inputLoginChangedHandler","updatedLoginForm","updatedLoginEmail","updatedLoginPass","logOutHandler","onLogOut","history","rules","isValid","trim","length","prevProps","prevState","this","_this2","registerArea","onSubmit","Input_Input","disabled","loginArea","react_router_dom","to","onClick","Component","connect","homeR","loggedEmail","pass","authActions","put","withRouter","decointro","btnclasses","hometext","appfooter","href","topBar","czyInit","version","navClassNames","wide","clickLogo","src","logoShort","logoBig","alt","projectTitle","role","aria-haspopup","aria-expanded","homePage","TopBar_TopBar","language","changeLn","currLn","Jumbotron_Jumbotron","HomePage_LoginArea_LoginArea","DecoIntro_DecoIntro","HomeText_HomeText","AppFooter_AppFooter","settingBar","footerTool","leftSiteBar","czyTopPart","data-scrollbar","desc","dashboard","LeftSiteBar_LeftSiteBar","SettingBar_SettingBar","aria-valuenow","aria-valuemin","aria-valuemax","FooterTool_FooterTool","RecognitionItem","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","reader","FileReader","foundEntry","allFiles","find","obj","fileUpload","componentWillUnmount","fileEntryId","onloadstart","evt","onprogress","lengthComputable","percentLoaded","Math","round","loaded","total","onloadend","onerror","code","NOT_FOUND_ERR","alert","NOT_READABLE_ERR","ABORT_ERR","readAsBinaryString","startFileRecognition","fileId","onFileRecognition","previewItem","toURL","match","url","replace","pathname","onOpenRecognitionAudioPreview","statusinfo","ikonki","nBytes","size","filesize","aMultiples","nMultiple","nApprox","toFixed","removeIcon","onRemoveItem","loadedperc","Fragment","onGetProjectFilesForUser","recR","filesToUpload","projectR","currentProjectOwner","currentProjectID","recognitionActions","DropFilesArea","mainTitle","multiple","whenFilesChose","buttonLeftBar","iconClasses","iconType","ifdisabled","whenClicked","style","customeStyle","napis","dragAndDropStyles","position","dropIndicationStyles","top","left","right","bottom","width","height","color","backgroundColor","border","borderRadius","display","alignItems","justifyContent","DragAndDrop","drag","dropRef","React","createRef","handleDrag","e","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","handleDragOut","handleDrop","whenDropped","clearData","div","current","addEventListener","removeEventListener","ref","backdrop","show","clicked","modal","Backdrop_Backdrop","modalClosed","transform","opacity","RecognitionTool","extFiles","Array","from","forEach","newFile","uuid","v4","onDrop","inputControl","currentTarget","fileList","i","openModalHandler","onOpenModalHandler","closeModalHandler","onCloseModalHandler","startBatchRecognition","audioFilesArray","map","entry","audioFilesIds","onStartBatchRecognition","filelist","marginTop","RecognitionTool_RecognitionItem_RecognitionItem","key","Modal_Modal","modalDisplay","title","UI_DragAndDrop_DragAndDrop","UI_DropFilesArea_DropFilesArea","SegmentItem","removeSegmentItem","onRemoveSegmentItem","startSegmentation","currentEntry","segmentEntry","audioFile","audioEntry","txtFile","txtEntry","onInitSegmentProcess","onStartSegmentItem","refreshRepo","onRefreshRepo","statusIcon","starterIcon","processingStatus","segR","segmentId","finishFileSegmentationSuccess","finishFileSegmentationFailed","segmentActions","sortableAudioList","_ref","listItems","val","data-id","lib_default","options","handle","animation","c","sortable","tag","order","sortableTxtList","SegmentTool","handleDropAudio","audiofiles","extAudioFiles","onAudioDrop","whenAudioFilesChose","handleDropTxt","txtfiles","extTxtFiles","onTxtDrop","whenTxtFilesChose","entrylist","SegmentTool_SegmentItem_SegmentItem","SortableAudioList_SortableAudioList","audioList","onChangeAudioListOrder","SortableTxtList_SortableTxtList","txtList","onChangeTxtListOrder","audioFiles","txtFiles","idsOrder","audioIdsOrder","txtIdsOrder","TranscriptTool","handleTogglePlay","playing","wavesurfer","pause","play","onTooglePlaying","handlePosChange","pos","originalArgs","componentDidMount","WaveSurfer","create","container","waveColor","progressColor","responsive","plugins","on","bind","assertThisInitialized","updateAudioArea","onWeveSurferLoaded","stop","onUpdateAudioArea","fileKey","getExt","path","split","slice","txtAreaChangedHandler","onUpdateTxtArea","loadAudioFileForPreview","audioUrl","waveSurferLoaded","testowy","load","_React$createElement","txtfileName","txtDisplayed","fetch","txtFileUrl","r","text","audiofileName","audioDisplayed","audioFileUrl","headerTxtField","fontWeight","fontSize","headerAudioField","controlBtns","defineProperty","txtContent","previewR","newValue","newContent","fileName","previewActions","ifyes","ifYes","repoBar","openPreview","handleCreateFolder","onHandleCreateFolder","handleCreateFiles","prefix","onHandleCreateFiles","handleRenameFolder","oldKey","newKey","onHandleRenameFolder","handleRenameFile","onHandleRenameFile","handleDeleteFolder","folderKey","onHandleDeleteFolder","handleDeleteFile","onHandleDeleteFile","handleSelect","handleSelectFile","handleSelectFolder","folder","handlePreviewOpen","location","includes","onOpenFilePreview","handlePreviewClose","handleFolderOpen","handleFolderClose","startResizeRepo","window","Resize","stopResize","document","getElementById","projectPage","szerRepo","innerWidth","clientX","szerProject","offsetWidth","mount","querySelectorAll","onMouseDown","class","react_keyed_file_browser_default","icons","File","Image","PDF","Rename","Folder","FolderOpen","Delete","Loading","onCreateFolder","onCreateFiles","onMoveFolder","onMoveFile","onRenameFolder","onRenameFile","onDeleteFolder","onDeleteFile","onSelect","onSelectFile","onSelectFolder","onPreviewOpen","onPreviewClose","onFolderOpen","onFolderClose","currentProjectName","repoR","handleCreateFolderActionFailed","repoActions","handleCreateFilesAction","delete","handleDeleteFolderActionFailed","handleDeleteFileActionFailed","fileUrl","errorPage","whereToLink","search","activeClassName","ProjectPage","getItem","onSetLoggedIn","projectID","projectOwnerId","projectOwner","onInitProjectHandler","onClearRecoStore","onClearSegmentStore","onClearPreviewStore","Tab_Tab","react_router","component","render","Dashboard_Dashboard","ErrorPage","RepoBar_RepoBar","projectActions","projectListItem","encodeURIComponent","projektID","owner","modified","editName","deleteProject","projectsList","ifLoading","listHeader","siteBar","spinner","SingleInputForm","errorMessage","onSubmitHandler","textAlign","onChangeHandler","buttonLabel","confirmationForm","messageQuestion","projectName","onCancel","onOk","localActions","ProjectsListPage","newProjectName","modalTitle","currentValue","onGetProjectsList","duplicateProjectHandler","projectIndex","editNameProjectHandler","shareProjectHandler","removeProjectHandler","addNewProjectHandler","onNewProject","newProjectNameChangeHandler","editProjectNameSubmitHandler","onNameEdit","onNewProjectDone","actionType","onDelete","newProjectForm","UI_SingleInputForm_SingleInputForm","editProjectName","ConfirmationForm","modalContent","localAction","ButtonLeftBar_ButtonLeftBar","toDisplay","projectList","ifError","ifProjectsLoading","Spinner_Spinner","projekt","ProjectListItem_ProjectListItem","_id","createdAt","wyborprojektu","onProjectChoice","ProjectsList_ProjectList","containers_ProjectPage_ProjectPage","prolistR","newProjectCreated","projects","projectsLoading","localActionType","projectListActions","messageFromServer","responsedNewProject","addNewProjectAction","project","addNewProjectActionFailed","idprojektu","deleteProjectAction","newName","editNameProjectAction","projectEntry","editNameProjectActionFailed","getProjectsListAction","getProjectsListFailed","helpPage","addLocaleData","concat","toConsumableArray","en","pl","messages","messages_pl","messages_en","App","navigator","currln","logoutHandler","onLogout","setAutoLogout","milliseconds","setTimeout","changeLnHandler","ln","remainingMilliseconds","chosenProjectID","locale","defaultLocale","containers_ProjectsListPage_ProjectsListPage","HelpPage","HomePage","homeActions","Boolean","hostname","updateObject","oldObject","updatedValues","initialState","registrationMessage","loginMessage","homeReducer","arguments","undefined","action","logIn","removeItem","logOut","logInFailed","registerFailed","autoLogout","chosenProjectName","chosenProjectOwner","projectsListReducer","getProjectsList","choseProject","addProjectInit","addProjectDone","newProjectsList","addProject","addProjectFailed","shareProject","index","updatedProjects","removeProject","editNameFailed","openModal","closeModal","recoFileForPreview","recognitionReducer","dropFiles","initBatchRecognition","currentfileList","updatedEntry","itemId","newFilesToUpload","filter","item","removeRecognitionItem","openAudioRecPreview","clearRecoStore","segmentationReducer","SegmentEntryList","AudioFileList","ilebrakuje","txtArray","audioentry","txtItem","audioArray","txtentry","dropAudioFiles","TxtFileList","dropTxtFiles","newAudioList","elem","changeAudioListOrder","newTxtList","changeTxtListOrder","newSegmentEntry","newEntry","initFileSegmentation","newsegmentEntry","removeSegmentEntry","clearSegmentStore","fileSegmentationSuccess","fileSegmentationFailed","previewReducer","updateTxtPreview","updateAudioPreview","fileExt","openFilePreview","togglePlayingPreview","clearPreviewStore","repoReducer","newfiles","repoCreateFolder","repoCreateFiles","newFiles","Moment","repoRenameFolder","repoRenameFile","substr","repoDeleteFolder","n","lastIndexOf","onlyFolders","substring","repoDeleteFile","repoGetUserProjectFiles","repoGetUserProjectFilesFailed","projectReducer","initProject","openModalProject","closeModalProject","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","defaults","baseURL","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","app","es","src_App_0","ReactDOM","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89af2eaa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-clarin-pl.ab822e22.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-clarin-pl-short.0ea93d1c.png\";","\nconst auxiliary = (props) => props.children;\n\nexport default auxiliary;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './Jumbotron.css';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\n\nconst jumbotron = (props) => {\n\n    let myclasses = [\"jumbotron\", \"CustomJumbo\"];\n\n    return(\n        <Aux>\n            <div className={myclasses.join(' ')}>\n                <div className=\"container\">\n                    <h1 className=\"display-4\">CLARIN-PL</h1>\n                    <p className=\"lead\">\n                        <FormattedMessage\n                                id=\"Jumbotron.lead\"\n                                defaultMessage=\"Łatwa w użyciu platfroma do analizy sygnału mowy w nagraniach dźwiękowych\"\n                                />\n                    </p>\n                    <hr className=\"my-4\" />\n                    <p>\n                         <FormattedMessage\n                                id=\"Jumbotron.sublead\"\n                                defaultMessage=\"Znajdziesz tutaj narzędzia do rozpoznawania mowy, transkrypcji, segmentacji, analizy itp.\"\n                                />\n                    </p>\n                    <p></p>\n                {\n                    // <Link to=\"/projectsList\">\n                    //       <button className=\"btn btn-primary btn-lg btn-block gotoprojects\">\n                    //           Przejdz do listy projektow\n                    //        </button>\n                    // </Link>\n                }\n\n                    {\n                    /*\n                    <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\">\n                        \n                        <FormattedMessage\n                                id=\"Jumbotron.register\"\n                                defaultMessage=\"Zarejestruj się\"\n                                />\n\n                    </a>\n                    */\n                    }\n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default jumbotron;","import React from 'react';\nimport './Input.css';\n\nconst input = (props) => {\n\n    let inputElement = null;\n    let validationError = null;\n\n    const inputClasses = ['Input', 'form-control'];\n\n    if(props.invalid && props.touched){\n        inputClasses.push('is-invalid');\n        validationError = <p>Wprowadź poprawdną wartość!</p>;\n    }\n\n    switch(props.inputtype) {\n        case('input'):\n            inputElement = <input \n                onChange={props.whenchanged}\n                className={inputClasses.join(' ')} {...props}/>;\n            break;\n        case('textarea'):\n            inputElement = <textarea \n                onChange={props.whenchanged}\n                className={inputClasses.join(' ')}\n                 {...props}/>\n            break;\n        default:\n            inputElement = <input \n                onChange={props.whenchanged}\n                className={inputClasses.join(' ')} {...props}/>\n    }\n\n    return (\n        <div className=\"Input\">\n            <label>{props.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    )\n};\n\nexport default input;","import * as actionTypes from './actionsTypes';\nimport axios from 'axios';\n\n//#################################################################\n//############## get user project files ######################\n//####################################################\n\nexport const getProjectFilesForUserAction = (userId, files) => {\n    return {\n        type: actionTypes.REPO_GET_USER_PROJECT_FILES,\n        files: files,\n    }\n}\n\nexport const getProjectFilesForUserActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_GET_USER_PROJECT_FILES_FAILED,\n        error: error,\n    }\n}\n\n// pobieram liste plikow w katalogu uzytkownika dla danego projektu\nexport const getProjectFilesForUser = (userId, projectId, token) => {\n    //console.log(userId)\n    //console.log(projectId)\n    return dispatch => {\n        console.log('getProjectFilesForUser');\n        // {\n        //     userId: userId,\n        //     projectId: projectId,\n        // },\n        axios.get(('/repoFiles/' + userId), {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n            params: {\n                projectId: projectId\n            }\n        })\n            .then(response => {\n\n                console.log(response)\n                dispatch(getProjectFilesForUserAction(userId, response.data.files));\n            })\n            .catch(error => {\n                dispatch(getProjectFilesForUserActionFailed(error));\n            });\n    }\n}\n\n//###########################################\n//#######   tworzenie nowego folderu\n//#########################################\n\nexport const handleCreateFolderAction = (key, message) => {\n    return {\n        type: actionTypes.REPO_CREATE_FOLDER,\n        key: key,\n        message: message,\n    }\n}\n\nexport const handleCreateFolderActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_CREATE_FOLDER_FAILED,\n        error: error.toString(),\n    }\n}\n\nexport const handleCreateFolder = (key, projectId, userId, token) => {\n    console.log('CREATE NEW FOLDER:' + key);\n    return dispatch => {\n        axios.post(('/repoFiles/createFolder/'), {\n            key: key, //np key: \"nowyfolder/\" lub \"nowyfolder/innypodfolder/\"\n            projectId: projectId,\n            userId: userId,\n        }, {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n            .then(response => {\n                console.log(response)\n                dispatch(handleCreateFolderAction(response.data.key, response.data.message));\n            })\n            .catch(error => {\n                dispatch(handleCreateFolderActionFailed(error));\n            });\n    }\n}\n\n//############################################\n//#########tworzenie nowych plikow\n//  TO DO: poki co nie ma mozliwosci wgrania plikow osobno do repo\n// tylko przez usluge\n//##############################################\n\nexport const handleCreateFilesAction = (files, prefix) => {\n    return {\n        type: actionTypes.REPO_CREATE_FILES,\n        files: files,\n        prefix: prefix,\n    }\n}\n\nexport const handleCreateFiles = (files, prefix) => {\n    console.log('CREATE NEW FILES:' + files);\n    return dispatch => {\n        dispatch(handleCreateFilesAction(files, prefix));\n    }\n}\n\n//#############################################\n//######### zmiana nazwy folderu\n//#############################################\nexport const handleRenameFolderAction = (oldKey, newKey, message) => {\n    return {\n        type: actionTypes.REPO_RENAME_FOLDER,\n        oldKey: oldKey,\n        newKey: newKey,\n        message: message,\n    }\n}\n\nexport const handleRenameFolderActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_RENAME_FOLDER_FAILED,\n        error: error.toString()\n    }\n}\n\nexport const handleRenameFolder = (oldKey, newKey, projectId, userId, token) => {\n    console.log('RENAME FOLDER:' + oldKey + ' into ' + newKey);\n    //RENAME FOLDER:alaMaKota/ into alaMaKota222/\n    return dispatch => {\n        axios.put(('/repoFiles/renameFolder/'), {\n            oldKey: oldKey, \n            newKey: newKey,\n            userId: userId,\n            projectId: projectId,\n        }, {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n            .then(response => {\n                console.log(response)\n                dispatch(handleRenameFolderAction(response.data.oldKey, response.data.newKey, response.data.message));\n            })\n            .catch(error => {\n                dispatch(handleRenameFolderActionFailed(error));\n            });\n    }\n}\n\n//#####################################################\n//################zmiana nazwy pliku/folderu\n//################ takze przenoszenie pliku/folderu\n//#####################################################\nexport const handleRenameFileAction = (oldKey, newKey, message) => {\n    return {\n        type: actionTypes.REPO_RENAME_FILE,\n        oldKey: oldKey,\n        newKey: newKey,\n        message: message\n    }\n}\n\nexport const handleRenameFileActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_RENAME_FILE,\n        error: error.toString()\n    }\n}\n\nexport const handleRenameFile = (oldKey, newKey, projectId, userId, token) => {\n    console.log('RENAME FILE:' + oldKey + ' into ' + newKey);\n    console.log('projectId:' + projectId );\n    console.log('token:' + token );\n    return dispatch => {\n        axios.put(('/repoFiles/renameFile/'), {\n            oldKey: oldKey, \n            newKey: newKey,\n            projectId: projectId,\n            userId: userId,\n        }, {\n            headers: {\n                Authorization: 'Bearer ' + token\n            },\n        })\n            .then(response => {\n                console.log(response)\n                dispatch(handleRenameFileAction(response.data.oldKey, response.data.newKey, response.data.message));\n            })\n            .catch(error => {\n                dispatch(handleRenameFolderActionFailed(error));\n            });\n        \n    }\n}\n\n//############################################\n//########### usuwanie folderu ##############\n//##########################################\nexport const handleDeleteFolderAction = (folderKey) => {\n    return {\n        type: actionTypes.REPO_DELETE_FOLDER,\n        folderKey: folderKey,\n    }\n}\n\nexport const handleDeleteFolderActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_DELETE_FOLDER_FAILED,\n        error: error.toString(),\n    }\n}\nexport const handleDeleteFolder = (folderKey, projectId, userId,token) => {\n    console.log('DELETE FOLDER:' + folderKey);\n    return dispatch => {\n        axios.delete('/repoFiles/deleteFolder/', \n        {\n            data: { \n                folderKey: folderKey,  \n                projectId: projectId,\n                userId: userId,\n            },\n            headers: {\n               Authorization: 'Bearer ' + token\n           } \n       })\n\n           .then(response => {\n               dispatch(handleDeleteFolderAction(response.data.folderKey));\n           })\n           .catch(error => {\n               console.log(error)\n               dispatch(handleDeleteFolderActionFailed(error));\n           });\n\n      \n    }\n}\n\n//##############################################\n//############# usuwanie pliku\n//#############################################\nexport const handleDeleteFileAction = (fileKey, message) => {\n    return {\n        type: actionTypes.REPO_DELETE_FILE,\n        fileKey: fileKey,\n        message: message,\n    }\n}\n\nexport const handleDeleteFileActionFailed = (error) => {\n    return {\n        type: actionTypes.REPO_DELETE_FILE_FAILED,\n        error: error.toString(),\n    }\n}\n\nexport const handleDeleteFile = (fileKey, projectId, userId, token) => {\n    console.log('DELETE FILE:' + fileKey);\n    return dispatch => {\n            axios.delete('/repoFiles/deleteFile/' + projectId, \n            {\n                data: { \n                    fileKey: fileKey,\n                    projectId: projectId,\n                    userId: userId,\n                 },\n                headers: {\n                   Authorization: 'Bearer ' + token\n               } \n           })\n               .then(response => {\n                    dispatch(handleDeleteFileAction(response.data.fileKey, response.data.message));\n               })\n               .catch(error => {\n                   console.log(error)\n                   dispatch(handleDeleteFileActionFailed(error));\n               });\n    }\n}\n\n","\n\n\n// home page actions\nexport const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const LOG_IN_FAILED = 'LOG_IN_FAILED';\nexport const SET_AUTO_LOGOUT = 'SET_AUTO_LOGOUT';\nexport const REGISTER = 'REGISTER';\nexport const REGISTER_FAILED = 'REGISTER_FAILED';\nexport const SET_CURRENT_PROJECT_ID = 'SET_CURRENT_PROJECT_ID';\n\n// project list actions\nexport const OPEN_MODAL = 'OPEN_MODAL';\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\n\nexport const GET_PROJECTS_LIST = 'GET_PROJECTS_LIST';\nexport const GET_PROJECTS_LIST_FAILED = 'GET_PROJECTS_LIST_FAILED';\nexport const CHOSE_PROJECT = 'CHOSE_PROJECT';\n\nexport const ADD_PROJECT = 'ADD_PROJECT';\nexport const ADD_PROJECT_FAILED = 'ADD_PROJECT_FAILED';\nexport const ADD_PROJECT_INIT = 'ADD_PROJECT_INIT';\nexport const ADD_PROJECT_DONE = 'ADD_PROJECT_DONE';\n\nexport const DUPLICATE_PROJECT = 'DUPLICATE_PROJECT';\nexport const SHARE_PROJECT = 'SHARE_PROJECT';\nexport const REMOVE_PROJECT = 'REMOVE_PROJECT';\nexport const EDIT_NAME = 'EDIT_NAME';\nexport const EDIT_NAME_FAILED = 'EDIT_NAME_FAILED';\n\n//project page\nexport const INIT_PROJECT = 'INIT_PROJECT';\nexport const OPEN_MODAL_PROJECT = 'OPEN_MODAL_PROJECT';\nexport const CLOSE_MODAL_PROJECT = 'CLOSE_MODAL_PROJECT';\nexport const CLEAR_RECO_STORE = 'CLEAR_RECO_STORE';\nexport const CLEAR_SEGMENT_STORE = 'CLEAR_SEGMENT_STORE';\nexport const CLEAR_PREVIEW_STORE = 'CLEAR_PREVIEW_STORE';\n\n// recognition tab\nexport const INIT_BATCH_RECOGNITION = 'INIT_BATCH_RECOGNITION';\nexport const INIT_FILE_RECOGNITION = 'INIT_BATCH_RECOGNITION';\nexport const DROP_FILES = 'DROP_FILES';\nexport const UPDATE_FILE_STATE = 'UPDATE_FILE_STATE';\nexport const OPEN_AUDIO_RECOGNITION_PREVIEW = 'OPEN_AUDIO_RECOGNITION_PREVIEW';\nexport const REMOVE_RECOGNITION_ITEM = 'REMOVE_RECOGNITION_ITEM';\n\n// segmentation tab\n//export const INIT_BATCH_SEGMENTATION = 'INIT_BATCH_SEGMENTATION';\nexport const INIT_FILE_SEGMENTATION = 'INIT_FILE_SEGMENTATION';\nexport const DROP_AUDIO_FILES = 'DROP_AUDIO_FILES';\nexport const DROP_TXT_FILES = 'DROP_TXT_FILES';\nexport const CHANGE_AUDIO_LIST_ORDER = 'CHANGE_AUDIO_LIST_ORDER';\nexport const CHANGE_TXT_LIST_ORDER = 'CHANGE_TXT_LIST_ORDER';\nexport const REMOVE_SEGMENT_ENTRY = 'REMOVE_SEGMENT_ENTRY';\nexport const FILE_SEGMENTATION_SUCCESS = 'FILE_SEGMENTATION_SUCCESS';\nexport const FILE_SEGMENTATION_FAILED = 'FILE_SEGMENTATION_FAILED';\n\n// repo\nexport const REPO_UPLOAD_FILE = 'REPO_UPLOAD_FILE';\nexport const REPO_UPLOAD_FILE_FAILED = 'REPO_UPLOAD_FILE_FAILED';\nexport const REPO_CREATE_FOLDER = 'REPO_CREATE_FOLDER';\nexport const REPO_CREATE_FOLDER_FAILED = 'REPO_CREATE_FOLDER_FAILED';\nexport const REPO_CREATE_FILES = 'REPO_CREATE_FILES';\nexport const REPO_CREATE_FILES_FAILED = 'REPO_CREATE_FILES_FAILED';\nexport const REPO_RENAME_FOLDER = 'REPO_RENAME_FOLDER';\nexport const REPO_RENAME_FOLDER_FAILED = 'REPO_RENAME_FOLDER_FAILED';\nexport const REPO_RENAME_FILE = 'REPO_RENAME_FILE';\nexport const REPO_RENAME_FILE_FAILED = 'REPO_RENAME_FILE_FAILED';\nexport const REPO_DELETE_FOLDER = 'REPO_DELETE_FOLDER';\nexport const REPO_DELETE_FOLDER_FAILED = 'REPO_DELETE_FOLDER_FAILED';\nexport const REPO_DELETE_FILE = 'REPO_DELETE_FILE';\nexport const REPO_DELETE_FILE_FAILED = 'REPO_DELETE_FILE_FAILED';\nexport const REPO_GET_USER_PROJECT_FILES = 'REPO_GET_USER_PROJECT_FILES';\nexport const REPO_GET_USER_PROJECT_FILES_FAILED = 'REPO_GET_USER_PROJECT_FILES_FAILED';\n\n//preview\nexport const UPDATE_TXT_PREVIEW = 'UPDATE_TXT_PREVIEW';\nexport const UPDATE_AUDIO_PREVIEW = 'UPDATE_AUDIO_PREVIEW';\nexport const OPEN_FILE_PREVIEW = 'OPEN_FILE_PREVIEW';\nexport const WAVESURFER_LOADED = 'WAVESURFER_LOADED';\nexport const TOGGLE_PLAYING_PREVIEW = 'TOGGLE_PLAYING_PREVIEW';\n","import * as actionTypes from './actionsTypes';\nimport axios from 'axios';\n\n//######################################################\n//##################### rejestracja #######################\n//#######################################################\n\nexport const registerUserActionFailed = (message) => {\n    return {\n        type: actionTypes.REGISTER_FAILED,\n        message: message,\n    }\n}\n\nexport const registerUserAction = (message, userId) => {\n    return {\n        type: actionTypes.REGISTER,\n        message: message,\n        userId: userId,\n    }\n}\nexport const registerUser = (userName, userEmail, userPass) => {\n    return dispatch => {\n        \n        axios.put('/auth/registration',{\n            name: userName,\n            email: userEmail,\n            password: userPass,\n        })\n            .then(response => {\n                console.log(response)\n                dispatch(registerUserAction(response.message, response.userId));\n            })\n            .catch(error => {\n                console.log(error)\n                dispatch(registerUserActionFailed('Niepowodzenie w rejestracji'));\n            });\n    }\n\n    \n}\n\n//######################### logowanie ################\n//########################################\n\n\nexport const loginUserAction = (isAuth, token, authLoading, userId,userName) => {\n    return {\n        type: actionTypes.LOG_IN,\n        isAuth: isAuth,\n        token: token,\n        authLoading: authLoading,\n        userId: userId,\n        userName: userName,\n\n    }\n}\n\nexport const loginUserActionFailed = (isAuth, authLoading, error) => {\n    return {\n        type: actionTypes.LOG_IN_FAILED,\n        isAuth: isAuth,\n        authLoading: authLoading,\n        error: error\n\n    }\n}\n\nexport const setAutoLogout = (aftermilliseconds) => {\n    console.log('setAutoLogout! after:' + aftermilliseconds);\n    return {\n        type: actionTypes.SET_AUTO_LOGOUT,\n        autoLogoutAfter: aftermilliseconds,\n    }\n}\n\nexport const logout = () => {\n    console.log('LOG OUT');\n    return {\n        type: actionTypes.LOG_OUT\n    }\n}\n\n// wywolywane pod odwiezeniu strony gdy token jest jeszcze w przegladarce\nexport const setLoggedIn = (userId, userName, token) => {\n    return loginUserAction(true,token,false,userId,userName)\n}\n\nexport const loginUser = (userEmail, userPass) => {\n    return dispatch => {\n        \n        axios.post('/auth/login',{\n            email: userEmail,\n            password: userPass\n        })\n            .then(response => {\n                if(response.status === 422){\n                    throw new Error('Validation failed.');\n                }\n\n                if(response.status !== 200 & response.status !== 201){\n                    console.log('Error');\n                    throw new Error('Could not authenticate')\n                }\n\n                console.log(response);\n                //ustawic state na auth false i authloading na false\n                //przekierowanie\n                dispatch(loginUserAction(true, response.data.token,false,response.data.userId,response.data.userName));\n                localStorage.setItem('token',response.data.token);\n                localStorage.setItem('userId', response.data.userId);\n                localStorage.setItem('userName', response.data.userName);\n                //gasnie za 10h\n                const remainingMilliseconds = 60 * 60 * 10000;\n                const expiryDate = new Date(\n                    new Date().getTime() + remainingMilliseconds\n                );\n                localStorage.setItem('expiryDate', expiryDate.toISOString());\n                dispatch(setAutoLogout(remainingMilliseconds));\n                //this.props.history.replace('/projectsList');\n\n            })\n            .catch(error => {\n                console.log(error)\n                dispatch(loginUserActionFailed(false,false,error));\n            });\n    }\n   \n}","import * as actionTypes from '../actionsTypes';\nimport axios from 'axios';\n\nexport const dropFiles = (files) => {\n    return {\n        type: actionTypes.DROP_FILES,\n        files: files\n    }\n}\n\n//################# removing item #################\nexport const removeRecognitionItem = (fileId) => {\n    console.log('REMOVING: ' + fileId)\n    return {\n        type: actionTypes.REMOVE_RECOGNITION_ITEM, \n        fileId: fileId, \n    }\n}\n\n//################# updating file state ###########\nexport const updateFileState = (fileID, status,percLoaded) => {\n    return {\n            type: actionTypes.UPDATE_FILE_STATE, \n            fileID: fileID, \n            status: status, \n            percLoaded:percLoaded,\n        }\n}\n\n\n//########################################\n//####### SINGLE FILE RECOGNITION ########\n//#########################################\n\nexport const finishFileRecognitionAction = (message, entryId) => {\n    return updateFileState(entryId, 'done',100);\n        \n}\n\nexport const finishFileRecognitionActionFailed = (message, entryId) => {\n    return updateFileState(entryId, 'error',0);\n}\n\nexport const initFileRecognition = (file, entryId, userId,projectId) =>{\n    return dispatch => {\n\n        const data = new FormData();\n\n        data.append('audioFiles',file);\n        data.append('audioFilesIds',entryId);\n        data.append('projectId', projectId);\n        data.append('userId', userId);\n        \n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n        \n\n        axios.post('/recognition/singleFile',data, config)\n            .then(response => {\n                const message = response.data.message;\n                const entryId = response.data.sentEntryId.sentEntryId;\n                console.log(message)\n                console.log(entryId)\n                dispatch(finishFileRecognitionAction(message, entryId));\n                console.log(response);\n            })\n            .catch(error => {\n                dispatch(finishFileRecognitionActionFailed('Recognition error', entryId));\n                console.log(error);\n            })\n    }\n}\n\n//######### opening file recognition to preview #####\nexport const openRecognitionAudioPreview = (entryId) => {\n    return {\n        type: actionTypes.OPEN_AUDIO_RECOGNITION_PREVIEW, \n        fileID: entryId, \n    }\n}\n\n\n//####### BATCH RECOGNITION ########\nexport const initBatchRecognition = (audioFilesArray, audioFilesIds) => {\n    return dispatch => {\n\n        let data = new FormData();\n        \n        for(var i = 0; i<audioFilesArray.length; i++) {\n            data.append('audioFiles', audioFilesArray[i]);\n        }\n\n        data.append('audioFilesIds',audioFilesIds);\n       \n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n        \n        \n        axios.post('/recognition/multipleFiles',data, config)\n            .then(response => {\n               \n                console.log(response);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n}\n\n\n//export const INIT_BATCH_RECOGNITION = 'INIT_BATCH_RECOGNITION';\n//export const INIT_FILE_RECOGNITION = 'INIT_BATCH_RECOGNITION';\n//export const DROP_FILES = 'DROP_FILES';\n//export const UPDATE_FILE_STATE = 'UPDATE_FILE_STATE';","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './LoginArea.css';\nimport {withRouter, Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\nimport {connect} from 'react-redux';\nimport * as actionTypes from '../../../store/actions/actionsTypes';\nimport Input from '../../../components/UI/Input/Input';\nimport * as authActions from '../../../store/actions/index';\n\n\nclass LoginArea extends Component {\n\n    state = {\n        loginform: {\n            \n            loginemail: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Podaj swój email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            loginpass: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Wpisz hasło'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            },\n        },\n        registerform: {\n            registerName: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Podaj swoje imie'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 2\n                },\n                valid: false,\n                touched: false\n            },\n            registeremail: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Podaj swój email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5\n                },\n                valid: false,\n                touched: false\n            },\n            registerpass: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'Wpisz hasło'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            },\n        },\n        loginFormIsValid:false,\n        registerFormIsValid: false,\n        firstTimeAfterLogin: false,\n    }\n\n    \n\n    //simple validator....\n    checkValidity(value, rules){\n        let isValid = true;\n\n       \n        if(rules.required){\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if(rules.minLength){\n            isValid = value.length >= rules.minLength  && isValid;\n        }\n\n        return isValid;\n\n    }\n\n    loginHandler = (event) => {\n        event.preventDefault();\n\n        //I am transforming the state to more compact form\n        let loginData = {};\n        for (let formLoginElement in this.state.loginform) {\n            loginData[formLoginElement] = this.state.loginform[formLoginElement].value;\n        }\n\n        //console.log(loginData);\n\n        this.props.onLogIn(loginData.loginemail, loginData.loginpass);\n\n\n        //console.log(this.props)\n        \n    }\n\n    registerHandler = (event) => {\n\n        event.preventDefault();\n\n        //I am transforming the state to more compact form\n        let registerData = {};\n        for (let formRegisterElement in this.state.registerform) {\n            registerData[formRegisterElement] = this.state.registerform[formRegisterElement].value;\n        }\n\n        //console.log(registerData);\n        \n        this.props.onRegister(registerData.registerName, registerData.registeremail, registerData.registerpass);\n        \n    }\n\n\n    //updated at every input in register form\n    inputRegisterChangedHandler = (event) => {\n\n        const updatedRegisterForm = {\n            ...this.state.registerform\n        }\n\n        switch(event.target.name){\n            case 'registerName':\n                //immutable update\n                const updatedRegisterName = {\n                    ...updatedRegisterForm.registerName\n                }\n                updatedRegisterName.value = event.target.value;\n                updatedRegisterName.valid = this.checkValidity(updatedRegisterName.value, updatedRegisterName.validation);\n                updatedRegisterName.touched = true;\n                //assembling back after update\n                updatedRegisterForm.registerName = updatedRegisterName;\n\n                break;\n            case 'registerEmail':\n                //immutable update\n                const updatedRegisterEmail = {\n                    ...updatedRegisterForm.registeremail\n                }\n                updatedRegisterEmail.value = event.target.value;\n                updatedRegisterEmail.valid = this.checkValidity(updatedRegisterEmail.value, updatedRegisterEmail.validation);\n                updatedRegisterEmail.touched = true;\n                //assembling back after update\n                updatedRegisterForm.registeremail = updatedRegisterEmail;\n\n                break;\n            case 'registerPass':\n\n                const updatedregisterPass = {\n                    ...updatedRegisterForm.registerpass\n                }\n                updatedregisterPass.value = event.target.value;\n                updatedregisterPass.valid = this.checkValidity(updatedregisterPass.value, updatedregisterPass.validation);\n                updatedregisterPass.touched = true;\n                updatedRegisterForm.registerpass = updatedregisterPass;\n                break;\n        }\n\n        //sprawdzam czy cały formularz jest poprawny\n        let formIsValid = true;\n        for (let inputField in updatedRegisterForm){\n            formIsValid = updatedRegisterForm[inputField].valid && formIsValid;\n        }\n    \n        this.setState({registerform: updatedRegisterForm, registerFormIsValid: formIsValid});\n    }\n\n\n    //updated at every input in login form\n    inputLoginChangedHandler = (event) => {\n\n        const updatedLoginForm = {\n            ...this.state.loginform\n        }\n\n        switch(event.target.name){\n            case 'loginEmail':\n\n               //immutable update\n                const updatedLoginEmail = {\n                    ...updatedLoginForm.loginemail\n                }\n                updatedLoginEmail.value = event.target.value;\n                updatedLoginEmail.valid = this.checkValidity(updatedLoginEmail.value, updatedLoginEmail.validation);\n                updatedLoginEmail.touched = true;\n                //assembling back after update\n                updatedLoginForm.loginemail = updatedLoginEmail;\n                break;\n            case 'loginPass':\n\n                const updatedLoginPass = {\n                    ...updatedLoginForm.loginpass\n                }\n                updatedLoginPass.value = event.target.value;\n                updatedLoginPass.valid = this.checkValidity(updatedLoginPass.value, updatedLoginPass.validation);\n                updatedLoginPass.touched = true;\n                //assembling back after update\n                updatedLoginForm.loginpass = updatedLoginPass;\n                break;\n        }\n\n        //sprawdzam czy cały formularz jest poprawny\n        let formIsValid = true;\n        for (let inputField in updatedLoginForm){\n            formIsValid = updatedLoginForm[inputField].valid && formIsValid;\n        }\n\n\n        console.log(formIsValid)\n\n        this.setState({loginform: updatedLoginForm, loginFormIsValid: formIsValid});\n    }\n\n\n    componentDidUpdate(prevProps, prevState) {\n\n        //sprawdzam czy jestesmy zalogowaniu poraz pierwszy\n        //jezeli tak to przechodzimy do listy projektow\n        if (this.props.isAuth !== prevProps.isAuth) {\n            //this.props.history.push(\"/projectsList\");\n        }\n      }\n\n      logOutHandler = () => {\n        this.props.onLogOut();\n        this.props.history.push(\"/\");\n      }\n\n    \n    render() {\n        \n        //console.log(this.state.registerform)\n       \n        let myclasses = [\"container-fluid\", \"LoginArea\"];\n\n        let messageForLogin = '';\n        if(this.props.isAuth==false){\n            messageForLogin = 'Zaloguj się';\n        } else {\n            messageForLogin = 'Jesteś zalogowany jako:';\n\n        }\n\n        const registerArea = (\n            <div className=\"col\">\n                                \n                            <h3>Zarejestruj się</h3>\n                            <form onSubmit={this.registerHandler}>  \n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"text\"\n                                        label=\"Imie\"\n                                        placeholder=\"Podaj swoje imie\"\n                                        name=\"registerName\"\n                                        touched = {this.state.registerform.registerName.touched}\n                                        invalid={!this.state.registerform.registerName.valid}\n                                        whenchanged={(event) => this.inputRegisterChangedHandler(event)}/>\n                                </div> \n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"text\"\n                                        label=\"Adres Email\"\n                                        placeholder=\"Podaj adres email\"\n                                        name=\"registerEmail\"\n                                        touched = {this.state.registerform.registeremail.touched}\n                                        invalid={!this.state.registerform.registeremail.valid}\n                                        whenchanged={(event) => this.inputRegisterChangedHandler(event)}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"password\"\n                                        label=\"Hasło\"\n                                        placeholder=\"Podaj hasło\"\n                                        name=\"registerPass\"\n                                        touched = {this.state.registerform.registerpass.touched}\n                                        invalid={!this.state.registerform.registerpass.valid}\n                                        whenchanged={(event) => this.inputRegisterChangedHandler(event)}/>\n                                </div>\n                                \n                                <button disabled={!this.state.registerFormIsValid} className=\"btn btn-primary\">\n                                    Zarejestruj się\n                                </button>\n                            </form>\n                               \n                        </div>\n        );\n\n        const loginArea = (\n            <div className=\"col\">\n                            \n\n                            {\n                                !this.props.isAuth? \n\n                            \n                            <form onSubmit={this.loginHandler}> \n                                <h3>Zaloguj się</h3>\n                                \n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"text\"\n                                        label=\"Adres Email\"\n                                        placeholder=\"Wpisz adres email\"\n                                        name=\"loginEmail\"\n                                        touched = {this.state.loginform.loginemail.touched}\n                                        invalid={!this.state.loginform.loginemail.valid}\n                                        whenchanged={(event) => this.inputLoginChangedHandler(event)}/>\n                                    \n                                </div>\n                                <div className=\"form-group\">\n                                    <Input \n                                        inputtype=\"input\" \n                                        type=\"password\"\n                                        label=\"Hasło\"\n                                        placeholder=\"Podaj hasło\"\n                                        name=\"loginPass\"\n                                        touched = {this.state.loginform.loginpass.touched}\n                                        invalid={!this.state.loginform.loginpass.valid}\n                                        whenchanged={(event) => this.inputLoginChangedHandler(event)}/>\n                                </div>\n                            \n                              \n                                    <button disabled={!this.state.loginFormIsValid} className=\"btn btn-primary\" >\n\n                                        Zaloguj się\n                                       \n                                    </button>\n                            </form>   \n                            \n                            : \n                            \n                            <div>\n\n                                <h4>Witaj: <span className=\"loggedAs\">{this.props.userName}</span></h4>\n\n                                <Link to=\"/projectsList\">\n                                    <button className=\"btn btn-primary btn-lg btn-block gotoprojects\">\n                                        Przejdź do listy projektów\n                                    </button>\n                                </Link>\n\n                                <div> lub </div>\n\n                                <button \n                                    className=\"btn btn-secondary\"\n                                    onClick={this.logOutHandler}>\n\n                                    Wyloguj się\n                                \n                                </button>\n\n                            </div>\n\n                            }\n                                \n                        </div>\n        );\n     \n        return(\n            <Aux>\n                <div className={myclasses.join(' ')}>\n                    <div className=\"container\">\n                        <div className=\"row\">\n\n                            {this.props.isAuth? loginArea : [registerArea, loginArea]}\n                                                \n                        </div>\n                    </div>\n                </div>\n            </Aux>\n        );\n    }\n   \n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.homeR.isAuth,\n        loggedEmail: state.homeR.email,\n        userName: state.homeR.userName\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        //onLogIn: (login, pass) => dispatch({type:actionTypes.LOG_IN, login: login, pass: pass}),\n        onLogIn: (email, pass) => dispatch(authActions.loginUser(email, pass)),\n        onRegister: (userName, userEmail, userPass) => dispatch(authActions.registerUser(userName, userEmail, userPass)),\n        onLogOut: () => dispatch(authActions.logout())\n   \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(LoginArea));","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './DecoIntro.css';\n\nconst decointro = (props) => {\n\n    let myclasses = [\"container-fluid\", \"DecoIntro\"];\n\n    let btnclasses = [\"btn\", \"btn-secondary\",  \"btn-lg btn-block\", \"introButton\"];\n\n    return(\n        <Aux>\n            <div className=\"container-fluid\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <button type=\"button\" \n                                    className={btnclasses.join(' ')}>\n                                    Narzędzia do rozpoznawania mowy\n                            </button>\n                            <button type=\"button\" \n                                    className={btnclasses.join(' ')}>\n                                    Przetwarzanie dużej ilości plików\n                            </button>\n                        </div>\n                        <div className=\"col\">\n                            <button type=\"button\" \n                                    className={btnclasses.join(' ')}>\n                                    Bezpieczeństwo danych\n                            </button>\n                            <button type=\"button\" \n                                    className={btnclasses.join(' ')}>\n                                    Łatwość obsługi\n                            </button>\n                        </div>\n                    </div>\n                </div> \n            </div>\n            <div className={myclasses.join(' ')}>\n                <div className=\"container\">\n                    \n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default decointro;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './HomeText.css';\n\nconst hometext = (props) => {\n\n    let myclasses = [\"container\", \"HomeText\"];\n    return(\n        <Aux>\n            <div className={myclasses.join(' ')}>\n                <div className=\"row\">\n                    <dir className=\"col\">\n                        <h2>Narzędzia do rozpoznawania mowy</h2>\n                        <p>consectetur adipiscing elit. Pellentesque id eleifend magna. In ut varius tortor, quis sagittis felis. Suspendisse dapibus lorem at dui interdum, a placerat purus sodales. Vestibulum mattis mauris rhoncus diam posuere iaculis. Quisque ultricies, purus ac imperdiet elementum, massa lacus rhoncus magna, non molestie urna risus sed risus. Nunc euismod augue ligula, id suscipit odio vestibulum id. Donec malesuada odio at lacus ullamcorper fringilla. Mauris auctor commodo mattis. Nullam rutrum sodales arcu. Phasellus euismod tellus id leo imperdiet, id vehicula justo blandit. Interdum et malesuada fames ac ante ipsum primis in faucibus.</p>\n\n                        <h2>Przetwarzanie dużej ilości plików</h2>\n                        <p>consectetur adipiscing elit. Pellentesque id eleifend magna. In ut varius tortor, quis sagittis felis. Suspendisse dapibus lorem at dui interdum, a placerat purus sodales. Vestibulum mattis mauris rhoncus diam posuere iaculis. Quisque ultricies, purus ac imperdiet elementum, massa lacus rhoncus magna, non molestie urna risus sed risus. Nunc euismod augue ligula, id suscipit odio vestibulum id. Donec malesuada odio at lacus ullamcorper fringilla. Mauris auctor commodo mattis. Nullam rutrum sodales arcu. Phasellus euismod tellus id leo imperdiet, id vehicula justo blandit. Interdum et malesuada fames ac ante ipsum primis in faucibus.</p>\n                    </dir>\n                    <dir className=\"col\">\n                        <h2>Bezpieczeństwo danych</h2>\n                        <p>consectetur adipiscing elit. Pellentesque id eleifend magna. In ut varius tortor, quis sagittis felis. Suspendisse dapibus lorem at dui interdum, a placerat purus sodales. Vestibulum mattis mauris rhoncus diam posuere iaculis. Quisque ultricies, purus ac imperdiet elementum, massa lacus rhoncus magna, non molestie urna risus sed risus. Nunc euismod augue ligula, id suscipit odio vestibulum id. Donec malesuada odio at lacus ullamcorper fringilla. Mauris auctor commodo mattis. Nullam rutrum sodales arcu. Phasellus euismod tellus id leo imperdiet, id vehicula justo blandit. Interdum et malesuada fames ac ante ipsum primis in faucibus.</p>\n                        \n                        <h2>Łatwość obsługi</h2>\n                        <p>consectetur adipiscing elit. Pellentesque id eleifend magna. In ut varius tortor, quis sagittis felis. Suspendisse dapibus lorem at dui interdum, a placerat purus sodales. Vestibulum mattis mauris rhoncus diam posuere iaculis. Quisque ultricies, purus ac imperdiet elementum, massa lacus rhoncus magna, non molestie urna risus sed risus. Nunc euismod augue ligula, id suscipit odio vestibulum id. Donec malesuada odio at lacus ullamcorper fringilla. Mauris auctor commodo mattis. Nullam rutrum sodales arcu. Phasellus euismod tellus id leo imperdiet, id vehicula justo blandit. Interdum et malesuada fames ac ante ipsum primis in faucibus.</p>\n                    </dir>\n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default hometext;","import React from 'react';\nimport Aux from '../../hoc/Auxiliary';\nimport './AppFooter.css';\nimport {FormattedMessage} from 'react-intl';\n\nconst appfooter = (props) => {\n\n    let myclasses = [\"text-muted\", \"container-fluid\", \"AppFooter\"];\n    return(\n        <Aux>\n            <footer className={myclasses.join(' ')}>\n                <div className=\"container\">\n                    <p className=\"float-right\">\n                        <a href=\"#\">\n                            <FormattedMessage\n                                id=\"AppFooter.gobackup\"\n                                defaultMessage=\"Wróć na górę\"\n                                />\n                        </a>\n                    </p>\n                    <p>CLARIN-PL 2019</p>\n                </div>\n            </footer>\n        </Aux>\n    );\n}\n\nexport default appfooter;","import React from 'react';\nimport  './TopBar.css';\nimport logoBig from '../../images/logo-clarin-pl.png';\nimport logoShort from '../../images/logo-clarin-pl-short.png';\nimport {Link} from 'react-router-dom';\nimport {FormattedMessage} from 'react-intl';\n\nconst topBar = (props) => {\n\n    //czy poczatkowa wersja topbara czy rozbudowana....\n    let czyInit = props.version === \"init\" ? true : false;\n\n    //definicja klas na topbar\n    let navClassNames = [\"TopBar\", \"navbar\", \"navbar-expand\"];\n    if(czyInit) navClassNames.push(\"init\");\n\n\n\n    return(\n        \n       \n\t\t<nav className={navClassNames.join(' ')}>\n\t\t \t\n             {\n                 //czy szeroki topBar czy nie\n             }\n            <div className={props.wide===\"no\" ? \"container\": \"container-fluid\"}>\n\n             {\n                 //kliknięcie w logo\n             }\n             <Link to=\"/\" className=\"navbar-brand\" onClick={props.clickLogo}>\n                <div className=\"logoPlace\">\n                    <img src={czyInit ? logoShort : logoBig} alt=\"clarin-logo\" className=\"logo\"/>\n                </div>\n             </Link>\n\n            \n             {\n                 //czy wyświetlać info o projekcie\n             }\n             <div className=\"projectTitleEdit\">\n             { czyInit ? null : (\n                <div>\n                    <Link to=\"/projectsList\">\n                        <i className={[\"fas\",  \"fa-arrow-left\"].join(' ')}></i>\n                    </Link>\n                        <span className=\"editField\">{props.projectTitle}</span>\n                        {\n                            /*\n                                <a href=\"#\"><i className={[\"fas\", \"fa-edit\"].join(' ')}></i></a>\n                            */\n                        }\n                   \n                </div>\n                ) }\n\t\t\t</div>\n            \n             \n\n\n            <ul className=\"navbar-nav\">\n\n          \n                { \n                  /*\n                \n                <li className={[\"nav-item\", \"dropdown\"].join(' ')}>\n                <a  className={[\"nav-link\", \"dropdown-toggle\", \"navLink\"].join(' ')} \n                    href=\"#\" \n                    id=\"navbarDropdownMenuLinkjezyk\" \n                    role=\"button\" \n                    data-toggle=\"dropdown\" \n                    aria-haspopup=\"true\" \n                    aria-expanded=\"false\">\n                    <i className={[\"fas\", \"fa-globe-europe\"].join(' ')}></i> {props.currLn}\n                </a>\n                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLinkjezyk\">\n                    <a className=\"dropdown-item\" onClick={()=> props.changeLn(\"pl\")}>PL</a>\n                    <a className=\"dropdown-item\" onClick={() => props.changeLn(\"en\")}>EN</a>\n                </div>\n                </li>\n                    */\n                }\n\n                { \n                    // pomoc \n                }\n\n                <li className=\"nav-item\">\n                    <Link to=\"/help\" className={[\"nav-link\", \"navLink\"].join(' ')}\n                         \n                        id=\"navbarDropdownMenuLinkpomoc\" \n                        role=\"button\" \n                        aria-haspopup=\"true\" \n                        aria-expanded=\"false\">\n                            \n                        <i className=\"fas fa-question-circle\"></i> \n\n                            Pomoc\n                        \n                        </Link>\n                </li>\n\n             \n                { \n                    // konto \n               \n\n                /*\n\n                { czyInit ? null : (\n                <li className=\"nav-item\">\n                    <a className={[\"nav-link\", \"navLink\"].join(' ')}\n                       href=\"#\" \n                       id=\"navbarDropdownMenuLinkkonto\" \n                       role=\"button\" \n                       aria-haspopup=\"true\" \n                       aria-expanded=\"false\">\n                       <i className=\"fas fa-user-circle\"></i> \n                        \n                       <FormattedMessage\n                            id=\"TopBar.konto\"\n                            defaultMessage=\" Konto\"\n                            />\n                            \n                            </a>\n                </li>\n                )}\n                        */\n\n                }\n            </ul>\n\n            </div>\n\n\t\t</nav>\n    );\n}\n\nexport default topBar;","import React from 'react';\nimport Jumbotron from './Jumbotron/Jumbotron';\nimport LoginArea from './LoginArea/LoginArea';\nimport DecoIntro from './DecoIntro/DecoIntro';\nimport HomeText from './HomeText/HomeText';\nimport AppFooter from '../../components/AppFooter/AppFooter';\nimport TopBar from '../../components/TopBar/TopBar';\nimport Aux from '../../hoc/Auxiliary';\n\n\nconst homePage = (props) => {\n    \n    return(\n        <Aux>\n            <TopBar  \n                version=\"init\" \n                wide=\"no\" \n                language=\"pl\" \n                projectTitle=\"\"\n                changeLn = {props.changeLn}\n                currLn = {props.currLn}\n                 />\n            <Jumbotron />\n           \n           {\n                <LoginArea />\n           }\n            \n           \n            <DecoIntro />\n            <HomeText />\n            <AppFooter />\n        </Aux>\n    );\n}\n\n\n\nexport default homePage;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './SettingBar.css';\n\nconst settingBar = (props) => {\n    return(\n        <Aux>\n            <div className={\"SettingBar\"}>\n                <nav className=\"navbar navbar-expand-lg\">\n                    <div className=\" navbar-collapse\">\n                    \n                        {\n                            //TO DO\n                        }\n\n                    </div>\n                </nav>\n            </div>\n        </Aux>\n    );\n}\n\nexport default settingBar;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './FooterTool.css';\n\nconst footerTool = (props) => {\n    return(\n        <Aux>\n            <div className=\"FooterTool\">\n                \n                CLARIN-PL 2019\n                \n            </div>\n        </Aux>\n    );\n}\n\nexport default footerTool;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './LeftSiteBar.css';\n\n\nconst leftSiteBar = (props) => {\n\n    return(\n        <Aux>\n\n            <div className=\"LeftSiteBar\" id=\"LeftSiteBar\">\n\t\t\t\t<div className={props.czyTopPart===\"true\" ? \"topPart\" : \"resetTopPart\"}>\n\t\t\t\t\t\n\t\t\t\t</div>\n\n                <div className={props.czyTopPart===\"true\" ? \"hintPanel\" : \"resetHintPanel\"}>\n                            <div className=\"btn-group-vertical btn-block\" id=\"hint-buttons\">\n\n                                {props.children}\n\n                            </div>\n\n                            <div id=\"hint-content\"  data-scrollbar>\n                                <div className=\"container-fluid texts\">\n                                    {props.desc} \n                                </div> \n                            </div>\n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default leftSiteBar;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport SettingBar from '../SettingBar/SettingBar';\nimport './Dashboard.css';\nimport FooterTool from '../FooterTool/FooterTool';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\n\n\nconst dashboard = (props) => {\n\n    return(\n        <Aux>\n\n            <LeftSiteBar \n                czyTopPart=\"true\"\n                desc=\"Tutaj opis do dashoardu\" />\n\n            <SettingBar />\n\n\n            <section className={\"Content\"} data-scrollbar>\n\n                <div className={[\"container-fluid\", \"Dashboard\"].join(' ')}>\n                <div className=\"tool-desc\">\n                    <p>Tutaj opis narzędzia. Mauris consequat ipsum fermentum massa finibus condimentum. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aenean maximus tellus consequat, ultrices mi vel, efficitur dui. Quisque at venenatis ante. Nullam luctus dictum odio semper tempus. Proin eu lorem non diam iaculis egestas ac non tortor. Nullam viverra luctus leo in mollis.</p>\n                </div>\n\n                <div className=\"tool-body\">\n\n                \n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <div className=\"card mb-3\">\n                                <div className={[\"card-header\", \"cardHeader\"].join(' ')}>Aktualności</div>\n                                <div className=\"card-body text-dark\">\n                                <h5 className=\"news-title\">Wersja beta nowego serwisu </h5>\n                                <div className=\"news-date\">02.07.2019</div>\n                                <p className=\"news-body\">Miło nam przywitać Cię w panelu nowego serwisu który właśnie wystartował. Wszelkie uwagi na temat jego funkcjonowania są mile widziane.</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <div className=\"card mb-3\">\n                                <div className={[\"card-header\", \"cardHeader\"].join(' ')}>Aktualnie działające procesy</div>\n                                <div className=\"card-body text-dark\">\n\n                                <div className=\"row mb-3\">\n                                    <div className=\"col\">\n                                        <h5 className=\"news-title\">Rozpoznawanie:</h5>\n                                        <p>Całkowita licza plików w kolejce: (8)</p>\n                                        <p>Procent przetworzonych plików:</p>\n                                        <div className=\"progress\">\n                                            <div className=\"progress-bar\" role=\"progressbar\"  aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\">25%</div>\n                                        </div>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col\">\n                                        <h5 className=\"news-title\">Segmentacja:</h5>\n                                        <p>Całkowita licza plików w kolejce: (8)</p>\n                                        <p>Procent przetworzonych plików:</p>\n                                        <div className=\"progress\">\n                                            <div className=\"progress-bar\" role=\"progressbar\" aria-valuenow=\"15\" aria-valuemin=\"0\" aria-valuemax=\"100\">25%</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                \n                                    \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col-md-6\">\n                            <div className=\"card mb-3\">\n                                <div className={[\"card-header\", \"cardHeader\"].join(' ')}>Użycie repozytorium</div>\n                                <div className=\"card-body text-dark\">\n                                Tutaj jakiś wykres użycia repozytorium TO DO\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <div className=\"card mb-3\">\n                                <div className={[\"card-header\", \"cardHeader\"].join(' ')}>Szybkie linki</div>\n                                <div className=\"card-body text-dark\">\n                                <button type=\"button\" className=\"btn btn-primary btn-block op-btn\"><i className=\"fas fa-comments\"></i> Rozpoznawanie mowy</button>\n                                <button type=\"button\" className=\"btn btn-primary btn-block op-btn\"><i className=\"fas fa-cogs\"></i> Segmentacja</button>\n                                <button type=\"button\" className=\"btn btn-primary btn-block op-btn\"><i className=\"fas fa-question-circle\"></i> Pomoc</button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n\n            \n\n                <p>Tutaj opis narzędzia. Mauris consequat ipsum fermentum massa finibus condimentum. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aenean maximus tellus consequat, ultrices mi vel, efficitur dui. Quisque at venenatis ante. Nullam luctus dictum odio semper tempus. Proin eu lorem non diam iaculis egestas ac non tortor. Nullam viverra luctus leo in mollis.</p>\n\n                <p>Tutaj opis narzędzia. Mauris consequat ipsum fermentum massa finibus condimentum. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aenean maximus tellus consequat, ultrices mi vel, efficitur dui. Quisque at venenatis ante. Nullam luctus dictum odio semper tempus. Proin eu lorem non diam iaculis egestas ac non tortor. Nullam viverra luctus leo in mollis.</p>\n\n                <p>Tutaj opis narzędzia. Mauris consequat ipsum fermentum massa finibus condimentum. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aenean maximus tellus consequat, ultrices mi vel, efficitur dui. Quisque at venenatis ante. Nullam luctus dictum odio semper tempus. Proin eu lorem non diam iaculis egestas ac non tortor. Nullam viverra luctus leo in mollis.</p>\n\n                <p>Tutaj opis narzędzia. Mauris consequat ipsum fermentum massa finibus condimentum. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aenean maximus tellus consequat, ultrices mi vel, efficitur dui. Quisque at venenatis ante. Nullam luctus dictum odio semper tempus. Proin eu lorem non diam iaculis egestas ac non tortor. Nullam viverra luctus leo in mollis.</p>\n\n                <p>Tutaj opis narzędzia. Mauris consequat ipsum fermentum massa finibus condimentum. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aenean maximus tellus consequat, ultrices mi vel, efficitur dui. Quisque at venenatis ante. Nullam luctus dictum odio semper tempus. Proin eu lorem non diam iaculis egestas ac non tortor. Nullam viverra luctus leo in mollis.</p>\n                            \n                </div>\n\n                <FooterTool />\n\n            </section>\n\n            \n        </Aux>\n    );\n}\n\nexport default dashboard;","import React, {Component} from 'react';\nimport Aux from '../../../../hoc/Auxiliary';\nimport './RecognitionItem.css';\nimport * as actionTypes from '../../../../store/actions/actionsTypes';\nimport * as recognitionActions from '../../../../store/actions/index';\nimport {connect} from 'react-redux';\nimport {withRouter } from 'react-router-dom'\n \n\nclass RecognitionItem extends Component {\n\n    constructor(props){\n        super(props);\n\n       // this.state = {\n        //    file: foundfile,\n       // }\n\n        //console.log(foundfile)\n    }\n    \n    \n\n    componentWillMount = () => {\n       // console.log(\"COMPOJNENT DID MOUNT\")\n       this.reader = new FileReader(); \n\n        //wszytskie do tej pory wgrane pliki z reducera\n        let allFiles =  this.props.allFiles;\n        //znajduje plik przekazany jako parametr we wszystkich plikach przekazanych z reducera\n        const foundEntry = allFiles.find(obj => obj.id == this.props.fileID);\n    // [{\n        // file: File {name: \"__mowa16000.wav\", lastModified: 1560968256333, lastModifiedDate: Wed Jun 19 2019 20:17:36 GMT+0200 (Central European Summer Time), webkitRelativePath: \"\", size: 1235820, …}\n        // id: \"01f0a209-a29f-407a-9b8a-12cdebd1e1fd\"\n        // loadedperc: 0\n        // status: \"toload\"\n    // }]\n\n       //upload file only if the status is not loaded\n       console.log(foundEntry.status)\n       if(foundEntry.status !== 'loaded' && \n          foundEntry.status !== 'done' &&\n          foundEntry.status !== 'error' &&\n          foundEntry.status !== 'progress' &&\n          foundEntry.status !== 'ready') {\n            console.log(\"Wlaczam upload pliku\")\n            this.fileUpload(foundEntry.file, foundEntry.id);\n       }\n\n    }\n\n    componentWillUnmount = () => {\n       //this.reader.abort();\n    }\n\n    fileUpload = (file, fileEntryId) => {\n        \n        this.reader.onloadstart = (evt) => {\n            console.log(\"ONLOADSTART\");\n\n            // let updatedFile = {\n            //     ...this.state.file,\n            //     status: 'toload',\n            //     loadedperc: 0\n            // };\n            // this.setState({\n            //     file: updatedFile\n            // })\n\n            //console.log(\"onloadstart\");\n\n              this.props.updateFileState(fileEntryId, 'toload', 0);\n        }\n    \n\n        this.reader.onprogress = (evt) => {\n            console.log(\"ONPROGRESS\");\n            if (evt.lengthComputable) {\n                var percentLoaded = Math.round((evt.loaded / evt.total) * 100);\n                // Increase the progress bar length.\n               // console.log(\"loading....\" + percentLoaded + \"%\");\n                if (percentLoaded < 100) {\n                 // console.log(percentLoaded + \"%\");\n\n                    // let updatedFile = {\n                    //     ...this.state.file,\n                    //     status: 'toload',\n                    //     loadedperc: percentLoaded\n                    // };\n                    // this.setState({\n                    //     file: updatedFile\n                    // })\n\n                    this.props.updateFileState(fileEntryId, 'toload', percentLoaded);\n\n                    //this.props.updateFileState(this.state.file.id, 'toload', percentLoaded);\n                    //this.props.updateFileState(this.state.file.id, 'toload', percentLoaded);\n\n                  \n                }\n            }\n        }\n\n        // this.reader.onload = (evt) => {\n        //     console.log(\"ONLOAD\");\n        //      //this.props.updateFileState(this.state.file.id, 'loaded', 0);\n        //  };\n\n        this.reader.onloadend = (evt) => {\n            console.log(\"ONLOADEND\");\n            // let updatedFile = {\n            //     ...this.state.file,\n            //     status: 'loaded',\n            //     loadedperc: 100\n            // };\n            // this.setState({\n            //     file: updatedFile\n            // })\n\n            this.props.updateFileState(fileEntryId, 'loaded', 100);\n            //this.props.updateFileState(this.state.file.id, 'loaded', 100);\n        }\n\n        this.reader.onerror = (evt) => {\n            switch(evt.target.error.code) {\n                case evt.target.error.NOT_FOUND_ERR:\n                  alert('File Not Found!');\n                  break;\n                case evt.target.error.NOT_READABLE_ERR:\n                  alert('File is not readable');\n                  break;\n                case evt.target.error.ABORT_ERR:\n                  break; // noop\n                default:\n                  alert('An error occurred reading this file.');\n              };\n\n            //   let updatedFile = {\n            //     ...this.state.file,\n            //     status: 'error',\n            //     loadedperc: 0\n            // };\n            // this.setState({\n            //     file: updatedFile\n            // })\n\n            this.props.updateFileState(fileEntryId, 'error', 0);\n            //this.props.updateFileState(this.state.file.id, 'error', 0);\n              //this.props.updateFileState(this.state.file.id, 'error', 0);\n        }\n\n        console.log(\"reader zaczyna czytanie pliku: \")\n        console.log(file)\n        this.reader.readAsBinaryString(file);\n\n      }\n\n\n      startFileRecognition = (fileId) => {\n        let allFiles =  this.props.allFiles;\n        //znajduje plik przekazany jako parametr we wszystkich plikach przekazanych z reducera\n        const foundEntry = allFiles.find(obj => obj.id == this.props.fileID);\n\n        this.props.updateFileState(fileId, 'progress', 100);\n        this.props.onFileRecognition(foundEntry.file, foundEntry.id, this.props.userId, this.props.projectId );\n      }\n\n      previewItem = (fileID) => {\n       \n        let toURL = this.props.match.url;\n        toURL = toURL.replace('recognition','preview')\n        console.log(toURL)\n        this.props.history.push({\n            pathname: toURL,\n            \n            });\n\n\t\tthis.props.onOpenRecognitionAudioPreview(fileID);\n      }\n    \n\n    render(){\n\n        let statusinfo = null;\n\n        let ikonki = null;\n\n        let allFiles =  this.props.allFiles;\n        const foundEntry = allFiles.find(obj => obj.id == this.props.fileID);\n\n        // formatowanie wielkosci pliku\n        let nBytes = foundEntry.file.size;\n        let filesize = nBytes + \" bytes\";\n\n        for (let aMultiples = [\"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"], nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {\n            filesize = nApprox.toFixed(1) + \" \" + aMultiples[nMultiple];\n        }\n\n        const removeIcon = (\n            <Aux>\n                <a className=\"actionIcon remove\" onClick={() => this.props.onRemoveItem(this.props.fileID)}>\n                    <i className=\"fas fa-times \" ></i>\n                </a>\n            </Aux>\n        );\n\n        const previewIcon = null;\n        // const previewIcon = (\n        //     <Aux>\n        //         <a className=\"actionIcon preview\" onClick={() => this.previewItem(this.props.fileID)}>\n        //             <i className=\"fas fa-eye\"></i>\n        //         </a>\n        //     </Aux>\n        // );\n\n\n        switch(foundEntry.status){\n            case ('toload'):\n                    statusinfo = (<span className=\"loading\">\n                    <div className=\"spinner-border text-primary\" role=\"status\">\n                        <span className=\"sr-only\">loading... </span>\n                    </div>\n    \n                         Ładowanie pliku {foundEntry.loadedperc + '%'}\n                    </span>);\n\n                    ikonki = (\n                        <Aux>\n                            {removeIcon}\n                        </Aux>\n                    )\n\n\n                break;\t\n            case ('ready'):\n                    statusinfo = <span className=\"ready\"><i className=\"fas fa-check\"></i> Gotowe</span>;\n                    ikonki = (\n                        <Aux>\n                        {previewIcon}\n                        <a href=\"#\" className=\"actionIcon download\"><i className=\"fas fa-download\"></i></a>\n                        <a href=\"#\" className=\"actionIcon downloadRepo\"><i className=\"fas fa-cloud-download-alt\"></i></a>\n                        {removeIcon}\n                        </Aux>\n                    )\n                break;\n            case ('loaded'):\n                    statusinfo = <span className=\"uploaded\"><i className=\"fas fa-check\"></i> Załadowany</span>;\n                    ikonki = (\n                        <>\n                        <a onClick={(fileId)=>this.startFileRecognition(this.props.fileID)} className=\"actionIcon recognitionIcon\"><i className=\"fas fa-comments\"></i></a>\n                        {previewIcon}\n                        {removeIcon}\n                        </>\n                    )\n                break;\n            case ('error'):\n                    statusinfo = <span className=\"error\"><i className=\"fas fa-exclamation-triangle\"></i> Błąd</span>;\n                    ikonki = (\n                        <Aux>\n                            {removeIcon}\n                        </Aux>\n                    )\n                break;  \n            case ('progress'):\n                    statusinfo = (<span className=\"inprogress\">\n                                <div className=\"spinner-border text-primary\" role=\"status\">\n                                    <span className=\"sr-only\">Loading...</span>\n                                </div>\n    \n                                 Rozpoznawanie...\n                            </span>);\t\n                    ikonki = (\n                        <Aux>\n                            \n                            \n                            {removeIcon}\n                        </Aux>\n                    )\t\t\n                break;\n            case ('done'):\n                    statusinfo = <span className=\"done\"><i className=\"fas fa-check\"></i> Rozpoznawanie zakonczone</span>;\t\n                    this.props.onGetProjectFilesForUser(this.props.userId, this.props.projectId, this.props.token)\n                    ikonki = (\n                        <Aux>\n                            \n                            {previewIcon}\n                            {removeIcon}\n                        </Aux>\n                    )\t\t\n                break;  \n            default:\n                    statusinfo = null;\n                    ikonki = null;\n        }\n\n       // console.log(\"status: \" + this.state.file.status)\n        \n        return(\n            <Aux>\n                  <div className={[\"row\", \"fileItem\", \"RecognitionItem\"].join(' ')}>\n                        <div className=\"col-sm file-info\">\n                            <i className=\"fas fa-desktop\"></i>\n                            <span className={\"fileName\"}>{foundEntry.file.name}</span>\n                            <span className={\"fileSize\"}>({filesize})</span>\n                        </div>\n    \n    \n                        <div className=\"col-sm-auto file-status\">\n                            {statusinfo}\n                        </div>\n                        <div className={[\"col-sm\", \"fileIcons\"].join(' ')}>\n                            {ikonki}\n                        </div>\n    \n    \n                    </div>\n            </Aux>\n        );\n    }\n\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        allFiles: state.recR.filesToUpload,\n        userId: state.projectR.currentProjectOwner,\n        projectId: state.projectR.currentProjectID,\n        token: state.homeR.token,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n       updateFileState: (fileID, status,percLoaded) => dispatch(recognitionActions.updateFileState(fileID, status,percLoaded)),\n       onGetProjectFilesForUser: (userId, projectId, token) => dispatch(recognitionActions.getProjectFilesForUser(userId,projectId, token)),\n       onFileRecognition: (file, entryId,userId, projectId) => dispatch(recognitionActions.initFileRecognition(file, entryId, userId, projectId)),\n       onRemoveItem:(fileId) => dispatch(recognitionActions.removeRecognitionItem(fileId)),\n       onOpenRecognitionAudioPreview:(entryId) => dispatch(recognitionActions.openRecognitionAudioPreview(entryId))\n       // onRepoUpdate: (userId, projectId, token) => dispatch(recognitionActions.getProjectFilesForUser(userId,projectId, token))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(RecognitionItem));","import React, {Component} from 'react';\nimport './DropFilesArea.css';\n\nclass DropFilesArea extends Component {\n\n      \n      render() {\n\n        return (\n        <div className=\"DropFilesArea\">\n          <div id=\"react-file-drop\">\n                    <div className=\"uploadFromDiskArea\">\n                        <h2>{this.props.mainTitle}</h2>\n                        <p>{this.props.desc}</p>\n                \n                        <input \n                          id=\"file-input\" \n                          type=\"file\"\n                          multiple\n                          onChange={this.props.whenFilesChose}\n                           />\n                        <i className=\"fas fa-upload\"></i>\n                    </div>\n            </div>\n         </div>\n        );\n      }\n}\n\nexport default DropFilesArea;","import React from 'react';\nimport './ButtonLeftBar.css';\n\nconst buttonLeftBar = (props) => {\n\n    let iconClasses = [\"fas\", props.iconType];\n    const ifdisabled = props.disabled? true:false;\n    return (\n        <button disabled={ifdisabled} \n            className=\"btn btn-primary btn-lg btn-block ButtonLeftBar\" \n            onClick={props.whenClicked}\n            style={props.customeStyle}>\n            <i className={iconClasses.join(' ')}></i>\n            {props.napis}\n        </button>\n    );\n}\n\nexport default buttonLeftBar;","import React, { Component } from 'react';\nimport './DragAndDrop.css';\n\nconst dragAndDropStyles = {\n  position: 'relative',\n};\n\nconst dropIndicationStyles = {\n  position: 'absolute',\n  top: '0px',\n  left: '0px',\n  right: '0px',\n  bottom: '0px',\n  width: '100%',\n  height: '100%',\n  color: '#3498db',\n  backgroundColor: 'rgba(255,255,255,0.9)',\n  border: '4px dotted #3498db',\n  borderRadius: '10px',\n  display:'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n};\n\n\n\nclass DragAndDrop extends Component {\n  state = {\n    drag: false\n  }\n\n  dropRef = React.createRef();\n \n  handleDrag = (e) => {\n    console.log(\"handleDrag\")\n    e.preventDefault()\n    e.stopPropagation()\n  }\n  handleDragIn = (e) => {\n    console.log(\"handleDragIn \" + this.dragCounter)\n    e.preventDefault()\n    e.stopPropagation()\n    this.dragCounter++\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      this.setState({drag: true})\n    }\n  }\n  handleDragOut = (e) => {\n    console.log(\"handleDragOut \" + this.dragCounter)\n    e.preventDefault()\n    e.stopPropagation()\n    this.dragCounter--\n    if (this.dragCounter === 0) {\n      this.setState({drag: false})\n    }\n  }\n  handleDrop = (e) => {\n    //console.log(\"handleDrop\")\n    //console.log(e)\n    e.preventDefault()\n    e.stopPropagation()\n    this.setState({drag: false})\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      this.props.whenDropped(e.dataTransfer.files)\n      e.dataTransfer.clearData()\n      this.dragCounter = 0    \n    }\n  }\n  componentDidMount() {\n    let div = this.dropRef.current;\n    this.dragCounter = 0  \n    div.addEventListener('dragenter', this.handleDragIn)\n    div.addEventListener('dragleave', this.handleDragOut)\n    div.addEventListener('dragover', this.handleDrag)\n    div.addEventListener('drop', this.handleDrop)\n  }\n  componentWillUnmount() {\n    let div = this.dropRef.current\n    div.removeEventListener('dragenter', this.handleDragIn)\n    div.removeEventListener('dragleave', this.handleDragOut)\n    div.removeEventListener('dragover', this.handleDrag)\n    div.removeEventListener('drop', this.handleDrop)\n  }\n  render() {\n    return (\n\n      <div className=\"DragAndDrop\" style={dragAndDropStyles} ref={this.dropRef} >\n\n        {\n            this.state.drag?\n              <div className=\"dropIndication\" style={dropIndicationStyles}>\n                  <h2>Upuść pliki tutaj</h2>\n              </div> \n              : \n              null\n        }\n\n        {this.props.children}\n      </div>\n\n    )\n  }\n}\nexport default DragAndDrop","import React from 'react';\nimport './Backdrop.css';\n\nconst backdrop = (props) => {\n    return props.show ? <div className=\"Backdrop\" onClick={props.clicked}></div> : null;\n}\n\nexport default backdrop;","import React from 'react';\nimport './Modal.css';\nimport Aux from '../../../hoc/Auxiliary';\nimport Backdrop from '../Backdrop/Backdrop';\n\nconst modal = (props) => (\n\n    <Aux>\n        <Backdrop show={props.show} clicked={props.modalClosed} />\n        <div className=\"Modal\"\n            style={{\n                transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                opacity: props.show ? '1' : '0',\n            }}>\n            \n            {props.children}\n        </div>\n    </Aux>\n);\n\nexport default modal;","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './RecognitionTool.css';\nimport SettingBar from '../SettingBar/SettingBar';\nimport FooterTool from '../FooterTool/FooterTool';\nimport RecognitionItem from './RecognitionItem/RecognitionItem';\nimport DropFilesArea from '../../../components/UI/DropFilesArea/DropFilesArea';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\nimport ButtonLeftBar from '../../../components/UI/ButtonLeftBar/ButtonLeftBar';\nimport DragAndDrop from '../../../components/UI/DragAndDrop/DragAndDrop';\nimport {connect} from 'react-redux';\nimport * as recognitionActions from '../../../store/actions/index';\nimport Modal from '../../../components/UI/Modal/Modal';\n\nimport uuid  from 'uuid';\n\nclass RecognitionTool extends Component {\n\n    handleDrop = (files) => {\n        //extending the files by additionnal info about the status and load percentage\n        //console.log(\"RECI HANDLE DROP\")\n        //console.log(files)\n        let extFiles = [];\n\n        Array.from(files).forEach(file => {\n            let newFile = Object.assign({},file);\n            newFile.file = file;\n            newFile.status = 'toload';\n            newFile.loadedperc = 0;\n            newFile.id = uuid.v4();\n            extFiles.push(newFile);\n        });\n\n        this.props.onDrop(extFiles);\n    }\n\n    //kiedy uzytkownik recznie wybral pliki\n    whenFilesChose = (e) => {\n        const inputControl = e.currentTarget;\n        let fileList = [];\n        for(var i=0;i<inputControl.files.length;i++){\n            fileList.push(inputControl.files[i]);\n        }\n        //console.log(fileList);\n        this.handleDrop(fileList);\n    }\n\n\n    //otwiera okno modalne\n    openModalHandler = () => {\n        this.props.onOpenModalHandler();\n    }\n\n    //zamyka okno modalne\n    closeModalHandler = () => {\n        this.props.onCloseModalHandler();\n    }\n\n    //rozpoczynam rozpoznawanie \n    startBatchRecognition = () => {\n\n        //wydobywam sama tablica plikow z entry \n        //bo entry to moja struktura danych\n        const audioFilesArray = this.props.filesToUpload.map(entry => {\n            return entry.file;\n        })\n\n        const audioFilesIds = this.props.filesToUpload.map(entry => {\n            return entry.id;\n        })\n \n        //console.log(audioFilesArray)\n\n        this.props.onStartBatchRecognition(audioFilesArray, audioFilesIds);\n        this.closeModalHandler();\n    }\n\n    render(){\n\n        \n        let filelist = (\n            <h4 style={{marginTop: '10px'}}>Wgraj pliki do rozpoznawania</h4>\n        )\n\n       \n\n        if(this.props.filesToUpload.length > 0 ){\n        \n            filelist = this.props.filesToUpload.map((file,i) =>\n                <RecognitionItem key={\"key\"+i} \n                fileID={file.id}/>\n             )\n        }\n        \n\n       // console.log(this.state.filesToUpload)\n        \n\n        return(\n            <Aux>\n\n                <Modal\n                    show={this.props.modalDisplay}\n                    modalClosed={this.closeModalHandler}\n                    title=\"Czy rozpoczac rozpoznawanie?\">\n         \n                    <button type=\"button\" \n                        className=\"btn btn-primary\"\n                        onClick={this.startBatchRecognition}>Tak</button>\n                    <button type=\"button\" \n                        className=\"btn btn-outline-secondary\"\n                        onClick={this.closeModalHandler}>NIE</button>\n                    \n                   \n                </Modal>\n\n{\n    /*\n                <LeftSiteBar czyTopPart=\"true\" desc=\"Tutaj opis do rozpoznawania\" >\n\n                    <ButtonLeftBar \n                        napis=\"Rozpocznij rozpoznawanie\" \n                        iconType=\"fa-comments\" \n                        whenClicked={this.openModalHandler} />\n                    <ButtonLeftBar napis=\"Zapisz wynik na Twoim dysku\" disabled={true} iconType=\"fa-download\" whenClicked={null}/>\n                    <ButtonLeftBar napis=\"Zapisz wynik w repozytorium\" disabled={true} iconType=\"fa-cloud-download-alt\" whenClicked={null}/>\n\n                </LeftSiteBar>\n    */\n}\n                \n\n                <LeftSiteBar \n                czyTopPart=\"true\"\n                desc=\"Tutaj opis do rozpoznawania\" />\n\n                 <SettingBar />\n    \n                <section className=\"Content\" data-scrollbar>\n    \n                    <div className={[\"container-fluid\", \"RecognitionTool\"].join(' ')}>\n                    <div className=\"tool-desc\">\n                        <p>Tutaj opis narzędzia. Mauris consequat ipsum fermentum massa finibus condimentum. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aenean maximus tellus consequat, ultrices mi vel, efficitur dui. Quisque at venenatis ante. Nullam luctus dictum odio semper tempus. Proin eu lorem non diam iaculis egestas ac non tortor. Nullam viverra luctus leo in mollis.</p>\n                    </div>\n    \n                    <div className=\"tool-body\">\n    \n                        <div className=\"row\">\n                            <div className=\"col-md\">\n\n                                <DragAndDrop whenDropped={this.handleDrop}>\n                                       <DropFilesArea \n                                            whenFilesChose={this.whenFilesChose}\n                                            mainTitle=\"Wgraj pliki z dysku\"\n                                            desc=\"Pliki zostaną zapisane jedynie tymczasowo na potrzeby przetwarzania. Po tym czasie są one usuwane bezpowrotnie usuwane z serwera\"/>\n                                </DragAndDrop>\n                                \n                            </div>\n                            {\n                                /*\n                                <div className=\"col-md\">\n                                <div className=\"uploadFromRepo\">\n                                    <h2>Wgraj pliki z repozytorium</h2>\n                                    <p>Przeciągnij pliki z repozytorium. Podczas przetwarzania nie bedziesz mógł wykonywać żadnych dodatkowych operacji na tych plikach</p>\n                                    <i className=\"fas fa-cloud-upload-alt\"></i>\n                                </div>\n                                </div>\n                                */\n                            }\n                           \n                        </div>\n    \n                        <div className=\"file-list\">\n                            {filelist}\n                        </div>\n    \n    \n                    </div>\n    \n                     \n                    </div>\n    \n                    <FooterTool />\n    \n                </section>\n            </Aux>\n        );\n    }\n\n\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        filesToUpload: state.recR.filesToUpload,\n        modalDisplay: state.projectR.modal,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onDrop: (files) => dispatch(recognitionActions.dropFiles(files)),\n        onOpenModalHandler: () => dispatch(recognitionActions.openModalProject()),\n        onCloseModalHandler: () => dispatch(recognitionActions.closeModalProject()),\n        onStartBatchRecognition: (audioFilesArray, audioFilesIds) => dispatch(recognitionActions.initBatchRecognition(audioFilesArray, audioFilesIds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecognitionTool);","import * as actionTypes from './actionsTypes';\nimport axios from 'axios';\n\n//initialization the init properties of the project\nexport const initProject = (projectId, projectTitle, projectOwner) => {\n    return {\n        type: actionTypes.INIT_PROJECT,\n        projectId: projectId,\n        projectTitle: projectTitle,\n        projectOwner: projectOwner,\n    }\n}\n\nexport const openModalProject = () => {\n    return {\n        type: actionTypes.OPEN_MODAL_PROJECT,\n    }\n}\n\nexport const closeModalProject = () => {\n    return {\n        type: actionTypes.CLOSE_MODAL_PROJECT,\n    }\n}\n\nexport const clearRecoStore = () => {\n    return {\n        type: actionTypes.CLEAR_RECO_STORE,\n    }\n}\n\nexport const clearSegmentStore = () => {\n    return {\n        type: actionTypes.CLEAR_SEGMENT_STORE,\n    }\n}\n\nexport const clearPreviewStore = () => {\n    return {\n        type: actionTypes.CLEAR_PREVIEW_STORE,\n    }\n}\n\n\n\n\n","import React, {Component} from 'react';\nimport Aux from '../../../../hoc/Auxiliary';\nimport './SegmentItem.css';\nimport SegmentAudioItem from '../SegmentAudioItem/SegmentAudioItem';\n\nimport * as segmentActions from '../../../../store/actions/index';\nimport {connect} from 'react-redux';\nimport {withRouter } from 'react-router-dom'\n\nclass SegmentItem extends Component {\n\n    removeSegmentItem = (entryId) => {\n        console.log(entryId);\n        this.props.onRemoveSegmentItem(entryId);\n    }\n\n    startSegmentation = (entryId) => {\n        console.log(entryId);\n        const currentEntry = this.props.segmentEntry.find(entry => entry.id == entryId);\n        const audioFile = currentEntry.audioEntry.file;\n        const txtFile = currentEntry.txtEntry.file;\n\n        this.props.onInitSegmentProcess(entryId);\n        \n        this.props.onStartSegmentItem(\n            entryId, \n            this.props.userId, \n            this.props.projectId, \n            audioFile, \n            txtFile, \n            this.props.token\n            );\n    }\n\n    refreshRepo = () => {\n        this.props.onRefreshRepo(\n            this.props.userId, \n            this.props.projectId, \n            this.props.token)\n    }\n\n    render() {\n\n        let statusIcon = null;  //status entry\n        let starterIcon = null; //do odpalania segmentacji\n\n        \n        \n        if(this.props.status === 'valid'){\n            statusIcon = (\n                <span className=\"segmenticon ready\"><i className=\"fas fa-check\"></i></span>\n            );\n            starterIcon = (\n                <a onClick={()=>this.startSegmentation(this.props.entryId)}>\n                    <i className=\"startSegment fas fa-cogs\" ></i>\n                </a> \n            );\n        } else {\n            statusIcon = (\n                <span className=\"segmenticon warning\"><i className=\"fas fa-exclamation\"></i></span>\n            );\n            starterIcon = null;\n        }\n\n        //znajduje siebie na liscie\n        let foundEntry = this.props.segmentEntry.find(entry => entry.id === this.props.entryId)\n\n        if(foundEntry.processingStatus === 'inProgress'){\n            statusIcon = (\n                <span className=\"inprogress\">\n                        <div className=\"spinner-border text-primary\" role=\"status\">\n                            <span className=\"sr-only\">Segmentacja...</span>\n                        </div>\n                </span>\n            );\n\n            starterIcon = null;\n        }\n\n        if(foundEntry.processingStatus === 'done'){\n            statusIcon = (\n                <span className=\"segmenticon complete\"><i className=\"fas fa-check\"></i></span>\n            );\n            starterIcon = null;\n\n            this.refreshRepo();\n        }\n\n        if(foundEntry.processingStatus === 'error'){\n            statusIcon = (\n                <span className=\"error\"><i className=\"fas fa-exclamation-triangle\"></i> Błąd</span>\n            );\n            starterIcon = null;\n        }\n\n        \n\n        \n\n   \n        \n        return(\n            <Aux>\n         \n                \n                <div className={[\"row\", \"pairedItem\", \"SegmentItem\"].join(' ')}>\n    \n                    <div className=\"col-sm audio-info\">\n    \n                       \n                        \n                    </div>\n                    <div className=\"col-sm-auto pair-status\">\n                   \n                            {statusIcon}\n                     \n                    </div>\n                    <div className=\"col-sm txt-info\">\n                         \n                    </div>\n    \n                    <div className=\"col-sm-auto pair-icons\">\n\n                        { starterIcon}\n                         \n\n                            {\n                                /*\n                                    <a onClick={()=>this.removeSegmentItem(this.props.entryId)}>\n                                            <i className=\"removeItem fas fa-times\" ></i>\n                                    </a>\n\n                                */\n                            }\n                        \n\n                    </div>\n                </div>\n    \n    \n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        segmentEntry: state.segR.segmentEntry,\n        userId: state.projectR.currentProjectOwner,\n        projectId: state.projectR.currentProjectID,\n        token: state.homeR.token,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n       onRemoveSegmentItem: (segmentId) => dispatch(segmentActions.removeSegmentItem(segmentId)),\n       onStartSegmentItem: (segmentId, userId, projectId, audioFile, txtFile, token) => dispatch(segmentActions.startSegmentItem(segmentId, userId, projectId, audioFile, txtFile, token)),\n       onInitSegmentProcess: (entryId) => dispatch(segmentActions.initSegmentProcessing(entryId)),\n       onRefreshRepo: (userId, projectId, token) => dispatch(segmentActions.getProjectFilesForUser(userId, projectId, token))\n       \n    }\n}\n\nexport default  connect(mapStateToProps, mapDispatchToProps)(withRouter(SegmentItem));","import * as actionTypes from '../actionsTypes';\nimport axios from 'axios';\n\n//action creator for dropping audio files\nexport const dropAudioFiles = (audioFiles) => {\n    return {\n        type: actionTypes.DROP_AUDIO_FILES,\n        audioFiles: audioFiles\n    }\n}\n\n\n//action creator to dropping txt files\nexport const dropTxtFiles = (txtFiles) => {\n    return {\n        type: actionTypes.DROP_TXT_FILES,\n        txtFiles: txtFiles\n    }\n}\n\n\n//action creatore for changing the order of audio files\nexport const changeAudioListOrder = (audioIdsOrder) => {\n    return {\n        type: actionTypes.CHANGE_AUDIO_LIST_ORDER,\n        audioIdsOrder: audioIdsOrder\n    }\n}\n\n\n//action creators for changing the order of txt files\nexport const changeTxtListOrder = (txtIdsOrder) => {\n    return {\n        type: actionTypes.CHANGE_TXT_LIST_ORDER,\n        txtIdsOrder: txtIdsOrder\n    }\n}\n\nexport const removeSegmentItem = (entryId) => {\n    return {\n        type: actionTypes.REMOVE_SEGMENT_ENTRY,\n        entryId: entryId\n    }\n}\n\n//############### start segmentation entry ############\n//#################################################\n\nexport const initSegmentProcessing = (entryId) => {\n    return {\n        type: actionTypes.INIT_FILE_SEGMENTATION,\n        entryId: entryId\n    }\n}\n\nexport const finishFileSegmentationSuccess = (entryId) =>{\n    return {\n        type: actionTypes.FILE_SEGMENTATION_SUCCESS,\n        entryId: entryId\n    }\n}\n\nexport const finishFileSegmentationFailed = (error, entryId) =>{\n    return {\n        type: actionTypes.FILE_SEGMENTATION_FAILED,\n        error: error.toString(),\n        entryId: entryId,\n    }\n}\n\nexport const startSegmentItem = (entryId, userId, projectId, audioFile, txtFile, token) => {\n    //(segmentId, userId, projectId, audioFile, txtFile, token)\n    return dispatch => {\n\n        const data = new FormData();\n        data.append('entryId',entryId);\n        data.append('userId',userId);\n        data.append('projectId',projectId);\n        data.append('audioFiles',audioFile);\n        data.append('audioFiles',txtFile);\n        //data.append('txtFile',txtFile);\n        //data.append('token', entryId);\n\n        console.log(\"WYSYLAM\")\n        console.log(entryId)\n        console.log(userId)\n        console.log(projectId)\n        console.log(audioFile)\n        console.log(txtFile)\n       \n        \n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n\n        //dispatch(startSegmentItemAction(entryId));\n        \n        axios.post('/segmentation/singleFile',data, config)\n            .then(response => {\n                console.log(response);\n                //const message = response.data.message;\n                //const entryId = response.data.sentEntryId.sentEntryId;\n                //console.log(message)\n                //console.log(entryId)\n                dispatch(finishFileSegmentationSuccess(entryId));\n               \n                //console.log(response);\n            })\n            .catch(error => {\n                dispatch(finishFileSegmentationFailed(error, entryId));\n                console.log(error);\n            })\n    }\n}\n\n\n\n","import uuid  from 'uuid';\nimport React from 'react';\nimport Sortable from 'react-sortablejs';\nimport PropTypes from 'prop-types';\nimport './SortableAudioList.css';\n \n// Functional Component\nconst sortableAudioList = ({ items, onChange }) => {\n    \n    let sortable = null; // sortable instance\n\n    /*\n    const reverseOrder = (evt) => {\n        const order = sortable.toArray();\n        onChange(order.reverse());\n    };\n    */\n\n   // console.log(items);\n\n    const listItems = items.map((val,i) => (\n    \n        <div className=\"SortableAudioList\" key={val.id}  data-id={val.id}>\n            \n            <div className=\"row\">\n                    <div className=\"col-sm-auto withReference\">\n                            <span className=\"orderNo\">{i+1 }</span>\n                            <i className=\"fas fa-arrows-alt-v\"></i>\n                    </div>\n                    <div className=\"col-sm\">\n                            <span className=\"file-name\">{val.file.name}</span>\n                    </div>\n                    {\n\n                            /*\n                            <div className=\"col-sm-auto\">\n                                    <i className=\"fas fa-play preview\"></i>\n                            </div>\n                            */\n\n                    }\n                    \n            </div>\n        </div>\n    ));\n \n    return (\n        <div>\n          \n            <Sortable\n                // Sortable options (https://github.com/RubaXa/Sortable#options)\n                options={{\n                    handle: '.fa-arrows-alt-v', // handle's class\n                    animation: 150\n                }}\n \n                // [Optional] Use ref to get the sortable instance\n                // https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute\n                ref={(c) => {\n                    if (c) {\n                        sortable = c.sortable;\n                    }\n                }}\n \n                // [Optional] A tag or react component to specify the wrapping element. Defaults to \"div\".\n                // In a case of a react component it is required to has children in the component\n                // and pass it down.\n                tag=\"div\"\n \n                // [Optional] The onChange method allows you to implement a controlled component and keep\n                // DOM nodes untouched. You have to change state to re-render the component.\n                // @param {Array} order An ordered array of items defined by the `data-id` attribute.\n                // @param {Object} sortable The sortable instance.\n                // @param {Event} evt The event object.\n                onChange={(order, sortable, evt) => {\n                    onChange(order);\n                }}\n            >\n                {listItems}\n            </Sortable>\n        </div>\n    );\n};\n \nsortableAudioList.propTypes = {\n    items: PropTypes.array,\n    onChange: PropTypes.func\n};\n \nexport default sortableAudioList;\n","import uuid  from 'uuid';\nimport React from 'react';\nimport Sortable from 'react-sortablejs';\nimport PropTypes from 'prop-types';\nimport './SortableTxtList.css';\n \n// Functional Component\nconst sortableTxtList = ({ items, onChange }) => {\n    \n    let sortable = null; // sortable instance\n\n    /*\n    const reverseOrder = (evt) => {\n        const order = sortable.toArray();\n        onChange(order.reverse());\n    };\n    */\n\n   // console.log(items);\n\n    const listItems = items.map((val,i) => (\n    \n        <div className=\"SortableTxtList\" key={val.id}  data-id={val.id}>\n            <div className=\"row\">\n                    <div className=\"col-sm-auto\">\n                            <i className=\"fas fa-arrows-alt-v\"></i>\n                    </div>\n                    <div className=\"col-sm\">\n                            <span className=\"file-name\">{val.file.name}</span>\n                    </div>\n                    {\n                        /*\n\n                    <div className=\"col-sm-auto\">\n                            <i className=\"fas fa-eye preview\"></i>\n                    </div>\n                    \n                        */\n                    }\n                    \n            </div>\n        </div>\n    ));\n \n    return (\n        <div>\n          \n            <Sortable\n                // Sortable options (https://github.com/RubaXa/Sortable#options)\n                options={{\n                    handle: '.fa-arrows-alt-v', // handle's class\n                    animation: 150\n                }}\n \n                // [Optional] Use ref to get the sortable instance\n                // https://facebook.github.io/react/docs/more-about-refs.html#the-ref-callback-attribute\n                ref={(c) => {\n                    if (c) {\n                        sortable = c.sortable;\n                    }\n                }}\n \n                // [Optional] A tag or react component to specify the wrapping element. Defaults to \"div\".\n                // In a case of a react component it is required to has children in the component\n                // and pass it down.\n                tag=\"div\"\n \n                // [Optional] The onChange method allows you to implement a controlled component and keep\n                // DOM nodes untouched. You have to change state to re-render the component.\n                // @param {Array} order An ordered array of items defined by the `data-id` attribute.\n                // @param {Object} sortable The sortable instance.\n                // @param {Event} evt The event object.\n                onChange={(order, sortable, evt) => {\n                    onChange(order);\n                }}\n            >\n                {listItems}\n            </Sortable>\n        </div>\n    );\n};\n \nsortableTxtList.propTypes = {\n    items: PropTypes.array,\n    onChange: PropTypes.func\n};\n \nexport default sortableTxtList;\n","import React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport SettingBar from '../SettingBar/SettingBar';\nimport FooterTool from '../FooterTool/FooterTool';\nimport './SegmentTool.css';\nimport SegmentItem from './SegmentItem/SegmentItem';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\nimport ButtonLeftBar from '../../../components/UI/ButtonLeftBar/ButtonLeftBar';\nimport DragAndDrop from '../../../components/UI/DragAndDrop/DragAndDrop';\nimport DropFilesArea from '../../../components/UI/DropFilesArea/DropFilesArea';\nimport { connect } from 'react-redux';\nimport uuid from 'uuid';\nimport * as segmentActions from '../../../store/actions/index';\nimport SortableAudioList from './SortableAudioList/SortableAudioList';\nimport SortableTxtList from './SortableTxtList/SortableTxtList';\n\nclass SegmentTool extends Component {\n\n\thandleDropAudio = (audiofiles) => {\n\n\t\tlet extAudioFiles = [];\n\n\t\tArray.from(audiofiles).forEach(file => {\n\t\t\tlet newFile = Object.assign({}, file);\n\t\t\tnewFile.file = file;\n\t\t\tnewFile.status = 'toload';\n\t\t\tnewFile.loadedperc = 0;\n\t\t\tnewFile.id = uuid.v4();\n\t\t\textAudioFiles.push(newFile);\n\t\t});\n\n\t\tconsole.log(\"extAudioFiles\")\n\t\tconsole.log(extAudioFiles)\n\n\t\tthis.props.onAudioDrop(extAudioFiles);\n\t}\n\n\n\twhenAudioFilesChose = (e) => {\n\t\tconst inputControl = e.currentTarget;\n\t\tlet extAudioFiles = [];\n\n\t\tArray.from(inputControl.files).forEach(file => {\n\t\t\tlet newFile = Object.assign({}, file);\n\t\t\tnewFile.file = file;\n\t\t\tnewFile.status = 'toload';\n\t\t\tnewFile.loadedperc = 0;\n\t\t\tnewFile.id = uuid.v4();\n\t\t\textAudioFiles.push(newFile);\n\t\t});\n\n\t\tconsole.log(\"extAudioFiles\")\n\t\tconsole.log(extAudioFiles)\n\n\t\tthis.props.onAudioDrop(extAudioFiles);\n\t}\n\n\thandleDropTxt = (txtfiles) => {\n\t\tlet extTxtFiles = [];\n\n\t\tArray.from(txtfiles).forEach(file => {\n\t\t\tlet newFile = Object.assign({}, file);\n\t\t\tnewFile.file = file;\n\t\t\tnewFile.status = 'toload';\n\t\t\tnewFile.loadedperc = 0;\n\t\t\tnewFile.id = uuid.v4();\n\t\t\textTxtFiles.push(newFile);\n\t\t});\n\n\t\t//console.log(\"extTxtFiles\")\n\t\t//console.log(extTxtFiles)\n\n\t\tthis.props.onTxtDrop(extTxtFiles);\n\t}\n\n\twhenTxtFilesChose = (e) => {\n\t\tconst inputControl = e.currentTarget;\n\n\t\tlet extTxtFiles = [];\n\n\t\tArray.from(inputControl.files).forEach(file => {\n\t\t\tlet newFile = Object.assign({}, file);\n\t\t\tnewFile.file = file;\n\t\t\tnewFile.status = 'toload';\n\t\t\tnewFile.loadedperc = 0;\n\t\t\tnewFile.id = uuid.v4();\n\t\t\textTxtFiles.push(newFile);\n\t\t});\n\n\t\tconsole.log(\"extTxtFiles\")\n\t\tconsole.log(extTxtFiles)\n\n\t\tthis.props.onTxtDrop(extTxtFiles);\n\t}\n\n\n\n\n\n\n\trender() {\n\n\t\tlet entrylist = (\n\t\t\t<h4 style={{ marginTop: '10px' }}>Wgraj pliki audio oraz txt do segmentacji</h4>\n\t\t)\n\n\n\t\tif (this.props.segmentEntry.length > 0) {\n\n\t\t\tentrylist = this.props.segmentEntry.map((entry, i) =>\n\t\t\t\t<SegmentItem key={entry.id} entryId={entry.id} status={entry.status} />\n\t\t\t)\n\t\t}\n\n\n\t\treturn (\n\t\t\t<Aux>\n\n\t\t\t\t{\n\t\t\t\t\t/*\n\t\t\t\t\t<LeftSiteBar czyTopPart=\"true\" desc=\"Tutaj opis do segmentacji\" >\n\t\t\t\t\n\t\t\t\t\t\t\t\t<ButtonLeftBar napis=\"Rozpocznij segmentacje\" iconType=\"fa-cogs\" whenClicked={null} />\n\t\t\t\t\t\t\t\t<ButtonLeftBar napis=\"Zapisz wynik na Twoim dysku\" disabled={true} iconType=\"fa-download\" whenClicked={null}/>\n\t\t\t\t\t\t\t\t<ButtonLeftBar napis=\"Zapisz wynik w repozytorium\" disabled={true} iconType=\"fa-cloud-download-alt\" whenClicked={null}/>\n\t\t\t\t\n\t\t\t\t\t\t\t</LeftSiteBar>\n\t\t\t\t\t*/\n\t\t\t\t}\n\n\n\t\t\t\t<LeftSiteBar\n\t\t\t\t\tczyTopPart=\"true\"\n\t\t\t\t\tdesc=\"Tutaj opis do segmentacji\" />\n\n\t\t\t\t<SettingBar />\n\n\t\t\t\t<section className=\"Content\" data-scrollbar>\n\n\t\t\t\t\t<div className={[\"container-fluid\", \"SegmentTool\"].join(' ')}>\n\t\t\t\t\t\t<div className=\"tool-desc\">\n\n\t\t\t\t\t\t\t<p>Tutaj opis narzędzia. Mauris consequat ipsum fermentum massa finibus condimentum. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Aenean maximus tellus consequat, ultrices mi vel, efficitur dui. Quisque at venenatis ante. Nullam luctus dictum odio semper tempus. Proin eu lorem non diam iaculis egestas ac non tortor. Nullam viverra luctus leo in mollis.</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"tool-body\">\n\n\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t<div className=\"col-md\">\n\n\t\t\t\t\t\t\t\t\t<DragAndDrop whenDropped={this.handleDropAudio}>\n\t\t\t\t\t\t\t\t\t\t<DropFilesArea\n\t\t\t\t\t\t\t\t\t\t\twhenFilesChose={this.whenAudioFilesChose}\n\t\t\t\t\t\t\t\t\t\t\tmainTitle=\"Wgraj pliki z audio dysku\"\n\t\t\t\t\t\t\t\t\t\t\tdesc=\"Pliki zostaną zapisane jedynie tymczasowo na potrzeby przetwarzania. Po tym czasie są one usuwane bezpowrotnie usuwane z serwera\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</DragAndDrop>\n\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-md\">\n\t\t\t\t\t\t\t\t\t<DragAndDrop whenDropped={this.handleDropTxt}>\n\t\t\t\t\t\t\t\t\t\t<DropFilesArea\n\t\t\t\t\t\t\t\t\t\t\twhenFilesChose={this.whenTxtFilesChose}\n\t\t\t\t\t\t\t\t\t\t\tmainTitle=\"Wgraj pliki txt dysku\"\n\t\t\t\t\t\t\t\t\t\t\tdesc=\"Pliki zostaną zapisane jedynie tymczasowo na potrzeby przetwarzania. Po tym czasie są one usuwane bezpowrotnie usuwane z serwera\" />\n\t\t\t\t\t\t\t\t\t</DragAndDrop>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\n\t\t\t\t\t\t\t<div className=\"file-list\">\n\n\t\t\t\t\t\t\t\t<div className={[\"row\", \"pairedItem\", \"header-pair\"].join(' ')}>\n\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-auto pair-order\">\n\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm audio-info\">\n\n\t\t\t\t\t\t\t\t\t\t<h4></h4>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-auto pair-status\">\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm txt-info\">\n\t\t\t\t\t\t\t\t\t\t<h4></h4>\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"col-sm-auto pair-icons\">\n\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\"row commonParent\">\n\t\t\t\t\t\t\t\t\t<div className=\"segmentEntriesBG\">\n\n\t\t\t\t\t\t\t\t\t\t{entrylist}\n\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t<SortableAudioList\n\t\t\t\t\t\t\t\t\t\t\titems={this.props.audioList}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(items) => {\n\t\t\t\t\t\t\t\t\t\t\t\t//this.setState({ items });\n\t\t\t\t\t\t\t\t\t\t\t\t//this.props.onAudioDrop(items);\n\t\t\t\t\t\t\t\t\t\t\t\t//{console.log(items)}\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.onChangeAudioListOrder(items);\n\t\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t\t\t\t\t<SortableTxtList\n\t\t\t\t\t\t\t\t\t\t\titems={this.props.txtList}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(items) => {\n\t\t\t\t\t\t\t\t\t\t\t\t//this.setState({ items });\n\t\t\t\t\t\t\t\t\t\t\t\t//this.props.onAudioDrop(items);\n\t\t\t\t\t\t\t\t\t\t\t\t//{console.log(items)}\n\t\t\t\t\t\t\t\t\t\t\t\tthis.props.onChangeTxtListOrder(items);\n\t\t\t\t\t\t\t\t\t\t\t}} />\n\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t</div>\n\t\t\t\t\t<FooterTool />\n\n\t\t\t\t</section>\n\t\t\t</Aux>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t\tsegmentEntry: state.segR.segmentEntry,\n\t\taudioList: state.segR.audioList,\n\t\ttxtList: state.segR.txtList\n\t}\n}\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonAudioDrop: (audioFiles) => dispatch(segmentActions.dropAudioFiles(audioFiles)),\n\t\tonTxtDrop: (txtFiles) => dispatch(segmentActions.dropTxtFiles(txtFiles)),\n\t\tonChangeAudioListOrder: (idsOrder) => dispatch(segmentActions.changeAudioListOrder(idsOrder)),\n\t\tonChangeTxtListOrder: (idsOrder) => dispatch(segmentActions.changeTxtListOrder(idsOrder)),\n\n\t}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SegmentTool);","\nimport WaveSurfer from 'wavesurfer.js';\nimport React, { Component } from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './TranscriptTool.css';\nimport SettingBar from '../SettingBar/SettingBar';\nimport FooterTool from '../FooterTool/FooterTool';\nimport LeftSiteBar from '../LeftSiteBar/LeftSiteBar';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as previewActions from '../../../store/actions/index';\n//import Wavesurfer from 'react-wavesurfer';\n\n//sorry for the name of this class - to be changed...\n\n\n\nclass TranscriptTool extends Component {\n\n   \n    constructor(props){\n        super(props);\n     \n        let wavesurfer = null;\n   \n        this.handleTogglePlay = this.handleTogglePlay.bind(this);\n        this.handlePosChange = this.handlePosChange.bind(this);\n        //this.loadAudioFileForPreview = this.loadAudioFileForPreview.bind(this);\n      }\n\n      handleTogglePlay = () => {\n        //this.wavesurfer.load('http://localhost:1234/repo/5d0e20536c8ef65ef77e7e65/5d0e206f6c8ef65ef77e7e66/test.wav');\n        if(this.props.playing){\n            this.wavesurfer.pause();\n        } else {\n            this.wavesurfer.play();\n        }\n\n        this.props.onTooglePlaying();\n      }\n\n      handlePosChange = (e) => {\n        this.setState({\n          pos: e.originalArgs[0]\n        });\n      }\n\n\n    componentDidMount = () => {\n\n        this.wavesurfer = WaveSurfer.create({\n            container: '#waveform',\n            waveColor: '#6f8796',\n            progressColor: '#3498db',\n            responsive: true,\n            //backend: 'MediaElement',\n            plugins: []\n        });\n\n        this.wavesurfer.on('loading', function (e) {\n            console.log(e);\n        }.bind(this));\n\n\n        // Time stretcher\n        this.wavesurfer.on('ready', function () {\n            this.updateAudioArea();\n           // this.props.onUpdateAudioArea(this.props.fileKey)\n         }.bind(this));\n\n         this.props.onWeveSurferLoaded(true);\n        \n    }\n\n    componentWillUnmount = () => {\n        this.props.onWeveSurferLoaded(false);\n        this.wavesurfer.stop();\n        this.wavesurfer = null;\n    }\n\n    updateAudioArea = () => {\n        this.props.onUpdateAudioArea(this.props.fileKey)\n    }\n\n    getExt = (path) => {\n        return (path.match(/(?:.+..+[^\\/]+$)/ig) != null) ? path.split('.').slice(-1)[0] : 'null';\n    }\n\n    txtAreaChangedHandler = (e) => {\n        // console.log(e.currentTarget.value);\n        this.props.onUpdateTxtArea(e.currentTarget.value, null);\n    }\n\n    loadAudioFileForPreview = (audioUrl) => {\n        console.log('loadAudioFileForPreview')\n        if(this.props.waveSurferLoaded){\n            console.log(this.testowy)\n            this.wavesurfer.load(audioUrl);\n        }\n    }\n   \n\n\n    render() {\n\n        //obsluga podgladu pliku txt\n        if (this.props.txtfileName !== '') {\n            if (this.props.txtDisplayed === false) {\n                //console.log('AAAAAA')\n                fetch(this.props.txtFileUrl)\n                    .then((r) => r.text())\n                    .then(text => {\n                        console.log(text)\n                        //console.log(text);\n                        this.props.onUpdateTxtArea(text, this.props.txtfileName)\n                    })\n            }\n        }\n\n        //obsluga podgladu pliku audio\n        if (this.props.audiofileName !== '') {\n            if (this.props.waveSurferLoaded) {\n                if(this.props.audioDisplayed === false){\n                    console.log(\"aaaaaaaa\")\n                    this.loadAudioFileForPreview(this.props.audioFileUrl);\n                }\n                \n            }\n        }\n\n        // //to oznacza ze zakladka jest otworzona gdy \n        // //uzytkownik kliknal w plik w repo\n        // if(this.props.location.state){\n        //     const urlToFile = this.props.location.state.url;\n        //     const fileKey = this.props.location.state.key;\n        //     const fileExt = this.getExt(urlToFile);\n        //     //console.log(urlToFile)\n        //     //console.log(fileExt)\n\n        //     //gdy to jest plik txt\n        //     if(fileExt === 'txt'){\n        //         //aby wykonalo sie tylko raz\n        //         if(this.props.txtDisplayed === false){\n        //             fetch(urlToFile)\n        //             .then((r) => r.text())\n        //             .then(text  => {\n\n        //                 //console.log(text);\n        //                 this.props.onUpdateTxtArea(text, fileKey)\n\n        //             })\n        //         }\n        //     } \n        // }\n\n\n        let headerTxtField = (\n            <p style={{ fontWeight: 'bold' }}>\n                Podgld pliku txt<span style={{ fontSize: 'bigger' }}>\n                    {this.props.txtfileName}\n                </span>\n            </p>\n        );\n\n        let headerAudioField = (\n            <p style={{ fontWeight: 'bold' }}>\n                Podgld pliku audio <span style={{ fontSize: 'bigger' }}>\n                    {this.props.audiofileName}\n                </span>\n            </p>\n        );\n\n        let controlBtns = (\n            <button type=\"button\" onClick={this.handleTogglePlay} className=\"btn btn-primary\" id=\"play\">\n                {\n                this.props.playing? <i className=\"fas fa-pause\"></i>  : <i className=\"fas fa-play\"></i>\n                }\n                                \n            </button>\n        );\n\n\n        return (\n            <Aux>\n\n                <LeftSiteBar\n                    czyTopPart=\"true\"\n                    desc=\"Tutaj opis do podglądu plików\" />\n\n                <SettingBar />\n\n                <section className=\"Content\" data-scrollbar>\n\n                    <div className={[\"container-fluid\", \"TranscriptTool\"].join(' ')}>\n                        <div className=\"tool-desc\">\n\n                            \n                        </div>\n\n                        <div className=\"tool-body\">\n\n                            {headerAudioField}\n                            <div id=\"debuginfo\"></div>\n                            <div id=\"waveform\"></div>\n\n                            {this.props.audioDisplayed? controlBtns: null}\n                            \n\n                            {\n/*\n                                <div class=\"btn-group\" role=\"group\">\n                                    <button type=\"button\" className=\"btn btn-secondary\" id=\"play\"><i className=\"fas fa-play\"></i></button>\n                                    <button type=\"button\" className=\"btn btn-secondary\" id=\"stop\"><i className=\"fas fa-stop\"></i></button>\n                                    <button type=\"button\" className=\"btn btn-secondary\" id=\"back\"><i className=\"fas fa-step-backward\"></i>\n                                        <i className=\"fas fa-stopwatch\"></i></button>\n\n\n                                    <button type=\"button\" className=\"btn btn-secondary\" id=\"zoom\">\n                                        <i className=\"\">+</i>\n                                        <input type=\"range\" data-action=\"zoom\" min=\"1\" max=\"200\" value=\"0\" className=\"form-control-range\" id=\"controlZoom\" />\n                                        <span id=\"\">-</span>\n                                    </button>\n\n                                    <button type=\"button\" className=\"btn btn-secondary\" id=\"loudness\">\n                                        <i className=\"fas fa-volume-up\"></i>\n                                        <input type=\"range\" className=\"form-control-range\" id=\"controlLoudness\" />\n                                        <span id=\"loudness-value\">100%</span>\n                                    </button>\n                                    <button type=\"button\" className=\"btn btn-secondary\" id=\"speed\">\n                                        <i className=\"fas fa-running\"></i>\n                                        <input type=\"range\" data-action=\"speed\" min=\"25\" max=\"400\" value=\"100\" className=\"form-control-range\" id=\"controlSpeed\" />\n                                        <span id=\"speed-value\">100%</span>\n                                    </button>\n\n                                </div>\n*/\n\n                            }\n\n                            <hr />\n\n                            {\n                                /*\n                                                     <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"hmm\">hmm...</button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"szum-przerywany\">szum przerywany</button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"szum-ciagly\">szum ciągły</button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"back-mowcy\">szum mówcy</button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"back-mowcy\">nierozpoznane słowo</button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"back-mowcy\">przerwa</button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"font-up\">\n                                                             <i className=\"fas fa-font\" ></i> <i className=\"fas fa-font\"></i>\n                                                         </button>\n                                                         <button type=\"button\" className=\"btn btn-secondary\" id=\"font-down\">\n                                                             <i className=\"fas fa-font\" ></i> <i className=\"fas fa-font\" ></i>\n                                                         </button>\n                                                     </div>\n                             \n                                            */\n                            }\n\n\n                            <div className=\"form-group\">\n\n                                {headerTxtField}\n\n\n                                <textarea\n                                    className=\"form-control\"\n                                    className=\"TranskriptInput\"\n                                    placeholder=\"Zaznacz plik txt w repozytorium\"\n                                    value={this.props.txtContent}\n                                    onChange={this.txtAreaChangedHandler}\n                                >\n                                </textarea>\n\n                            </div>\n\n                        </div>\n\n                    </div>\n\n                    <FooterTool />\n\n\n                </section>\n\n\n\n            </Aux>\n        );\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        txtContent: state.previewR.txtContent,\n        txtDisplayed: state.previewR.txtDisplayed,\n        txtfileName: state.previewR.txtfileName,\n        txtFileUrl: state.previewR.txtFileUrl,\n\n        audiofileName: state.previewR.audiofileName,\n        audioDisplayed: state.previewR.audioDisplayed,\n        audioFileUrl:  state.previewR.audioFileUrl,\n        waveSurferLoaded: state.previewR.waveSurferLoaded,\n        playing: state.previewR.playing,\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        //onHandleCreateFolder: (key,projectId, userId, token) => dispatch(repoActions.handleCreateFolder(key, projectId, userId, token)),\n        onUpdateTxtArea: (newValue, fileKey) => dispatch(previewActions.updateTxtPreview(newValue, fileKey)),\n        onUpdateAudioArea: (fileKey) => dispatch(previewActions.updateAudioPreview(fileKey)),\n        onWeveSurferLoaded: (ifyes) => dispatch(previewActions.weveSurferLoaded(ifyes)),\n        onTooglePlaying: () => dispatch(previewActions.togglePlaying()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(TranscriptTool));","import * as actionTypes from '../actionsTypes';\nimport axios from 'axios';\n\n export const updateTxtPreview = (newContent, fileName) => {\n    return {\n        type: actionTypes.UPDATE_TXT_PREVIEW,\n        newContent: newContent,\n        fileName: fileName,\n    }\n}\n\nexport const updateAudioPreview = (fileKey) => {\n    return {\n        type: actionTypes.UPDATE_AUDIO_PREVIEW,\n        fileKey: fileKey,\n    }\n}\n\nexport const weveSurferLoaded = (ifyes) => {\n    return {\n        type: actionTypes.WAVESURFER_LOADED,\n        ifYes:ifyes,\n    }\n}\n\nexport const togglePlaying = () => {\n    return {\n        type: actionTypes.TOGGLE_PLAYING_PREVIEW,\n    }\n}\n\n\n\n\nexport const openFilePreview = (file) => {\n    return {\n        type: actionTypes.OPEN_FILE_PREVIEW,\n        fileKey: file.key,\n        fileUrl: file.url,\n    }\n}","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './RepoBar.css';\nimport Moment from 'moment';\nimport FileBrowser, {Icons} from 'react-keyed-file-browser';\nimport { connect } from 'react-redux';\nimport * as repoActions from '../../../store/actions/index';\nimport { Redirect, withRouter } from 'react-router-dom'\n\nclass repoBar extends Component  {\n\n\tstate = {\n\t\topenPreview: false,\n\t}\n\n\tcomponentDidMount() {\n\t\t//wysylam zadanie aby pobrac aktualne pliki w katalogu uzytkownika\n\t\tconst currentProjectID = this.props.currentProjectID;\n\t\tconst currentProjectOwner =  this.props.currentProjectOwner; //Owner id\n\t\tconsole.log(currentProjectID)\n\t\tconsole.log(currentProjectOwner)\n\t\tthis.props.onGetProjectFilesForUser(currentProjectOwner, currentProjectID, this.props.token);\n\t}\n\n\t  handleCreateFolder = (key) => {\n\t\tthis.props.onHandleCreateFolder(key, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token); \n\t  }\n\t  handleCreateFiles = (files, prefix) => {\n\t\tthis.props.onHandleCreateFiles(files, prefix); \n\t  }\n\t  handleRenameFolder = (oldKey, newKey) => {\n\t\tthis.props.onHandleRenameFolder(oldKey, newKey, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t  }\n\t  handleRenameFile = (oldKey, newKey) => {\n\t\tthis.props.onHandleRenameFile(oldKey, newKey, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t  }\n\t  handleDeleteFolder = (folderKey) => {\n\t\tthis.props.onHandleDeleteFolder(folderKey, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t  }\n\t  handleDeleteFile = (fileKey) => {\n\t\tthis.props.onHandleDeleteFile(fileKey, this.props.currentProjectID, this.props.currentProjectOwner, this.props.token);\n\t  }\n\n\t  handleSelect = (key) => {\n\t\tconsole.log(\"handleSelect\")\n\t\tconsole.log(key)\n\t  }\n\n\t  // Called after onSelect, only on file selection\n\t  handleSelectFile = (file) => {\n\t\tconsole.log(\"handleSelectFile\")\n\t\tconsole.log(file)\n\t  }\n\n\t  // Called after onSelect, only on folder selection\n\t  handleSelectFolder = (folder) => {\n\t\tconsole.log(\"handleSelectFolder\")\n\t\tconsole.log(folder)\n\t  }\n\n\t  //dwukrotne klikniecie powoduje uruchomienie w podgladzie\n\t  handlePreviewOpen = (file) => {\n\n\t\tconsole.log(this.props.location.pathname);\n\n\t\t//sprawdzam czy juz jestem na stronie podgladu\n\t\tif(!this.props.location.pathname.includes('preview')){\n\n\t\t\tlet toURL = this.props.match.url + '/preview';\n\t\t\tthis.props.history.push({\n\t\t\t\tpathname: toURL,\n\t\t\t  });\n\t\t}\n\t\n\t\tthis.props.onOpenFilePreview(file);\n\n\t\t\n\n\t\t// console.log(\"handlePreviewOpen\")\n\t\t// console.log(file)\n\t\t// console.log(this.props)\n\t\t// let toURL = this.props.match.url + '/preview';\n\t\t// this.props.history.push({\n\t\t// \tpathname: toURL,\n\t\t// \t//search: '?key='+file.key,\n\t\t// \tstate: { \n\t\t// \t\turl: file.url,\n\t\t// \t\tkey: file.key\n\t\t// \t}\n\t\t//   });\n\t  }\n\n\t  handlePreviewClose = (file) => {\n\t\tconsole.log(\"handlePreviewClose\")\n\t\tconsole.log(file)\n\t  }\n\n\t  handleFolderOpen = (folder) => {\n\t\tconsole.log(\"handleFolderOpen\")\n\t\tconsole.log(folder)\n\t  }\n\n\t  handleFolderClose = (folder) => {\n\t\tconsole.log(\"handleFolderClose\")\n\t\tconsole.log(folder)\n\t  }\n\n\n\t  startResizeRepo=() => {\n\t\twindow.addEventListener('mousemove', this.Resize, false);\n   \t\twindow.addEventListener('mouseup', this.stopResize, false);\n\t  }\n\n\t  \t\n\t  //resize the element\n\t\tResize =(e) =>{\n\t\t\tconst repoBar = document.getElementById('RepoBar');\n\t\t\tconst projectPage = document.getElementById('ProjectPage');\n\t\t\tconst leftSiteBar = document.getElementById('LeftSiteBar');\n\t\t\t//console.log(window.innerWidth - e.clientX);\n\t\t\tlet szerRepo= window.innerWidth - e.clientX;\n\t\t\tlet szerProject = (window.innerWidth-leftSiteBar.offsetWidth) - szerRepo;\n\t\t\trepoBar.style.width = szerRepo + 'px';\n\t\t\tprojectPage.style.width = szerProject + 'px';\n\t\t\t//element.style.height = (e.clientY - element.offsetTop) + 'px';\n\t\t}\n\t\t//on mouseup remove windows functions mousemove & mouseup\n\t\tstopResize = (e) => {\n\t\t\twindow.removeEventListener('mousemove', this.Resize, false);\n\t\t\twindow.removeEventListener('mouseup', this.stopResize, false);\n\t\t}\n\n\trender(){\n\t\twindow.addEventListener('onresize', this.Resize, false);\n\t\n\n\t\tconst mount = document.querySelectorAll('div.demo-mount-nested-editable');\n\n\t\treturn(\n\t\t\t<Aux>\n\t\t\t<div className=\"RepoBar\" id=\"RepoBar\">\n\t\t\t\t<div className=\"topPart\">\n\t\t\t\t\t<div className=\"repoTab\" >\n\t\t\t\t\t\t<div className=\"scrollStrip\"\n\t\t\t\t\t\t\tonMouseDown={this.startResizeRepo}>\n\t\t\t\t\t\t\t\t<i class=\"fas fa-arrows-alt-h\"></i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\tRepozytorium\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"repoNav\" >\n\t\t\t\t\t\tNavigation to repo\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t\n\t\t\t\t<div className=\"mainRepoContent\" data-scrollbar>\n\t\t\t\t\t\n\n\t\t\t\n\n\t\t\t<FileBrowser\n\t\t\t\tfiles={this.props.files}\n\t\t\t\ticons={{\n\t\t\t\t\tFile: <i className=\"fas fa-file\"></i>,\n\t\t\t\t\tImage: <i className=\"fas fa-image\"></i>,\n\t\t\t\t\tPDF: <i className=\"fas fa-file-pdf\"></i>,\n\t\t\t\t\tRename: <i className=\"fas fa-edit\"></i>,\n\t\t\t\t\tFolder: <i className=\"fas fa-folder\"></i>,\n\t\t\t\t\tFolderOpen: <i className=\"fas fa-folder-open\"></i>,\n\t\t\t\t\tDelete:<i className=\"fas fa-trash\"></i>,\n\t\t\t\t\tLoading: <i className=\"fas fa-spinner\"></i>,\n\t\t\t\t  }}\n\n\t\t\t\tonCreateFolder={this.handleCreateFolder} \n\t\t\t\tonCreateFiles={this.handleCreateFiles}\n\t\t\t\tonMoveFolder={this.handleRenameFolder} \n\t\t\t\tonMoveFile={this.handleRenameFile} \n\t\t\t\tonRenameFolder={this.handleRenameFolder} \n\t\t\t\tonRenameFile={this.handleRenameFile} \n\t\t\t\tonDeleteFolder={this.handleDeleteFolder}\n\t\t\t\tonDeleteFile={this.handleDeleteFile} \n\n\t\t\t\t// Always called when a file or folder is selected\n\t\t\t\tonSelect={this.handleSelect}\n\t\t\t\t// Called after onSelect, only on file selection\n\t\t\t\tonSelectFile={this.handleSelectFile}\n\t\t\t\t// Called after onSelect, only on folder selection\n\t\t\t\tonSelectFolder={this.handleSelectFolder}\n\t\t\t\tonPreviewOpen={this.handlePreviewOpen}\n\t\t\t\tonPreviewClose={this.handlePreviewClose}\n\t\t\t\tonFolderOpen={this.handleFolderOpen}\n\t\t\t\tonFolderClose={this.handleFolderClose}\n\n\t// \t\t\tonSelect: (fileOrFolder) => {}, // Always called when a file or folder is selected\n    // onSelectFile: (file) => {}, //    Called after onSelect, only on file selection\n    // onSelectFolder: (folder) => {}, //    Called after onSelect, only on folder selection\n\n    // onPreviewOpen: (file) => {}, // File opened\n    // onPreviewClose: (file) => {}, // File closed\n\n    // onFolderOpen: (folder) => {}, // Folder opened\n    // onFolderClose: (folder) => {}, // Folder closed\n\t\t\t\n\n\t\t\t/>\n\n\t\t\t{mount[0]}\n\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t\n\t\t\t</Aux>\n\t\t);\n\t}\n    \n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t  currentProjectID: state.projectR.currentProjectID,\n\t  currentProjectName: state.projectR.currentProjectName,\n\t  currentProjectOwner: state.projectR.currentProjectOwner,\n\t  files: state.repoR.files,\n\t  token: state.homeR.token,\n\t}\n  }\n  \n  const mapDispatchToProps = dispatch => {\n\treturn {\n\t\tonHandleCreateFolder: (key,projectId, userId, token) => dispatch(repoActions.handleCreateFolder(key, projectId, userId, token)),\n\t\tonHandleCreateFiles: (files, prefix) => dispatch(repoActions.handleCreateFiles(files, prefix)),\n\t\tonHandleRenameFolder: (oldKey, newKey,projectId, userId, token) => dispatch(repoActions.handleRenameFolder(oldKey, newKey, projectId, userId, token)),\n\t\tonHandleRenameFile: (oldKey, newKey, projectId, userId, token) => dispatch(repoActions.handleRenameFile(oldKey, newKey, projectId, userId, token)),\n\t\tonHandleDeleteFolder: (folderKey, projectId,userId, token) => dispatch(repoActions.handleDeleteFolder(folderKey, projectId,userId, token)),\n\t\tonHandleDeleteFile: (fileKey, projectId, userId, token) => dispatch(repoActions.handleDeleteFile(fileKey, projectId, userId, token)),\n\t\tonGetProjectFilesForUser: (userId, projectId, token) => dispatch(repoActions.getProjectFilesForUser(userId,projectId, token)),\n\t\tonOpenFilePreview: (file) => dispatch(repoActions.openFilePreview(file)),\n\t}\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(repoBar));","import React from 'react';\nimport Aux from '../../hoc/Auxiliary';\n\nconst errorPage = (props) => {\n\n   \n    return(\n        <Aux>\n            <p>Ups.... coś poszło nie tak</p>\n        </Aux>\n    );\n}\n\nexport default errorPage;","import React from 'react';\nimport Aux from '../../../../hoc/Auxiliary';\nimport './Tab.css';\nimport { NavLink } from 'react-router-dom';\nimport {withRouter} from 'react-router-dom';\n\n\nconst tab = (props) => {\n\n    let klasy = [\"nav-link\", \"clarinNavLink\"];\n\n \n\n    return(\n        <Aux>\n             <li className=\"nav-item\">\n                 {\n                     /*\n                        <a className={klasy.join(' ')} \n                        href=\"#\"\n                        onClick = {()=> props.whenClickTab(props.title)}>{props.title}</a>                       \n                        */\n                 }\n\n                    <NavLink className={klasy.join(' ')} \n                       to={{\n                           pathname: props.match.url + '' + props.whereToLink,\n                           search: '',\n                           activeClassName: 'active' \n                       }}>{props.title}</NavLink>\n\n                    \n                \n            </li>\n        </Aux>\n    );\n}\n\nexport default withRouter(tab);","import React, { Component } from 'react';\nimport './ProjectPage.css';\nimport Aux from '../../hoc/Auxiliary';\n\nimport { connect } from 'react-redux';\n\nimport Dashboard from './Dashboard/Dashboard';\nimport RecognitionTool from './RecognitionTool/RecognitionTool';\nimport SegmentTool from './SegmentTool/SegmentTool';\nimport TranscriptTool from './PreviewTool/TranscriptTool';\n\nimport RepoBar from './RepoBar/RepoBar';\nimport ErrorPage from '../../components/ErrorPage/ErrorPage';\n\nimport TopBar from '../../components/TopBar/TopBar';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Tab from '../ProjectPage/TabContainer/Tab/Tab';\nimport * as projectActions from '../../store/actions/index';\n\n//import axios from '../../axios-speechtools';\n\nclass ProjectPage extends Component {\n\n\n  componentWillMount = () => {\n\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n\n    if (new Date(expiryDate) <= new Date()) {\n      this.props.onLogOut(); \n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const userName = localStorage.getItem('userName');\n    const remainingMilliseconds =\n    new Date(expiryDate).getTime() - new Date().getTime();\n\n    console.log(userId)\n    console.log(userName)\n    console.log(token)\n    this.props.onSetLoggedIn(userId,userName, token);    \n\n    //laduje podstawowe informacje o projekcie\n    //pozostale rzeczy beda pochodzic z serwera i db\n\n    //jezeli user przeszedl do projektu z listy projektow\n    if(this.props.location.state) {\n      \n      const projectId = this.props.match.params.projectID;\n      const projectTitle = this.props.location.state.projectTitle;\n      const projectOwnerId = this.props.location.state.projectOwner;\n\n      this.props.onInitProjectHandler(projectId, projectTitle, projectOwnerId);\n      this.props.onClearRecoStore();\n      this.props.onClearSegmentStore();\n      this.props.onClearPreviewStore();\n    }\n\n  }\n\n  render() {\n\n    return (\n        <Aux>\n         \n            <TopBar \n                  version=\"longinit\" \n                  wide=\"yes\" \n                  language=\"pl\" \n                  projectTitle={\"\"+this.props.currentProjectName}\n                  changeLn = {this.props.changeLn}\n                  currLn = {this.props.currLn}/>\n            {/*\n            <LeftSiteBar czyTopPart=\"true\" />\n            */}\n            \n\n            <div className=\"ProjectPage\" id=\"ProjectPage\">\n \n              <ul className={[\"nav nav-tabs\", \"darkbg\"].join(' ')}>\n                  <Tab  title=\"Dashboard\" whereToLink={'/dashboard'}/>\n                  <Tab  title=\"Rozpoznawanie\" whereToLink={'/recognition'}/>\n                  <Tab  title=\"Sementacja\" whereToLink={'/segment'}/>\n                  <Tab  title=\"Podgląd plików\" whereToLink={'/preview'}/>                  \n              </ul>\n            \n              <Switch>\n                <Route path={this.props.match.url + '/recognition'} component={RecognitionTool} />\n                <Route path={this.props.match.url + '/segment'} component={SegmentTool} />\n                <Route path={this.props.match.url + '/preview'} component={TranscriptTool} />\n                <Route path={this.props.match.url + '/dashboard'} render={(props)=> {\n                  return <Dashboard/>\n                }} />\n                <Redirect from={this.props.match.url + '/'} to={this.props.match.url + '/dashboard'} />\n                <Route component={ErrorPage}/> \n              </Switch>\n              \n\n            </div>\n\n            <RepoBar />\n          \n        </Aux>\n      \n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentProjectID: state.projectR.currentProjectID,\n    currentProjectName: state.projectR.currentProjectName,\n    currentProjectOwner: state.projectR.currentProjectOwner,\n    \n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n     onInitProjectHandler: (projectId, projectTitle, projectOwner) => dispatch(projectActions.initProject(projectId, projectTitle, projectOwner)),\n     onSetLoggedIn:(userId, userName, token) => dispatch(projectActions.setLoggedIn(userId, userName, token)),\n     onLogOut: () => dispatch(projectActions.logout()),\n     onClearRecoStore: () => dispatch(projectActions.clearRecoStore()),\n     onClearSegmentStore: () => dispatch(projectActions.clearSegmentStore()),\n     onClearPreviewStore: () => dispatch(projectActions.clearPreviewStore()),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectPage);\n","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './ProjectListItem.css';\nimport {Link} from 'react-router-dom';\n\n\nconst projectListItem = (props) => {\n\n    \n\n          // console.log(props.key)\n\n    return(\n        <Aux>\n             <tr className=\"ProjectListItem\">   \n                <td className=\"projectTitle\">\n\n                     \n                    <Link to={{\n                            pathname: \"/projects/\" + encodeURIComponent(props.projektID),\n                            state: {\n                                projectTitle: props.title,\n                                projectOwner: props.owner,\n                            }\n                        }}> {props.title}</Link>\n\n                </td>\n                {\n                    //<td>{props.owner}</td>\n                }\n                \n                <td>{props.modified}</td>\n                <td>\n                    {\n                    //<span onClick={props.duplicateProject}><i className={[\"fas\", \"fa-clone\", \"ProjectIcon\"].join(' ')}></i></span>\n                    //<span onClick={props.shareProject}><i className={[\"fas\", \"fa-share-alt\", \"ProjectIcon\"].join(' ')}></i></span>\n                    }\n                    <span onClick={props.editName}><i className={[\"fas\", \"fa-pen\", \"ProjectIcon\"].join(' ')}></i></span>\n                    <span onClick={props.deleteProject}><i className={[\"fas\", \"fa-trash-alt\", \"ProjectIcon\"].join(' ')}></i></span>\n                </td>\n\t\t\t</tr>\n        </Aux>\n    );\n}\n\nexport default projectListItem;","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\nimport './ProjectList.css';\n\nconst projectsList = (props) => {\n\n    const ifLoading = props.ifLoading;\n\n     const listHeader = (\n            <tr className=\"thead-dark\">\n                <td className=\"title\">Tytuł</td>\n                {\n                    //<tSuperMpongoDBd >Właściciel</td>\n                }\n                \n                <td >Data utworzenia</td>\n                <td >Akcje</td>\n            </tr>\n        );\n \n\n    return(\n        <Aux>\n            <div className={\"ProjectList\"}>\n                {props.siteBar}\n                <table className=\"table\">\n                    <tbody>\n                        {listHeader}\n                        {props.children}\n                    </tbody>\n                </table>\n            </div>\n        </Aux>\n    );\n}\n\nexport default projectsList;","import React from 'react';\nimport './Spinner.css';\n\nconst spinner = (props) => {\n\n\n    return(\n        <div className=\"Spinner\">\n            <div className=\"lds-facebook\">\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n        </div>\n    )\n}\n\nexport default spinner;","import React, { Component } from 'react';\n\n\nclass SingleInputForm extends Component {\n\n    state = {\n        value: '',\n        isValid: false,\n    }\n\n\n    render() {\n\n        const errorMessage = this.props.errorMessage || false;\n\n        \n\n        return (\n\n            \n\n            <form onSubmit={this.props.onSubmitHandler}>\n                <h5 style={{textAlign:'left'}}>{this.props.title}</h5>\n                <hr/>\n                {\n                    errorMessage !== false ?\n                        <div className=\"alert alert-danger\" role=\"alert\">\n                            {this.props.errorMessage}\n                        </div> : null\n                }\n                <div className=\"input-group mb-3\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder={this.props.placeholder}\n                        onChange={this.props.onChangeHandler}\n                        value={this.props.value} />\n                    <div className=\"input-group-append\">\n                        <button\n                            className=\"btn btn-primary\"\n                            type=\"submit\"\n                        >\n                            {this.props.buttonLabel}\n                        </button>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default SingleInputForm","import React from 'react';\nimport Aux from '../../../hoc/Auxiliary';\n\n\nconst confirmationForm = (props) => {\n    \n        return (\n            <Aux>\n                <div className=\"alert alert-warning\" role=\"alert\">\n\n                     <p style={{textAlign:'center'}}>{props.messageQuestion}</p>\n                     <p style={{textAlign:'center',fontWeight:'bold'}}>{props.projectName}</p>\n\n                </div>\n                \n                <button \n                    className=\"btn btn-outline-secondary\"\n                    onClick={props.onCancel}>\n                    Cancel\n                </button>\n\n                <button \n                    className=\"btn btn-primary\"\n                    onClick={props.onOk}>\n                    OK\n                </button>\n\n            </Aux>\n        )\n}\n\nexport default confirmationForm","import React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliary';\nimport ProjectListItem from './ProjectListItem/ProjectListItem';\nimport LeftSiteBar from '../ProjectPage/LeftSiteBar/LeftSiteBar';\nimport ProjectsList from './ProjectsList/ProjectList';\nimport TopBar from '../../components/TopBar/TopBar';\nimport { Route } from 'react-router-dom';\nimport ProjectPage from '../ProjectPage/ProjectPage';\nimport Modal from '../../components/UI/Modal/Modal';\nimport { connect } from 'react-redux';\nimport * as projectListActions from '../../store/actions/index';\nimport ButtonLeftBar from '../../components/UI/ButtonLeftBar/ButtonLeftBar';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport SingleInputForm from '../../components/UI/SingleInputForm/SingleInputForm';\nimport ConfirmationForm from '../../components/UI/ConfirmationForm/ConfirmationForm';\n\nconst localActions = {\n  CREATE_NEW_PROJECT: 'CREATE_NEW_PROJECT',\n  EDIT_NAME_PROJECT: 'EDIT_NAME_PROJECT',\n  DELETE_PROJECT: 'DELETE_PROJECT',\n}\n\nclass ProjectsListPage extends Component {\n\n  state = {\n    modalDisplay: false,\n    newProjectName: '',\n    modalTitle: '', //tytutl okna modalnego\n    currentValue: '', //wpisywany do okna modalnego\n  }\n\n\n  componentDidMount = () => {\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.props.onLogOut(); \n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const userName = localStorage.getItem('userName');\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n\n    console.log(userId)\n    console.log(userName)\n    console.log(token)\n    this.props.onSetLoggedIn(userId,userName, token);\n    //this.setState({ isAuth: true, token: token, userId: userId });\n    //this.setAutoLogout(remainingMilliseconds);\n    \n    this.props.onGetProjectsList(userId, token);\n\n  }\n\n  // logoutHandler = () => {\n  //   this.props.onLogout();\n  // };\n\n  // setAutoLogout = milliseconds => {\n  //   setTimeout(() => {\n  //     this.logoutHandler();\n  //   }, milliseconds);\n  // };\n\n  duplicateProjectHandler = (projectIndex) => {\n    alert('duplicate');\n  }\n\n  editNameProjectHandler = (projectIndex) => {\n    alert('edit');\n  }\n\n  shareProjectHandler = (projectIndex) => {\n    alert('share');\n  }\n\n  removeProjectHandler = (projectIndex) => {\n    alert('remove');\n  }\n\n  // wyborProjektuHandler = (projektIndex, projectName) => {\n  //   //const currlocation = this.props.match.url;\n  //   //wrzucam parametry do URL\n  //   const queryParams = [];\n  //   this.props.history.push({\n  //     pathname: \"/projects/\" + encodeURIComponent(projektIndex),\n  //     search: '',\n  //     key: encodeURIComponent(projektIndex)\n  //   });\n  // }\n\n  //prosty validator...\n  checkValidity = (value) => {\n    let isValid = true;\n\n    //bardzo prosta validacja po stronie przegladarki\n    //taka sama jest po stronie serwera\n    //nie moze byc puste i musi miec min. 3 znaki\n    //isValid = value.trim() !== '' && isValid;\n    //isValid = value.length >= 3 && isValid;\n\n    return isValid;\n  }\n\n  addNewProjectHandler = (event) => {\n   \n    event.preventDefault();\n    // dodaje nowy projekt tutaj TO DO\n    let formIsValid = this.checkValidity(this.state.newProjectName);\n    //console.log(formIsValid);\n    \n    if(formIsValid){\n      this.props.onNewProject(this.state.newProjectName, this.props.userId, this.props.token);\n\n    } else {\n      console.log('FORM IS INVALID!');\n    }\n  }\n\n  // changeNameProjectHandler = (event) => {\n  //   event.preventDefault();\n    \n  //   let formIsValid = this.checkValidity(this.state.newProjectName);\n  //   if(formIsValid){\n  //     //console.log(this.state.newProjectName)\n  //     this.props.onNewNameProject(this.state.newProjectName);\n\n  //   } else {\n  //     console.log('FORM IS INVALID!');\n  //   }\n  // }\n\n  newProjectNameChangeHandler = (event) => {\n    //console.log(event.target.value)\n    console.log('newProjectNameChangeHandler');\n    event.preventDefault();\n    this.setState({\n      newProjectName: event.target.value,\n    })\n  }\n\n  editProjectNameSubmitHandler = (event) => {\n    event.preventDefault();\n    this.props.onNameEdit(\n      this.props.projectId, \n      this.state.newProjectName,\n      this.props.userId,\n      this.props.token)\n  }\n\n  \n  onNewProjectDone = () => {\n    this.closeModalHandler()\n  }\n\n  \n\n\n  //otwiera okno modalne\n  openModalHandler = (actionType, projectId, projectName) => {\n    this.setState({\n      newProjectName: projectName,\n    })\n    this.props.onOpenModalHandler(actionType,projectId, projectName);\n  }\n\n  //zamyka okno modalne\n  closeModalHandler = () => {\n    this.props.onCloseModalHandler();\n  }\n\n  removeProjectHandler = (projectId) => {\n    this.props.onDelete(projectId, this.props.userId, this.props.token);\n  }\n\n  \n  render() {\n\n    //tworze formularz ktory pokaze sie w oknie modalnym\n    //w zaleznosci ktory przycisk zostal wcisniety\n\n    //formularz dodawania nazwy dla nowego projektu\n    const newProjectForm = (\n      <Aux>\n        <SingleInputForm\n          onSubmitHandler={this.addNewProjectHandler}\n          onChangeHandler={this.newProjectNameChangeHandler}\n          title=\"Stworz nowy projekt\"\n          placeholder=\"Podaj nazwe projektu\"\n          buttonLabel=\"Dodaj projekt\"\n          value = {this.state.newProjectName}\n          errorMessage = {this.props.errorMessage}\n        />\n      </Aux>\n    );\n\n    //formularz edycji nazwy projektu\n    const editProjectName = (\n      <Aux>\n        <SingleInputForm\n          onSubmitHandler={this.editProjectNameSubmitHandler}\n         // onSubmitHandler={this.props.onNameEdit(this.props.projectId, this.state.newProjectName)}\n          //onSubmitHandler={this.props.onNameEdit(this.props.projectId, this.state.newProjectName)}\n          onChangeHandler={this.newProjectNameChangeHandler}\n          title=\"Edytuj nazwe projektu\"\n          placeholder=\"Zmie nazwe projektu\"\n          buttonLabel=\"Zmien\"\n          value = {this.state.newProjectName}\n          errorMessage = {this.props.errorMessage}\n        />\n      </Aux>\n    );\n\n    const deleteProject = (\n      <Aux>\n        <ConfirmationForm\n          messageQuestion={\"Czy na pewnoe chcesz usunac projekt?\"}\n          onCancel={this.closeModalHandler}\n          onOk = {(projectId)=>this.removeProjectHandler(this.props.projectId)}\n          projectName = {this.props.projectName}\n        />\n      </Aux>\n    );\n\n    let modalContent = null;\n  \n\n    switch(this.props.localAction){\n      case(localActions.CREATE_NEW_PROJECT):\n        modalContent = newProjectForm;\n        break;\n      case(localActions.EDIT_NAME_PROJECT):\n        modalContent = editProjectName;\n        break;\n      case(localActions.DELETE_PROJECT):\n        modalContent = deleteProject;\n        break;\n      default:\n        modalContent = <p>Bledny typ akcji lokalnej</p>\n    }\n    \n\n    //lewy sidebar\n    const leftSiteBar = (\n      <LeftSiteBar czyTopPart={false} desc=\"Tutaj opis do listy projektow\" >\n        <ButtonLeftBar\n          customeStyle={{ height: '50px' }}\n          napis=\"Dodaj projekt\"\n          iconType=\"fa-plus\"\n          whenClicked={(actionType)=>this.openModalHandler(localActions.CREATE_NEW_PROJECT,'','')} />\n      </LeftSiteBar>\n    )\n\n    //co wyswietlic\n    let toDisplay = null;\n\n    //sama lista projektow\n    let projectList = null;\n\n    if (!this.props.ifError) {\n      //console.log(this.props.ifProjectsLoading)\n      //jak nie ma error to sprawdzam czy sie laduja dane\n      if (this.props.ifProjectsLoading) {\n        toDisplay = <Spinner />\n      } else {\n\n       // console.log(this.props.projectList);\n\n        projectList = this.props.projectList\n          .map((projekt, i) => {\n            //console.log(projekt)\n            return <ProjectListItem\n              key={projekt._id}\n              projektID={projekt._id}\n              title={projekt.name}\n              owner={projekt.owner}\n              modified={projekt.createdAt}\n              deleteProject={(actionType,projectId, projectName)=>this.openModalHandler(localActions.DELETE_PROJECT, projekt._id, projekt.name)}\n              wyborprojektu={() => this.props.onProjectChoice(projekt._id, projekt.name, projekt.owner)}\n              //duplicateProject={() => this.props.onDuplicate(projekt._id)}\n              editName={(actionType,projectId, projectName)=>this.openModalHandler(localActions.EDIT_NAME_PROJECT,projekt._id, projekt.name)}\n   \n              //shareProject={() => this.props.onShare(projekt._id)}\n              //deleteProject={() => this.props.onDelete(projekt._id)}\n            />\n          });\n\n        toDisplay = (\n          <ProjectsList siteBar={leftSiteBar}>\n\n            {projectList}\n\n          </ProjectsList>\n        );\n\n      }\n\n    } else {\n      //kiedy jest error\n      toDisplay = <p className=\"error\">Error with connecting to server</p>;\n    }\n\n\n    return (\n      <Aux>\n\n        <Route path=\"/project/\" render={(props) => (\n          <ProjectPage {...props} />\n        )} />\n\n\n        <Modal\n          show={this.props.modalDisplay}\n          modalClosed={this.closeModalHandler}\n          >\n            {modalContent}\n        </Modal>\n\n\n        <TopBar\n          version=\"init\"\n          wide=\"yes\"\n          language=\"pl\"\n          projectTitle=\"\"\n          changeLn={this.props.changeLn}\n          currLn={this.props.currLn} />\n\n        {leftSiteBar}\n\n        {\n          toDisplay\n        }\n\n      </Aux>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    userId: state.homeR.userId,\n    userName: state.homeR.userName,\n    token: state.homeR.token,\n    localAction: state.prolistR.localAction,\n    modalDisplay: state.prolistR.modalDisplay,\n    newProjectCreated: state.prolistR.loaded,\n    projectList: state.prolistR.projects,\n    ifError: state.prolistR.error,\n    errorMessage: state.prolistR.errorMessage,\n    ifProjectsLoading: state.prolistR.projectsLoading,\n    projectId: state.prolistR.projectId,  //wiem ktorego projektu dotyczy kliknieta akcja\n    projectName: state.prolistR.projectName,  //oraz jaka jest nazwa obecnego projektu\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOpenModalHandler: (actionType,projectId, projectName) => dispatch(projectListActions.openModal(actionType,projectId, projectName)),\n    onCloseModalHandler: () => dispatch(projectListActions.closeModal()),\n    onNewProjectDone: () => dispatch(projectListActions.addNewProjectDone()),\n    onNewProject: (projectName, userId, token) => dispatch(projectListActions.addNewProject(projectName, userId, token)),\n    onProjectChoice: (projectId, projectName, projectOwner) => dispatch(projectListActions.projectChoice(projectId, projectName, projectOwner)),\n   // onDuplicate: (projectId) => dispatch(projectListActions.duplicateProject(projectId)),\n   // onShare: (projectId) => dispatch(projectListActions.shareProject(projectId)),\n    onDelete: (projectId, userId, token) => dispatch(projectListActions.deleteProject(projectId, userId, token)),\n    onNameEdit: (projectId, newProjectName,userId, token) => dispatch(projectListActions.editName(projectId, newProjectName,userId, token)),\n    onGetProjectsList: (userId, token) => dispatch(projectListActions.getProjectsList(userId, token)),\n    onSetLoggedIn:(userId, userName, token) => dispatch(projectListActions.setLoggedIn(userId, userName, token)),\n    onLogOut: () => dispatch(projectListActions.logout()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsListPage);\n\n","import * as actionTypes from './actionsTypes';\nimport axios from 'axios';\n\n//otwieram okno modalne\nexport const openModal = (actionType, projectId, projectName) => {\n    return {\n        type: actionTypes.OPEN_MODAL,\n        localActionType: actionType,\n        projectId: projectId,\n        projectName: projectName\n    }\n}\n\n//zamykam okno modalne\nexport const closeModal = () => {\n    return {\n        type: actionTypes.CLOSE_MODAL,\n    }\n}\n\n\n//###########################################\n//#########  pobieram liste projektow #########\n//###########################################\n\nexport const getProjectsListAction = (userId, projects) => {\n    //console.log(projects)\n    return {\n        type: actionTypes.GET_PROJECTS_LIST,\n        userId: userId,\n        projects: projects,\n    }\n}\n\nexport const getProjectsListFailed = (error) => {\n    return {\n        type: actionTypes.GET_PROJECTS_LIST_FAILED,\n        error: error\n    }\n}\n\nexport const getProjectsList = (userId, token) => {\n    return dispatch => {\n        //const header = Authorization: `Bearer-${token}`;\n        //return axios.get(URLConstants.USER_URL, { headers: { header } });\n        axios.get('/projectsList',{\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        })\n            .then(response => {\n                console.log(response)\n                dispatch(getProjectsListAction(userId, response.data.projects));\n            })\n            .catch(error => {\n                dispatch(getProjectsListFailed(error));\n            });\n    }\n}\n\n//##################################################\n//#########  dodaje projekt ##########\n//##################################################\nexport const addNewProjectAction = (projectName, messageFromServer, responsedNewProject, userId, token) => {\n    return {\n        type: actionTypes.ADD_PROJECT,\n        projectName: projectName,\n        messageFromServer: messageFromServer,\n        responsedNewProject: responsedNewProject,\n        userId: userId,\n        token: token,\n    }\n}\n\nexport const addNewProjectActionFailed = (error) => {\n    return {\n        type: actionTypes.ADD_PROJECT_FAILED,\n        errorMessage: error\n    }\n}\n\nexport const initNewProjectAction = () => {\n    return {\n        type: actionTypes.ADD_PROJECT_INIT,\n    }\n}\n\nexport const addNewProjectDone = () => {\n    return {\n        type: actionTypes.ADD_PROJECT_DONE,\n    }\n}\n\nexport const addNewProject = (projectName, userId, token) => {\n    return dispatch => {\n        //ustawiam loaded na false w reducerze aby wylaczyc okienko dopiero gdy sie zaladuje\n        dispatch(initNewProjectAction())\n\n        axios.post('/projectsList', {\n                projectName: projectName,\n            },{\n                headers: {\n                    Authorization: 'Bearer ' + token\n            }})\n            .then(response => {\n                //console.log(\"from action:\")\n                //console.log(response)\n                dispatch(addNewProjectAction(projectName, response.data.message, response.data.project, userId, token));\n                dispatch(addNewProjectDone());\n            })\n            .catch(error => {\n                dispatch(addNewProjectActionFailed(error));\n            });\n    }\n}\n\n//########################################\n//#########  wybieram  projekt ##########\n//########################################\nexport const projectChoice = (projectId, projectName, projectOwner) => {\n    return {\n        type: actionTypes.CHOSE_PROJECT,\n        projectId: projectId,\n        projectName: projectName,\n        projectOwner: projectOwner,\n    }\n}\n\nexport const duplicateProject = (projectId) => {\n    return {\n        type: actionTypes.DUPLICATE_PROJECT,\n        projectId: projectId\n    }\n}\n\nexport const shareProject = (projectId) => {\n    return {\n        type: actionTypes.SHARE_PROJECT,\n        projectId: projectId\n    }\n}\n\n//################################################\n//################## USUWANIE PROJEKTU ###############\n//################################################\n\nexport const deleteProjectAction = (projectId, message,userId, token) => {\n    return {\n        type: actionTypes.REMOVE_PROJECT,\n        projectId: projectId,\n        message: message,\n        userId: userId,\n        token: token,\n    }\n}\n\nexport const deleteProject = (projectId, userId, token) => {\n    return dispatch => {\n     \n        axios.delete('/projectsList/' + projectId, {\n             data: { idprojektu: projectId },\n             headers: {\n                Authorization: 'Bearer ' + token\n            } \n        })\n            .then(response => {\n                if(response.status !== 200 && response.status !== 201){\n                    throw new Error('Deleting a project failed');\n                }\n                dispatch(deleteProjectAction(response.data.projectId, response.data.message, userId, token));\n                dispatch(closeModal());\n            })\n            .catch(error => {\n                console.log(error)\n               // dispatch(editNameProjectActionFailed(error));\n            });\n    }\n}\n\n//################################################\n//################## EDYCJA NAZWY ###############\n//################################################\n\nexport const editNameProjectAction = (projectId, newProjectName, messageFromServer, userId, token) => {\n    return {\n        type: actionTypes.EDIT_NAME,\n        projectId: projectId,\n        newProjectName: newProjectName,\n        message: messageFromServer,\n        userId: userId,\n        token: token,\n    }\n}\n\nexport const editNameProjectActionFailed = (error) => {\n    return {\n        type: actionTypes.EDIT_NAME_FAILED,\n        error: error.message\n    }\n}\n\nexport const editName = (projectId, newName, userId, token) => {\n    return dispatch => {\n\n        //console.log('EDIT NAME')\n        axios.put('/projectsList/' + projectId, {\n            newProjectName: newName,\n            projectId: projectId,\n        },{\n            headers: {\n                Authorization: 'Bearer ' + token\n            }\n        })\n            .then(response => {\n                //console.log(\"from action:\")\n                //console.log(response)\n                dispatch(editNameProjectAction(response.data.projectEntry._id, response.data.projectEntry.name, response.data.message, userId, token));\n                dispatch(closeModal());\n            })\n            .catch(error => {\n                console.log(error)\n                dispatch(editNameProjectActionFailed(error));\n            });\n    }\n\n}\n\n\n\n","import React from 'react';\nimport TopBar from '../TopBar/TopBar';\nimport Aux from '../../hoc/Auxiliary';\n\nconst helpPage = (props) => {\n    return (\n        <Aux>\n            <TopBar \n                    version=\"init\" \n                    wide=\"no\" \n                    language=\"pl\" \n                    projectTitle=\"\"\n                    changeLn = {props.changeLn}\n                    currLn = {props.currLn}\n                    />\n            <h2>Tutaj będzie strona pomocy</h2>\n        </Aux>\n        \n    );\n}\n\nexport default helpPage;","import React, {Component} from 'react';\nimport './App.css';\nimport HomePage from './containers/HomePage/HomePage';\nimport {Route, Switch} from 'react-router-dom';\nimport ProjectPage from './containers/ProjectPage/ProjectPage';\nimport ProjectsListPage from './containers/ProjectsListPage/ProjectsListPage';\nimport HelpPage from './components/HelpPage/HelpPage';\nimport {IntlProvider, addLocaleData} from 'react-intl';\nimport {connect} from 'react-redux';\nimport * as homeActions from './store/actions/index';\n\nimport en from 'react-intl/locale-data/en';\nimport pl from 'react-intl/locale-data/pl';\n\nimport messages_pl from \"./translations/pl.json\";\nimport messages_en from \"./translations/en.json\";\n\naddLocaleData([...en, ...pl]);\n\nconst messages = {\n  'pl': messages_pl,\n  'en': messages_en\n};\n\nconst language = navigator.language.split(/[-_]/)[0];  // language without region code\n\nclass App extends Component{\n\n  state = {\n    currln: \"pl\",\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n    const expiryDate = localStorage.getItem('expiryDate');\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.logoutHandler();\n      return;\n    }\n    const userId = localStorage.getItem('userId');\n    const userName = localStorage.getItem('userName');\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    this.props.onSetLoggedIn(userId, userName, token)\n    //this.setState({ isAuth: true, token: token, userId: userId });\n    this.setAutoLogout(remainingMilliseconds);\n  }\n\n  logoutHandler = () => {\n    this.props.onLogout();\n  };\n\n  setAutoLogout = milliseconds => {\n    setTimeout(() => {\n      this.logoutHandler();\n    }, milliseconds);\n  };\n\n \n\n  changeLnHandler=(ln)=>{\n    this.setState({\n      currln: ln,\n    })\n  }\n\n  render(){\n\n   \n    if(this.props.chosenProjectID !== null){\n\n    }\n\n    return (\n      <div className=\"App\">\n        <IntlProvider locale={this.state.currln} defaultLocale=\"pl\" messages={messages[this.state.currln]}>\n\n           \n           {\n            \n            }\n            \n\n            <Switch>\n\n                    <Route path=\"/projects/:projectID\" render={(props) => (\n                       <ProjectPage {...props} \n                            changeLn={this.changeLnHandler}\n                            currLn = {this.state.currln} />\n                    )}/>\n\n                  <Route path=\"/projectsList\" render={(props) => (\n                       <ProjectsListPage {...props} \n                            changeLn={this.changeLnHandler} \n                            currLn = {this.state.currln}/>\n                    )}/>\n\n                    <Route path=\"/help\" render={(props) => (\n                       <HelpPage {...props} \n                            changeLn={this.changeLnHandler}\n                            currLn = {this.state.currln} />\n                    )}/>\n                    <Route path=\"/\" render={(props) => (\n                       <HomePage {...props} \n                            changeLn={this.changeLnHandler}\n                            currLn = {this.state.currln} />\n                    )}/>\n            </Switch>\n        </IntlProvider>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n      isAuth: state.homeR.isAuth,\n      chosenProjectID: state.prolistR.chosenProjectID\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(homeActions.logout()),\n   // this.setState({ isAuth: true, token: token, userId: userId });\n    onSetLoggedIn: (userId, userName, token) => dispatch(homeActions.setLoggedIn(userId,userName, token))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport const updateObject = (oldObject, updatedValues) => {\n    return {\n        ...oldObject,\n        ...updatedValues\n    }\n}","import * as actionTypes from '../actions/actionsTypes';\nimport {updateObject} from '../utility';\n\nconst initialState = {\n    isAuth: false,\n    email: '',\n    pass: '',\n    userName: '',\n    registrationMessage: '',\n    loginMessage: '',\n\n    token: '',\n    authLoading: false,\n    userId: '',\n    error: '',\n\n    autoLogoutAfter: 0 //po ilu milisekundach bedzie wylogowanie\n}\n\nconst logIn = (state, action) => {\n       // console.log(action)\n        return updateObject(state,{\n            isAuth: action.isAuth,\n            userName: action.userName,\n            token: action.token,\n            authLoading: action.authLoading,\n            userId:action.userId\n        });\n}\n\nconst logInFailed = (state, action) => {\n    return updateObject(state,{\n        isAuth: action.isAuth,\n        token: action.token,\n        authLoading: action.authLoading,\n        userId:action.userId\n    });\n}\n\nconst register = (state, action) => {\n    const message = action.message;\n    const userId = action.userId;\n \n\n    return updateObject(state,{\n        isAuth: false,\n        registrationMessage: message\n    });\n}\n\nconst registerFailed = (state, action) => {\n    const message = action.message;\n    const userId = action.userId;\n \n    return updateObject(state,{\n        isAuth: false,\n        registrationMessage: message\n    });\n}\n\nconst autoLogout = (state,action) => {\n    const autoLogoutAfter = action.autoLogoutAfter;\n    return updateObject(state,{\n        autoLogoutAfter: autoLogoutAfter\n    });\n}\n\nconst logOut = (state,action) => {\n\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiryDate');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userName');\n    \n    return updateObject(state,{\n        isAuth: false,\n        token:'',\n        userId:'', \n    });\n}\n\n\nconst homeReducer = (state = initialState, action) => {\n\n    switch(action.type){\n        case actionTypes.LOG_IN: return logIn(state, action);\n        case actionTypes.LOG_OUT: return logOut(state, action);\n        case actionTypes.LOG_IN_FAILED: return logInFailed(state, action);\n        case actionTypes.REGISTER: return register(state,action); \n        case actionTypes.REGISTER_FAILED: return registerFailed(state,action);\n        case actionTypes.SET_AUTO_LOGOUT: return autoLogout(state,action);         \n    }\n\n    return state;\n}\n\nexport default homeReducer;","import * as actionTypes from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\nimport axios from 'axios';\n\nconst initialState = {\n    projects: [],\n    error: false,          //gdy wystapi error z polaczeniem z api \n    projectsLoading: true, //gdy laduja sie dane z serwera\n\n    chosenProjectID: '',    //dane wybranego projektu\n    chosenProjectName: '',\n    chosenProjectOwner: '',\n\n    loaded: false, //gdy projekt z serwera juz sie zaladowal\n    errorMessage: '',   //gdy nie przejdzie validacji po stronie serwera\n    modalDisplay: false, //czy pokazywac modal\n\n    localAction: '', //po kliknieciu w przycisk wywolujacy okno modalne wiem po co zostalo ono klikniete\n    projectId: '',  //wiem ktorego projektu dotyczy kliknieta akcja\n    projectName: '',  //oraz jaka jest nazwa obecnego projektu\n}\n\nconst choseProject = (state, action) => {\n  \n    return updateObject(state, { \n        chosenProjectID: action.projectId, \n        chosenProjectName: action.projectName,\n        chosenProjectOwner: action.projectOwner,\n     });\n}\n\nconst addProject = (state, action) => {\n    let newProjectsList = [action.responsedNewProject, ...state.projects];\n    //console.log(newProjectsList)\n   // console.log(action.responsedNewProject)\n\n    return updateObject(state, {projects: newProjectsList, loaded: true });\n}\n\nconst addProjectInit = (state, action) => {\n    return updateObject(state, {loaded: false});\n}\n\nconst addProjectDone = (state, action) => {\n    return updateObject(state, {\n        loaded: true, \n        errorMessage:'',\n        modalDisplay: false});\n}\n\nconst addProjectFailed = (state,action) => {\n    //console.log(action.errorMessage.response.data.message)\n    return updateObject(state, {\n        errorMessage: action.errorMessage.response.data.message,\n    })\n}\n\nconst duplicateProject = (state, action) => {\n\n    // TO DO\n    return updateObject(state, {});\n}\n\nconst shareProject = (state, action) => {\n\n    // TO DO\n    return updateObject(state, {});\n}\n\nconst removeProject = (state, action) => {\n\n    const projectId = action.projectId;\n    const message = action.message;\n\n    //robie immutable removing project\n    const projects = [...state.projects];\n\n    //znajduje index projektu do usuniecia\n    let index = 0;\n    let updatedProjects = projects.map((project,i) => {\n        if(project._id !== projectId){\n            return project;\n        } \n        //jezeli znajdziemy to robimy update\n        index = i;\n    })\n\n    updatedProjects = [...updatedProjects.slice(0, index), ...updatedProjects.slice(index + 1)]\n\n    return updateObject(state, {\n        projects: updatedProjects\n    });\n}\n\n\nconst editNameFailed = (state, action) => {\n   const error = action.error;\n\n   \n   return updateObject(state, {errorMessage: error, error: true});\n}\n\nconst editName = (state, action) => {\n\n    const projectId = action.projectId;\n    const newProjectName = action.newProjectName;\n    const message = action.message;\n\n    console.log(projectId)\n    console.log(newProjectName)\n    console.log(message)\n\n    //robie immutable updating projektow\n    const projects = [...state.projects];\n    const updatedProjects = projects.map(project => {\n        if(project._id !== projectId){\n            return project;\n        }\n\n        //jezeli znajdziemy to robimy update\n        return {\n            ...project,\n            name: newProjectName\n        }\n    })\n\n    //console.log(state)\n    //console.log(\"Musze updatowac widok teraz!!!! w reducerze\")\n    \n    return updateObject(state, {\n        projects: updatedProjects,\n        errorMessage: '', \n        error: false});\n}\n\n//pobieranie listy projektow\nconst getProjectsListFailed = (state, action) => {\n     console.log(action)\n    return updateObject(state, { \n        error: true, \n        loaded: false,\n        errorMessage: action.errorMessage });\n}\n\nconst getProjectsList = (state, action) => {\n    //console.log(action)\n\n    return updateObject(state,\n        {\n            projects: action.projects,\n            error: false,\n            projectsLoading: false,\n        });\n\n}\n\nconst openModal = (state, action) => {\n    return updateObject(state,\n        {\n            modalDisplay: true,\n            localAction: action.localActionType,\n            projectId: action.projectId,\n            projectName: action.projectName\n        });\n}\n\nconst closeModal = (state, action) => {\n    return updateObject(state,\n        {\n            modalDisplay: false\n        });\n}\n\n\n\nconst projectsListReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case actionTypes.GET_PROJECTS_LIST: return getProjectsList(state, action);\n        case actionTypes.GET_PROJECTS_LIST_FAILED: return getProjectsListFailed(state, action);\n        case actionTypes.CHOSE_PROJECT: return choseProject(state, action);\n        case actionTypes.ADD_PROJECT_INIT: return addProjectInit(state, action);\n        case actionTypes.ADD_PROJECT_DONE: return addProjectDone(state, action);\n        case actionTypes.ADD_PROJECT: return addProject(state, action);\n        case actionTypes.ADD_PROJECT_FAILED: return addProjectFailed(state, action);\n        case actionTypes.DUPLICATE_PROJECT: return duplicateProject(state, action);\n        case actionTypes.SHARE_PROJECT: return shareProject(state, action);\n        case actionTypes.REMOVE_PROJECT: return removeProject(state, action);\n        case actionTypes.EDIT_NAME: return editName(state, action);\n        case actionTypes.EDIT_NAME_FAILED: return editNameFailed(state, action);\n        case actionTypes.OPEN_MODAL: return openModal(state, action);\n        case actionTypes.CLOSE_MODAL: return closeModal(state, action);\n        \n    }\n\n    return state;\n}\n\nexport default projectsListReducer;\n\n","import * as actionTypes from '../../actions/actionsTypes';\nimport {updateObject} from '../../utility';\n//import { removeRecognitionItem } from '../../actions';\n\n\nconst initialState = {\n    filesToUpload: [], \n    //w formacie np. \n    // [{\n        // file: File {name: \"__mowa16000.wav\", lastModified: 1560968256333, lastModifiedDate: Wed Jun 19 2019 20:17:36 GMT+0200 (Central European Summer Time), webkitRelativePath: \"\", size: 1235820, …}\n        // id: \"01f0a209-a29f-407a-9b8a-12cdebd1e1fd\"\n        // loadedperc: 0\n        // status: \"toload\"\n    // }]\n    modal: false, //controls if modal window is opened\n    recoFileForPreview: '', //indicates which file is chosen for preview\n}\n\nconst clearRecoStore = (state,action) => {\n    return updateObject(state, {\n        filesToUpload: [], \n        modal: false, \n        recoFileForPreview: '', \n    });  \n}\n\nconst openModal = (state,action) => {\n    return updateObject(state, {\n        modal: true,\n    }) ;  \n}\n\nconst closeModal = (state,action) => {\n    return updateObject(state, {\n        modal: false,\n    }) ;  \n}\n\n\n\nconst dropFiles = (state, action) => {\n    let fileList = [...state.filesToUpload, ...action.files];\n    //console.log(\"DONEEEEE\");\n    //console.log(fileList);\n    return updateObject(state, {filesToUpload: fileList}) ;      \n}\n\nconst initFileRecognition = (state,action) => {\n\n    // to do\n    return updateObject(state, {}) ;  \n}\n\n//rozpoczynam wysylke na serwer i przetwarzanie rozpoznawania\nconst initBatchRecognition = (state,action) => {\n\n    \n    console.log(\"INIT BATCH RECOGNITION\")\n    //jezali jest jakikolwiek plik do wyslania\n    if(state.filesToUpload.length > 0) {\n        return updateObject(state, {});\n    } else {\n        return updateObject(state, {}); \n    }\n}\n\nconst updateFileState = (state,action) => {\n\n            const fileID = action.fileID;\n            const status = action.status;\n            const percLoaded = action.percLoaded;\n\n            let currentfileList = [...state.filesToUpload];\n\n            for (var i = 0; i < currentfileList.length; i++) {\n                if (currentfileList[i].id === fileID) {\n                    let updatedEntry = Object.assign({},currentfileList.find(obj => obj.id == fileID));\n                    updatedEntry.status = status;\n                    currentfileList[i] = updatedEntry;\n                    break;\n                }\n            }\n\n    return updateObject(state, { filesToUpload: currentfileList}) ;  \n}\n\nconst removeRecognitionItem = (state, action)=>{\n    const itemId = action.fileId;\n\n    const newFilesToUpload = state.filesToUpload.filter((item, index) => {\n        return item.id !== itemId\n    })\n    \n    return updateObject(state, { filesToUpload: newFilesToUpload}) ; \n\n}\n\nconst openAudioRecPreview = (state, action) => {\n    const entryId = action.fileID;\n\n    //znajduje pozycje w filesToUpload aby wyciagnac z niej plik audio\n\n    let foundEntry = state.filesToUpload.find(obj => obj.id == entryId);\n    console.log(foundEntry.file)\n\n    return updateObject(state, { recoFileForPreview: foundEntry.file}) ; \n\n}\n\nconst recognitionReducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.DROP_FILES: return dropFiles(state, action);\n        case actionTypes.INIT_BATCH_RECOGNITION: return initBatchRecognition(state,action);\n        case actionTypes.INIT_FILE_RECOGNITION: return initFileRecognition(state,action);\n        case actionTypes.UPDATE_FILE_STATE: return updateFileState(state, action);\n        case actionTypes.REMOVE_RECOGNITION_ITEM: return removeRecognitionItem(state,action);\n        case actionTypes.OPEN_AUDIO_RECOGNITION_PREVIEW: return openAudioRecPreview(state, action);\n        case actionTypes.CLEAR_RECO_STORE: return clearRecoStore(state, action);\n    }\n\n    return state;\n}\n\n\n\nexport default recognitionReducer;","import * as actionTypes from '../../actions/actionsTypes';\nimport uuid from 'uuid';\nimport { updateObject } from '../../utility';\n\n\nconst initialState = {\n    segmentEntry: [],\n    audioList: [],\n    txtList: [],\n}\n\nconst clearSegmentStore = (state,action) => {\n    return updateObject(state, {\n        segmentEntry: [],\n        audioList: [],\n        txtList: [],\n    });\n}\n\nconst dropAudioFiles = (state, action) => {\n\n    let SegmentEntryList = [];\n\n    const AudioFileList = [...state.audioList, ...action.audioFiles];\n\n    // forming segment Entry as Array of {audioFile, txtfile}\n\n    //OK\n    if (AudioFileList.length >= state.txtList.length) {\n     \n        //make txtArray equally length\n        const ilebrakuje = AudioFileList.length - state.txtList.length;\n        let txtArray = [...state.txtList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = AudioFileList.map((audioentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let txtItem = txtArray[i];\n            //console.log(txtItem)\n            if(txtItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n            //console.log(status)\n            return ({\n                audioEntry: Object.assign({}, audioentry),\n                txtEntry: Object.assign({}, txtItem),\n                status: status, //status if audio and text together\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    } else {\n        \n        //make txtArray equally length\n        const ilebrakuje = state.txtList.length - AudioFileList.length;\n        let audioArray = [...AudioFileList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = state.txtList.map((txtentry, i) => {\n\n            let status = 'novalid';\n            let audioItem = audioArray[i];\n            //console.log(txtItem)\n            if(audioItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioArray[i]),\n                txtEntry: Object.assign({}, txtentry),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    }\n\n    //console.log(SegmentEntryList)\n\n\n    return updateObject(state, {\n        audioList: AudioFileList,\n        segmentEntry: SegmentEntryList\n    });\n}\n\n\nconst dropTxtFiles = (state, action) => {\n\n    let SegmentEntryList = [];\n\n    const TxtFileList = [...state.txtList, ...action.txtFiles];\n\n    // forming segment Entry as Array of {audioFile, txtfile}\n\n    if (TxtFileList.length >= state.audioList.length) {\n\n        //make txtArray equally length\n        const ilebrakuje = TxtFileList.length - state.audioList.length;\n        let audioArray = [...state.audioList, ...new Array(ilebrakuje)];\n        \n\n        SegmentEntryList = TxtFileList.map((txtentry, i) => {\n\n            let status = 'novalid';\n            let audioItem = audioArray[i];\n            //console.log(txtItem)\n            if(audioItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioArray[i]),\n                txtEntry: Object.assign({}, txtentry),\n                status:status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    } else {\n        //make txtArray equally length\n        const ilebrakuje = state.audioList.length - TxtFileList.length;\n        let txtArray = [...TxtFileList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = state.audioList.map((audioentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let txtItem = txtArray[i];\n            //console.log(txtItem)\n            if(txtItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioentry),\n                txtEntry: Object.assign({}, txtArray[i]),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    }\n\n    //console.log(SegmentEntryList)\n\n\n\n    return updateObject(state, {\n        txtList: TxtFileList,\n        segmentEntry: SegmentEntryList\n    });\n}\n\nconst changeAudioListOrder = (state, action) => {\n\n    let SegmentEntryList = [];\n\n    //receiving the ids as array in custome order\n    const idsAudioOrder = action.audioIdsOrder;\n\n    //not rearrange the audioList according to the idsOrder...\n    const newAudioList = idsAudioOrder.map(id => {\n        return (\n            Object.assign({},\n                state.audioList.find(elem => elem.id === id)\n            )\n        )\n    });\n\n\n    if (newAudioList.length >= state.txtList.length) {\n\n        //make txtArray equally length\n        const ilebrakuje = newAudioList.length - state.txtList.length;\n        let txtArray = [...state.txtList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = newAudioList.map((audioentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let txtItem = txtArray[i];\n            //console.log(txtItem)\n            if(txtItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioentry),\n                txtEntry: Object.assign({}, txtArray[i]),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    } else {\n        //make txtArray equally length\n        const ilebrakuje = state.txtList.length - newAudioList.length;\n        let audioArray = [...newAudioList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = state.txtList.map((txtentry, i) => {\n\n             //status to tell if entry has both audio and txt\n             let status = 'novalid';\n             let audioItem = audioArray[i];\n            \n             if(audioItem===undefined){\n                 status = 'novalid';\n             } else {\n                 status = 'valid';\n             }\n\n            return ({\n                audioEntry: Object.assign({}, audioArray[i]),\n                txtEntry: Object.assign({}, txtentry),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    }\n\n    // console.log(SegmentEntryList)\n\n\n    return updateObject(state, {\n        audioList: newAudioList,\n        segmentEntry: SegmentEntryList\n    });\n\n}\n\n\n\nconst changeTxtListOrder = (state, action) => {\n\n    let SegmentEntryList = [];\n    \n    //receiving the ids as array in custome order\n    const idsTxtOrder = action.txtIdsOrder;\n\n    //not rearrange the audioList according to the idsOrder...\n    const newTxtList = idsTxtOrder.map(id => {\n        return (\n            Object.assign({},\n                state.txtList.find(elem => elem.id === id)\n            )\n        )\n    });\n\n\n    if (newTxtList.length >= state.audioList.length) {\n\n        //make txtArray equally length\n        const ilebrakuje = newTxtList.length - state.audioList.length;\n        let audioArray = [...state.audioList, ...new Array(ilebrakuje)];\n\n        SegmentEntryList = newTxtList.map((txtentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let audioItem = audioArray[i];\n           \n            if(audioItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n            return ({\n                audioEntry: Object.assign({}, audioArray[i]),\n                txtEntry: Object.assign({}, txtentry),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n\n            }\n            );\n        });\n    } else {\n        //make txtArray equally length\n        const ilebrakuje = state.audioList.length - newTxtList.length;\n        let txtArray = [...newTxtList, ...new Array(ilebrakuje)];\n\n        console.log(txtArray)\n\n        SegmentEntryList = state.audioList.map((audioentry, i) => {\n\n            //status to tell if entry has both audio and txt\n            let status = 'novalid';\n            let txtItem = txtArray[i];\n           \n            if(txtItem===undefined){\n                status = 'novalid';\n            } else {\n                status = 'valid';\n            }\n\n\n            return ({\n                audioEntry: Object.assign({}, audioentry),\n                txtEntry: Object.assign({}, txtArray[i]),\n                status: status,\n                processingStatus: 'prepared', \n                id: uuid.v4()\n            }\n            );\n        });\n    }\n\n    //console.log(SegmentEntryList)\n    return updateObject(state, {\n        txtList: newTxtList,\n        segmentEntry: SegmentEntryList\n    });\n}\n\n\n\n// const initBatchSegmentation = (state,action) => {\n\n//     // to do\n//     return updateObject(state, {}) ;  \n// }\n\nconst initFileSegmentation = (state,action) => {\n    const entryId = action.entryId;\n \n    let newSegmentEntry = state.segmentEntry.map((entry, i) => {\n        //status to tell if entry has both audio and txt\n        let newEntry = Object.assign({}, entry);\n       if(newEntry.id === entryId){\n            newEntry.processingStatus = 'inProgress';\n       }\n\n       return newEntry;\n    });\n\n    return updateObject(state, {segmentEntry: newSegmentEntry}) ;  \n}\n\nconst removeSegmentEntry = (state,action) => {\n    const entryId = action.entryId;\n\n    let entryAudioId = '';\n    let entryTxtId = '';\n    const newsegmentEntry = state.segmentEntry.filter((item, index) => {\n        //zapisuje z jakich elementow sklada sie segmentEntry\n        if(item.audioEntry !== undefined) entryAudioId = item.audioEntry.id;\n        if(item.txtEntry !== undefined) entryTxtId = item.txtEntry.id;\n        \n        return item.id !== entryId\n    })\n\n    /*\n    const newAudioList = state.audioList.filter((item, index) => {\n        if(entryAudioId !== ''){\n            return  item.id !== entryAudioId;\n        } else {\n            return true;\n        }\n    })\n\n    const newtxtList = state.txtList.filter((item, index) => {\n        if(entryTxtId !== ''){\n            return  item.id !== entryTxtId;\n        } else {\n            return true;\n        }\n    })\n    */\n\n\n    return updateObject(state, {\n        segmentEntry: newsegmentEntry,\n       // audioList: newAudioList,\n       // txtList: newtxtList,\n    }) ; \n}\n\nconst fileSegmentationSuccess = (state,action) => {\n    const entryId = action.entryId;\n    //znajduje to entry i ustawiam mu odpowiedni status processingStatus\n    console.log(entryId)\n    let newSegmentEntry = state.segmentEntry.map((entry, i) => {\n        //status to tell if entry has both audio and txt\n        let newEntry = Object.assign({}, entry);\n       if(newEntry.id === entryId){\n            newEntry.processingStatus = 'done';\n       }\n\n       return newEntry;\n    });\n\n    console.log(newSegmentEntry)\n\n    return updateObject(state, {segmentEntry: newSegmentEntry}) ;  \n}\n\nconst fileSegmentationFailed = (state,action) => {\n    const entryId = action.entryId;\n    //znajduje to entry i ustawiam mu odpowiedni status processingStatus\n\n    let newSegmentEntry = state.segmentEntry.map((entry, i) => {\n        //status to tell if entry has both audio and txt\n        let newEntry = Object.assign({}, entry);\n       if(newEntry.id === entryId){\n            newEntry.processingStatus = 'error';\n       }\n\n       return newEntry;\n    });\n\n    return updateObject(state, {segmentEntry: newSegmentEntry}) ;  \n}\n\nconst segmentationReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case actionTypes.DROP_AUDIO_FILES: return dropAudioFiles(state, action);\n        case actionTypes.DROP_TXT_FILES: return dropTxtFiles(state, action);\n        case actionTypes.CHANGE_AUDIO_LIST_ORDER: return changeAudioListOrder(state, action);\n        case actionTypes.CHANGE_TXT_LIST_ORDER: return changeTxtListOrder(state, action);\n        //case actionTypes.INIT_BATCH_SEGMENTATION: return initBatchSegmentation(state, action);\n        case actionTypes.INIT_FILE_SEGMENTATION: return initFileSegmentation(state,action);\n        case actionTypes.REMOVE_SEGMENT_ENTRY: return removeSegmentEntry(state,action);\n        case actionTypes.CLEAR_SEGMENT_STORE: return clearSegmentStore(state, action);\n        case actionTypes.FILE_SEGMENTATION_SUCCESS: return fileSegmentationSuccess(state,action);\n        case actionTypes.FILE_SEGMENTATION_FAILED: return fileSegmentationFailed(state,action);\n    }\n\n    return state;\n}\n\nexport default segmentationReducer;\n\n","import * as actionTypes from '../../actions/actionsTypes';\nimport {updateObject} from '../../utility';\n\n\nconst initialState = {\n\n    txtContent: '',\n    txtDisplayed: false,\n    txtfileName: '',\n    txtFileUrl: '',\n\n    audiofileName: '',\n    audioDisplayed: false,\n    audioFileUrl: '',\n    waveSurferLoaded: false, //indicates when the waveSurfer is initialized\n\n    playing: false, //if playing....\n\n}\n\nconst clearPreviewStore = (state,action) => {\n    return updateObject(state, {\n        txtContent: '',\n        txtDisplayed: false,\n        txtfileName: '',\n        txtFileUrl: '',\n    \n        audiofileName: '',\n        audioDisplayed: false,\n        audioFileUrl: '',\n        waveSurferLoaded: false, \n    \n        playing: false, \n    }) ; \n}\n\n//zwraca rozszerzenie pliku\nconst getExt = (path) => {\n    return (path.match(/(?:.+..+[^\\/]+$)/ig) != null) ? path.split('.').slice(-1)[0]: 'null';\n}\n\nconst updateAudioPreview = (state, action) => {\n    return updateObject(state, {\n        //audiofileName: action.fileKey,\n        //txtfileName: action.fileName,\n        audioDisplayed: true,\n    }) ;      \n}\n\n\nconst updateTxtPreview = (state, action) => {\n    return updateObject(state, {\n        txtContent: action.newContent,\n        //txtfileName: action.fileName,\n        txtDisplayed: true,\n    }) ;      \n}\n\n\n\nconst openFilePreview = (state,action) => {\n\n    const fileKey = action.fileKey;\n    const fileUrl = action.fileUrl;\n    const fileExt = getExt(fileKey);\n\n\n    if(fileExt === 'txt' ||\n       fileExt === 'ctm' ){\n        return updateObject(state, {\n            txtfileName: fileKey,\n            txtFileUrl: fileUrl,\n            txtDisplayed: false,\n        })\n    } else if(fileExt === 'wav' ||\n              fileExt === 'mp3' ||\n              fileExt === 'au'  ){\n        \n        return updateObject(state, {\n            audiofileName: fileKey,\n            audioFileUrl: fileUrl,\n            audioDisplayed: false,\n        })\n\n    }\n}\n\nconst waveSurferLoaded = (state, action) => {\n    return updateObject(state, {\n        waveSurferLoaded: action.ifYes,\n    })\n}\n\nconst togglePlayingPreview = (state, action) => {\n    if(state.playing){\n        return updateObject(state, {\n            playing: false\n        })\n    } else {\n        return updateObject(state, {\n            playing: true\n        })\n    }\n}\n\nconst previewReducer = (state = initialState, action) => {\n    switch(action.type){\n        case actionTypes.UPDATE_TXT_PREVIEW: return updateTxtPreview(state, action);\n        case actionTypes.UPDATE_AUDIO_PREVIEW: return updateAudioPreview(state, action);\n        case actionTypes.OPEN_FILE_PREVIEW: return openFilePreview(state,action);\n        case actionTypes.WAVESURFER_LOADED: return waveSurferLoaded(state,action);\n        case actionTypes.TOGGLE_PLAYING_PREVIEW: return togglePlayingPreview(state,action);\n        case actionTypes.CLEAR_PREVIEW_STORE: return clearPreviewStore(state, action);\n    }\n\n    return state;\n}\n\n\n\nexport default previewReducer;","import * as actionTypes from '../../store/actions/actionsTypes';\nimport Moment from 'moment';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    errorMessage: '',\n    error: false,\n    files: [],\n    // files: [\n    //     {\n    //       key: 'cat in a hat.mp3',\n    //       modified: +Moment().subtract(1, 'hours'),\n    //       size: 1.5 * 1024 * 1024,\n    //       url: ????\n    //     },\n    //     {\n    //       key: 'photos/animals/kitten_ball.png',\n    //       modified: +Moment().subtract(3, 'days'),\n    //       size: 545 * 1024,\n    //     },\n    //   ],\n}\n\n//##########################################\n//############ tworzenie nowego folderu\n//#########################################\n\nconst repoCreateFolder = (state, action) => {\n\n    const key = action.key;\n\n    const newfiles = state.files.concat([{key: key, }]);\n\n    return updateObject(state,\n        {files: newfiles});\n\n    // handleCreateFolder = (key) => {\n        //     this.setState(state => {\n        //       state.files = state.files.concat([{\n        //         key: key,\n        //       }])\n        //       return state\n        //     })\n        //   }\n}\n\nconst repoCreateFiles = (state, action) => {\n\n    const files = action.files;\n    const prefix = action.prefix;\n   \n    return updateObject(state,\n        {});\n\n         // handleCreateFiles = (files, prefix) => {\n\t// \tthis.setState(state => {\n\t// \t  const newFiles = files.map((file) => {\n\t// \t\tlet newKey = prefix\n\t// \t\tif (prefix !== '' && prefix.substring(prefix.length - 1, prefix.length) !== '/') {\n\t// \t\t  newKey += '/'\n\t// \t\t}\n\t// \t\tnewKey += file.name\n\t// \t\treturn {\n\t// \t\t  key: newKey,\n\t// \t\t  size: file.size,\n\t// \t\t  modified: +Moment(),\n\t// \t\t}\n\t// \t  })\n\t\n\t// \t  const uniqueNewFiles = []\n\t// \t  newFiles.map((newFile) => {\n\t// \t\tlet exists = false\n\t// \t\tstate.files.map((existingFile) => {\n\t// \t\t  if (existingFile.key === newFile.key) {\n\t// \t\t\texists = true\n\t// \t\t  }\n\t// \t\t})\n\t// \t\tif (!exists) {\n\t// \t\t  uniqueNewFiles.push(newFile)\n\t// \t\t}\n\t// \t  })\n\t// \t  state.files = state.files.concat(uniqueNewFiles)\n\t// \t  return state\n\t// \t})\n\t//   }\n}\n\n\n//##########################################\n//############ zmiana nazwy folderu w repo\n//#########################################\n\nconst repoRenameFolder = (state, action) => {\n\n    const oldKey = action.oldKey;\n    const newKey = action.newKey;\n\n    console.log('ZMIOANA NAZWY FOLDERU')\n\n    const newFiles = [];\n    state.files.map((file) => {\n\n        if(oldKey !== newKey){\n            newFiles.push({\n                ...file,\n                key: file.key.replace(oldKey, newKey),\n                modified: +Moment(),\n            })\n        }\n    })\n    \n    return updateObject(state,\n        {files: newFiles});\n    \n\n    // handleRenameFolder = (oldKey, newKey) => {\n\t// \tthis.setState(state => {\n\t// \t  const newFiles = []\n\t// \t  state.files.map((file) => {\n\t// \t\tif (file.key.substr(0, oldKey.length) === oldKey) {\n\t// \t\t  newFiles.push({\n\t// \t\t\t...file,\n\t// \t\t\tkey: file.key.replace(oldKey, newKey),\n\t// \t\t\tmodified: +Moment(),\n\t// \t\t  })\n\t// \t\t} else {\n\t// \t\t  newFiles.push(file)\n\t// \t\t}\n\t// \t  })\n\t// \t  state.files = newFiles\n\t// \t  return state\n\t// \t})\n\t//   }\n}\n\n//##########################################\n//############ zmiana nazwy pliku w repo\n//#########################################\n\nconst repoRenameFile = (state, action) => {\n\n    const oldKey = action.oldKey;\n    const newKey = action.newKey;\n\n    const newFiles = [];\n    \n    state.files.map((file) => {\n\t\tif (file.key === oldKey) {\n\t\t\tnewFiles.push({\n                ...file,\n                key: newKey,\n                modified: +Moment(),\n\t\t\t})\n\t\t} else {\n\t\t\t  newFiles.push(file)\n\t\t\t}\n\t\t})\n\t\t\n\n    return updateObject(state,\n        {files: newFiles});\n\n}\n\n//##########################################\n//############ usuwanie folderow z repo\n//#########################################\n\nconst repoDeleteFolder = (state, action) => {\n\n    const folderKey = action.folderKey;\n\n    const newFiles = [];\n    state.files.map((file) => {\n        if (file.key.substr(0, folderKey.length) !== folderKey) {\n            newFiles.push(file)\n        }\n    })\n    \n    return updateObject(state,\n        {files: newFiles});\n}\n\n\n//##########################################\n//############ usuwanie plikow z repo ######\n//##########################################\n\nconst repoDeleteFile = (state, action) => {\n\n    const fileKey = action.fileKey;\n\n    const newFiles = [];\n    state.files.map((file) => {\n        if (file.key !== fileKey) {\n            newFiles.push(file)\n        } else {\n            //jezeli jest usuniety z folderu to musze posotawic folder\n            let n = fileKey.lastIndexOf(\"/\");\n            //to oznacza ze plik jest w jakim podfoldrze\n            if(n > 1){\n               //wtedy zwracam tylko sam folder - bez pliku w nim\n               console.log(file)\n               let onlyFolders = file.key.substring(0,n+1);\n               console.log(onlyFolders)\n               file.key = onlyFolders;\n               newFiles.push(file);\n            }\n        }\n    })\n  \n    return updateObject(state,\n        {files: newFiles});\n}\n\nconst repoGetUserProjectFiles = (state, action) => {\n    const files = action.files;\n    return updateObject(state,\n        {files: files});\n}\n\nconst repoGetUserProjectFilesFailed = (state, action) => {\n    const error = action.error.toString();\n    return updateObject(state,\n        {errorMessage: error,\n        error: true});\n}\n\nconst repoReducer = (state = initialState, action) => {\n    switch(action.type){\n        //case actionTypes.REPO_UPLOAD_FILE: return repoUploadFile(state,action);\n        case actionTypes.REPO_CREATE_FOLDER: return repoCreateFolder(state,action);\n        case actionTypes.REPO_CREATE_FILES: return repoCreateFiles(state,action);\n        case actionTypes.REPO_RENAME_FOLDER: return repoRenameFolder(state,action);\n        case actionTypes.REPO_RENAME_FILE: return repoRenameFile(state,action);\n        case actionTypes.REPO_DELETE_FOLDER: return repoDeleteFolder(state,action);\n        case actionTypes.REPO_DELETE_FILE: return repoDeleteFile(state,action);\n        case actionTypes.REPO_GET_USER_PROJECT_FILES: return repoGetUserProjectFiles(state,action);\n        case actionTypes.REPO_GET_USER_PROJECT_FILES_FAILED: return repoGetUserProjectFilesFailed(state,action);\n\n    }\n\n    return state;\n}\n\nexport default repoReducer;","import * as actionTypes from '../actions/actionsTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    currentProjectID: '',\n    currentProjectName: '',\n    currentProjectOwner: '',\n\n    modal: false,  // keeps if moda should be opened\n}\n\nconst initProject = (state, action) => {\n    return updateObject(state,\n        {\n            currentProjectID: action.projectId,\n            currentProjectName: action.projectTitle,\n            currentProjectOwner: action.projectOwner,\n        });\n}\n\nconst openModalProject = (state, action) => {\n    return updateObject(state,\n        {\n            modal: true\n        });\n}\n\nconst closeModalProject = (state, action) => {\n    return updateObject(state,\n        {\n            modal: false\n        });\n}\n\n\n\nconst projectReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case actionTypes.INIT_PROJECT: return initProject(state, action);\n        case actionTypes.OPEN_MODAL_PROJECT: return openModalProject(state, action);\n        case actionTypes.CLOSE_MODAL_PROJECT: return closeModalProject(state, action);\n\n\n    }\n\n    return state;\n}\n\nexport default projectReducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport homeReducer from './store/reducers/homeReducer';\nimport projectsListReducer from './store/reducers/projectsListReducer';\nimport recognitionReducer from './store/reducers/toolsReducers/recognitionReducer';\nimport segmentationReducer from './store/reducers/toolsReducers/segmentationReducer';\nimport previewReducer from './store/reducers/toolsReducers/previewReducer';\nimport repoReducer from './store/reducers/repoReducer';\nimport thunk from 'redux-thunk';\nimport axios from 'axios';\nimport projectReducer from './store/reducers/projectReducer';\n\n//dev tools extensions instalation\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n//ustawiam domyslny adres dla API\naxios.defaults.baseURL = 'http://localhost:1234';\n//axios.defaults.headers.common['Authorization'] = 'AUTH TOKEN';\n//axios.defaults.headers.post['Content-Type'] = 'application/json';\n\nconst rootReducer = combineReducers({\n    homeR: homeReducer,\n    projectR: projectReducer,\n    prolistR: projectsListReducer,\n    recR: recognitionReducer,\n    segR: segmentationReducer,\n    repoR: repoReducer,\n    previewR: previewReducer,\n});\n\n\n// dla asynchronicznych zadan\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n        <Provider store={store}>\n            <BrowserRouter>\n                <App /> \n            </BrowserRouter>\n        </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}